"use strict";!function(){var t,e,i,s,r,n,a,o,h,l,c,u,d,f,p,m,v,g,w,y,x,k,P,T;t=function(){class t{static load(e,i){var s;return(s=t.cache[i])||((s=new t).load(e,i),t.cache[i]=s),s}load(t,e){return t.loadJson(e,t=>{this.data=t}),t.loadImage(e+".png",t=>{this.texture=t})}draw(t,e,i,s,r=0){var n;if(n=this.data)switch(e.constructor){case Object:t.drawImage(this.texture,e.x,e.y,e.w,e.h,i+e.cx,s+e.cy,e.w,e.h);break;case Array:this.draw(t,e[Math.floor(r)%e.lenght],i,s);break;case String:this.draw(t,n[e],i,s,r)}return this}}return t.cache=[],t}.call(void 0),i=function(){class t{static load(e,i){var s;return(s=t.cache[i])||((s=new t).load(e,i),t.cache[i]=s),s}load(t,e){return t.loadJson(e,t=>{var e,i,s;if(t){for(e in i=[],t)s=t[e],i.push(this[e]=s);return i}})}}return t.cache=[],t}.call(void 0),s=function(){return(new Date).getTime()/1e3},n=function(t){return function(e){return 1-t(1-e)}},r=function(t){return function(e){return e<.5?t(2*e)/2:(2-t(2*(1-e)))/2}},a=function(t,e){return o[t]=e,o[t+"EaseOut"]=n(e),o[t+"EaseInOut"]=r(e)},o={linear:function(t){return t},easeOut:function(t){return 1-t},easeInOut:function(t){return t<.5?2*t:2-2*t}},a("quad",(function(t){return t*t})),a("circle",(function(t){return 1-Math.sin(Math.acos(t))})),a("bounce",(function(t){var e,i;for(e=0,i=1;;){if(t>=(7-4*e)/11)return-Math.pow((11-6*e-11*t)/4,2)+Math.pow(i,2);e+=i,i/=2}})),e=function(){class t{reset(){return this.startTime=s(),this.deltaTime=0,this}setAnim(t,e=0,i=this.data){return this.anim=null!=i?i[t]:void 0,this.reset(),this.anim&&(this.duration=this.anim?this.anim.duration:0,this.setAngle(e)),this}setAngle(t){var e,i,s;return this.frame=null,this.anim&&(t%=360,(i=this.anim.dirs)&&((s=i.lenght)>1?(e=360/s,t<0&&(t+=360),this.frame=i[Math.floor(t/e)]):this.frame=i[0])),this}play(t){var e,i;if(t=t||s(),this.deltaTime=e=(t-this.startTime)*this.scale,!(i=this.duration))return!1;if(e>i){if(!this.loop)return!1;this.deltaTime%=i}return!0}animate(e,i=e.nodePath,s=e.nodeName){var r,n,a,h,l,c,u,d,f,p,m,v,g,w,y;if((n=this.frame)&&(w=n[i]||n[s]))for(r=this.deltaTime,d=t.props,f=t.propsUsed,a=0,h=w.length;a<h;a++)if(r>=(c=w[a]).end)for(l in p=c.to)y=p[l],f[l]||(d[l]=e[l],f[l]=!0),e[l]=y;else if(r>=c.start)for(l in v=c.func?o[c.func]:o.linear,m=c.to)y=m[l],u=e[l],f[l]||(d[l]=u,f[l]=!0),u||(u=0),y.constructor===Number?(g=v((r-c.start)/(c.end-c.start)),e[l]=(y-u)*g+u):e[l]=y;return this}reciveProps(e){var i,s,r;for(i in s=t.props,r=t.propsUsed)r[i]&&(e[i]=s[i],r[i]=!1);return this}createWorkFrame(){return this.loop=!1,this.frame={work:[{start:0,end:0,to:{}}]},this}resetWork(){var e,i;for(e in i=t.propsUsed)i[e]&&(i[e]=!1);return this}clearWork(){var t,e,i;return(t=this.frame.work[0]).start=t.end=0,i=function(){var t;for(e in t=[],i)i[e],t.push(delete i[e]);return t}(),this}animateProps(t,e,i){var s,r,n,a;for(r in this.duration=e,(s=this.frame.work[0]).end=e,s.func=i,a=s.to,t)n=t[r],a[r]=n;return this.reset(),this}}return t.getTime=s,t.prototype.loop=!0,t.prototype.startTime=0,t.prototype.duration=0,t.prototype.deltaTime=0,t.prototype.scale=1,t.props=[],t.propsUsed=[],t}.call(void 0),l=function(){class e{static load(t,i){var s;return(s=e.cache[i])||((s=new e).load(t,i),e.cache[i]=s),s}load(i,s){return i.loadJson(s,s=>{var r,n,a,o,h,l,c,u,d,f,p,m,v,g;if(s){for(o in s)g=s[o],this[o]=g;if(this.images)for(o in n=this.images,this.images=[],n)r=n[o],this.images[o]=i.loadImage(r);if(this.sprites)for(o in v=this.sprites,this.sprites=[],v)m=v[o],this.sprites[o]=t.load(i,m);if(this.models)for(o in c=this.models,this.models=[],c)l=c[o],this.models[o]=e.load(i,l);if(d=function(t,e=""){var i,s,r;for(i in r=[],t)(s=t[i]).nodePath=e+i,s.nodeName="@"+i,s.before&&d(s.before,s.nodePath+"<"),s.after?r.push(d(s.after,s.nodePath+">")):r.push(void 0);return r},this.dirs){for(p=[],a=0,h=(f=this.dirs).length;a<h;a++)u=f[a],p.push(d(u));return p}}})}}return e.cache=[],e}.call(void 0),m={line:function(t){return t.moveTo(this.x1||0,this.y1||0),t.lineTo(this.x2||0,this.y2||0),this},rect:function(t){return t.rect(this.x||0,this.y||0,this.width||1,this.height||1),this},rectRound:function(t){var e,i,s,r,n;return this.noClose=!1,r=this.x||0,n=this.y||0,s=this.width,e=this.height,s<2*(i=this.radius)&&(i=s/2),e<2*i&&(i=e/2),t.moveTo(r+i,n),t.arcTo(r+s,n,r+s,n+e,i),t.arcTo(r+s,n+e,r,n+e,i),t.arcTo(r,n+e,r,n,i),t.arcTo(r,n,r+s,n,i),this},arc:function(t){return t.arc(this.x||0,this.y||0,this.radius,(this.startAngle||0)*Math.PI/180,(this.endAngle||360)*Math.PI/180,!this.clockwise),this},elipse:function(t){return t.ellipse(this.x||0,this.y||0,this.rx,this.ry,(this.rotation||0)*Math.PI/180,(this.startAngle||0)*Math.PI/180,(this.endAngle||360)*Math.PI/180,!this.clockwise),this},path:function(t){var e,i,s;return i=this.x||0,s=this.y||0,"string"==typeof this.path&&(this.path=new Path2D(this.path)),this.noClose=!0,t.translate(i,s),"f"!==(e=this.draw||"f&s")&&"f&s"!==e||t.fill(this.path),"s"!==e&&"f&s"!==e||t.stroke(this.path),this},node:function(t,e,i,s){var r,n,a,o,h,l,c,u,f;if(this.noClose=this.draw=!0,u=e.data,f=e.model,(a=s||(null!=(l=u.models)?l[this.model]:void 0))?(e.data=a,e.model=h=a.dirs[this.direction||0]):h="number"==typeof this.direction?e.data.dirs[this.direction]:e.model,h){if("string"==typeof(o=this.node))o=h[o];else{for(c=h,r=0,n=o.length;r<n;r++)c=c[o[r]];o=c}o&&(t.translate(this.x||0,this.y||0),d.call(o,t,e,i))}return e.model=f,e.data=u,this},attach:function(t,e,i){var s;return(s=e.attachment[this.attach])&&m.node.call(this,t,e,i,s),this},image:function(t,e){var i;return this.noClose=this.draw=!0,i=e.data.images[this.image],this.width||this.height?t.drawImage(i,this.x||0,this.y||0,this.width,this.height):t.drawImage(i,this.x||0,this.y||0),this},sprite:function(t,e){var i;return this.noClose=this.draw=!0,(i=this.sprite).constructor===String&&(this.sprite=i=e.data.sprites[i]),i.draw(t,this.frame,this.x||0,this.y||0,this.index),this},text:function(t){var e;return!0!==this.draw&&(this.drawText=this.draw),e=this.drawText,this.noClose=this.draw=!0,this.font&&(t.font=this.font),this.textAlign&&(t.textAlign=this.textAlign),null!==this.textBaseline&&(t.textBaseline=this.textBaseline),this.direction&&(t.direction=this.direction),"f"!==e&&"f&s"!==e||t.fillText(this.text,this.x||0,this.y||0,this.maxWidth),"s"!==e&&"f&s"!==e||t.strokeText(this.text,this.x||0,this.y||0,this.maxWidth),this}},w={linear:function(t){var e,i,s,r,n;for(i=t.createLinearGradient(this.x0||0,this.y0||0,this.x1||0,this.y1||0),s=0,r=(n=this.colorStops).length;s<r;s++)e=n[s],i.addColorStop(e.pos||0,e.color);return i},radial:function(t){var e,i,s,r,n;for(i=t.createRadialGradient(this.x0||0,this.y0||0,this.r0||0,this.x1||0,this.y1||0,this.r1||0),s=0,r=(n=this.colorStops).length;s<r;s++)e=n[s],i.addColorStop(e.pos||0,e.color);return i},pattern:function(t,e){var i;return i=e.data.images[this.image],t.createPattern(i,this.repetition||"repeat")}},v=function(t,e,i){var s;return null!=(s=w[i.type])?s.call(i,t,e):void 0},g=function(t,e){var i,s;return(s=this.stroke)&&(s.constructor===Object&&(this.stroke=v(t,e,s)),t.strokeStyle=this.stroke),(i=this.fill)&&(i.constructor===Object&&(this.fill=v(t,e,i)),t.fillStyle=this.fill),null!==this.lineWidth&&(t.lineWidth=this.lineWidth),null!==this.lineCap&&(t.lineCap=this.lineCap),this.lineJoin&&(t.lineJoin=this.lineJoin),null!==this.lineDashOffset&&(t.lineDashOffset=this.lineDashOffset),this},d=function(t,e,i){var s,r,n,a,o,l,c;if(t.save(),e.animation.animate(this),t.transform(this.scaleX||1,this.skewY||0,this.skewX||0,this.scaleY||1,this.origX||0,this.origY||0),(n=this.modelAngleScale)&&t.rotate(e.angle*n*Math.PI/180),this.angle&&t.rotate(this.angle*Math.PI/180),g.call(this,t,e),this.noShadow&&(t.shadowBlur=0,t.shadowOffsetX=0,t.shadowOffsetY=0),null!==this.shadowBlur&&(t.shadowBlur=this.shadowBlur),null!==this.shadowColor&&(t.shadowColor=this.shadowColor),null!==this.shadowOffsetX&&(t.shadowOffsetX=this.shadowOffsetX),null!==this.shadowOffsetY&&(t.shadowOffsetY=this.shadowOffsetY),t.globalAlpha=i*(null===this.opacity?1:this.opacity),this.before){for(r in e.animation.reciveProps(this),o=this.before)(a=o[r]).hide||d.call(a,t,e,i);e.animation.animate(this)}if(t.beginPath(),null!=(l=m[this.type])&&l.call(this,t,e,i),this.noClose||t.closePath(),"f"!==(s=this.draw||"f&s")&&"f&s"!==s||t.fill(),"s"!==s&&"f&s"!==s||t.stroke(),this.clip&&t.clip(),e.animation.reciveProps(this),this.after)for(r in c=this.after)(a=c[r]).hide||d.call(a,t,e,i);return h.drawOrigin&&(t.fillStyle="#f00",t.shadowBlur=0,t.shadowOffsetX=0,t.shadowOffsetY=0,t.fillRect(-2,-2,4,4)),t.restore(),this},p={poly:function(t,e,i,s){var r,n,a,o,h,l,d,f,p,m;for(o=e[this.verts[0]],l=i.x,f=i.y,m=c+i.z,p=((o.z||0)+m)*u,h=((o.x||0)+l)*p,d=((o.y||0)+f)*p,t.moveTo(h,d),r=n=1,a=this.verts.length-1;1<=a?n<=a:n>=a;r=1<=a?++n:--n)p=(((o=e[this.verts[r]]).z||0)+m)*u,h=((o.x||0)+l)*p,d=((o.y||0)+f)*p,t.lineTo(h,d);return this},part:function(t,e,i,s,r){var n,a,o,h,l,c,u,d,p,m,v,g;if(this.noClose=this.draw=!0,(l=null!=(d=(m=s.data).models)?d[this.model]:void 0)?(s.data=l,u=l.dirsParts[this.direction||0]):u=s.parts,u&&(g=e[this.vert],n={x:i.x+(g.x||0),y:i.y+(g.y||0),z:i.z+(g.z||0)},c=u[this.part])){for(v=s.parts,s.parts=u,o=0,h=(p=c.faces).length;o<h;o++)a=p[o],f.call(a,t,s,n,r);s.parts=v}return s.data=m,this},node:function(t,e,i,s,r){return x(e[this.vert],i).apply(t),m.node.call(this,t,s,r),this},attach:function(t,e,i){var s;return x(verts[this.vert],camera).apply(t),(s=e.attachment[this.attach])&&m.node.call(this,t,e,i,s),this},elipse:function(t,e,i){var s,r,n,a,o;return a=(n=x(e[this.vert1],i)).x,o=n.y,s=((n=x(e[this.vert2],i)).x-a)/2,r=(n.y-o)/2,t.ellipse(a+s,o+r,s,r,(this.rotation||0)*Math.PI/180,(this.startAngle||0)*Math.PI/180,(this.endAngle||360)*Math.PI/180,!this.clockwise),this}},f=function(t,e,i,s){var r,n;return t.save(),this.stroke,g.call(this,t,e),t.globalAlpha=s*(null===this.opacity?1:this.opacity),t.beginPath(),null!=(n=p[this.type||"poly"])&&n.call(this,t,e.data.verts,i,e,s),this.noClose||t.closePath(),"f"!==(r=this.draw||"f&s")&&"f&s"!==r||t.fill(),"s"!==r&&"f&s"!==r||t.stroke(),t.restore(),this},c=1/(u=2e-4),k={x:0,y:0,scale:1,apply:function(t){return t.transform(this.scale,0,0,this.scale,this.x,this.y)}},h=function(){class t{static transform(t,e,i,s){return i=(c+i+s.z)*u,k.x=(t+s.x)*i,k.y=(e+s.y)*i,k.scale=i,k}constructor(t){this.data=t}setData(t){return this.data=t,this.setAngle(this.angle)}setAngle(t){var e,i,s,r;return this.angle=t%=360,this.animation.setAngle(t),(i=this.data.dirs)?(s=i.length)>1?(e=360/s,t<0&&(t+=360),this.model=i[Math.floor(t/e)]):this.model=i[0]:this.model=null,(r=this.data.dirsParts)?(s=r.length)>1?(e=360/s,t<0&&(t+=360),this.parts=r[Math.floor(t/e)]):this.parts=r[0]:this.parts=null}draw2D(t,e=1){var i,s,r,n;if(this.model){for(i in n=[],r=this.model)(s=r[i]).hide?n.push(void 0):n.push(d.call(s,t,this,e));return n}}drawNode(t,e,i=1){if(this.model&&(e=this.model[e]))return d.call(e,t,this,i)}drawPart(t,e,i,s=1){var r,n,a,o,h;for(h=[],n=0,a=(o=e.faces).length;n<a;n++)r=o[n],h.push(f.call(r,t,this,i,s));return h}drawParts(t,e,i=1){var s,r,n,a,o;if(this.parts){for(s in o=[],a=this.parts)(n=a[s]).hide?o.push(void 0):o.push(function(){var s,a,o,h;for(h=[],s=0,a=(o=n.faces).length;s<a;s++)r=o[s],h.push(f.call(r,t,this,e,i));return h}.call(this));return o}}}return t.prototype.attachment=[],t.prototype.animation=new e,t.prototype.angle=0,t}.call(void 0),y=h.transform,x=function(t,e){return y(t.x||0,t.y||0,t.z||0,e)},P=function(){class t{on(t,e){var i;return e&&((i=this.handlers[t])||(this.handlers[t]=i=[]),i.indexOf(e)<0&&i.push(e)),this}off(t,e){var i,s;return e&&(i=this.handlers[t])&&(s=i.indexOf(e))>=0&&i.splice(s,1),this}trigger(t,e){var i,s,r;if(i=this.handlers[t])for(s=0,r=i.length;s<r;s++)i[s].apply(this,e);return this}removeEvent(t){return delete this.handlers[t],this}}return t.prototype.handlers=[],t}.call(void 0),T=function(){var t,e;return e=0,t=0,class extends P{reset(){return e=t=0}getPercent(){return 1-(0!==t?e/t:0)}updatePercent(){return this.trigger("changepercent",[this.getPercent()])}load(i){var s;return s=this,e++,t++,function(){return null!=i&&i.apply(s,arguments),--e<=0&&(s.reset(),s.trigger("load")),s.updatePercent()}}loadJson(t,e){return e=this.load(e),$.getJSON(t+".json").done(e).fail((function(){return e(null)}))}loadImage(t,e){var i;return e=this.load(e),(i=new Image).onload=function(){return e(i)},i.src=t,i}}}.call(void 0),$(document).ready((function(){var t,e,s,r,n,a,o,c,u,d,f,p,m,v,g,w,y,x,k;return t=$("#canvas"),n=t.get(0),a=n.getContext("2d",{alpha:!1}),m="models/test1",u=new T,f=new h,p=new l,e=null,s={canvas:n,g:a,x:0,y:0,z:0},(k=function(){return n.width=$(window).width(),n.height=$(window).height()-$("#canvas").offset().top})(),$(window).on("resize",k),v=function(){return p.load(u,m)},u.on("load",(function(){var t,i,s;if(f.setData(p),f.animation.data){for(t in(i=$(".js-frame-container")).empty(),s=f.animation.data)s[t],i.append(`<a class='dropdown-item js-frame-select' href='#'>${t}</a>`);return f.animation.setAnim(e,f.angle),$(".js-frame-select").click((function(){return e=$(this).text(),f.animation.setAnim(e,f.angle)}))}})),console.log(f),d=setInterval(v,500),(x=function(t){var e,i,r;return a.save(),r=n.width,i=n.height,e=r/2,0,a.fillStyle="#fff",a.fillRect(0,0,r,i),a.beginPath(),a.lineWidth=2,a.strokeStyle="#f00",a.moveTo(e,0),a.lineTo(e,i),a.moveTo(0,0),a.lineTo(r,0),a.stroke(),a.translate(e,0),f.animation.play(),f.drawParts(a,s),h.transform(0,0,0,s).apply(a),f.draw2D(a),a.restore(),window.requestAnimationFrame(x)})(0),w=y=0,g=function(t){return s.x+=t.clientX-w,s.y+=t.clientY-y,w=t.clientX,y=t.clientY},t.on("mousedown",(function(e){return w=e.clientX,y=e.clientY,t.on("mousemove",g)})),t.on("touchstart",(function(t){return w=t.touches[0].clientX,y=t.touches[0].clientY})),t.on("touchmove",(function(t){return g(t.touches[0])})),t.on("mouseup",(function(){return t.off("mousemove",g)})),$(".js-z-number").val(s.z).on("input change",(function(){return s.z=+$(this).val()})),$(".js-angle-number").val(f.angle).on("input change",(function(){return f.setAngle(+$(this).val())})),$(".js-model-select").click((function(){return p=new l,m=$(this).data("file")})),$(".js-anim-select").click((function(){var t;return t=$(this).data("file"),f.animation.data=new i,f.animation.data.load(u,t),$(".js-anim-refresh").data("file",t),$(".js-refresh-model").prop("checked",!1),clearInterval(d)})),h.drawOrigin=!0,$(".js-draw-origin").change((function(){return h.drawOrigin=$(this).prop("checked")})),$(".js-refresh-model").change((function(){return $(this).prop("checked")?d=setInterval(v,500):clearInterval(d)})),$(".js-reset-pos").click((function(){return s.x=s.y=s.z=0,$(".js-z-number").val("0")})),o=!1,$(".js-full-screen").click((function(){return o?r():c(document.documentElement),o=!o})),c=function(t){return t.requestFullScreen?t.requestFullScreen():t.mozRequestFullScreen?t.mozRequestFullScreen():t.webkitRequestFullScreen?t.webkitRequestFullScreen():void 0},r=function(){return document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen?document.webkitCancelFullScreen():void 0}}))}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNwcml0ZS5jb2ZmZWUiLCJhbmltYXRpb24uY29mZmVlIiwibW9kZWwuY29mZmVlIiwiZXZlbnRzLmNvZmZlZSIsImxvYWRlci5jb2ZmZWUiLCJtYWluLmNvZmZlZSJdLCJuYW1lcyI6WyJTcHJpdGUiLCJBbmltYXRpb24iLCJBbmltYXRpb25EYXRhIiwiZ2V0VGltZSIsIm1ha2VFYXNlSW5PdXQiLCJtYWtlRWFzZU91dCIsInNldFRpbWluZ0Z1bmN0aW9uIiwidGltaW5nRnVuY3Rpb25zIiwiTW9kZWwiLCJNb2RlbERhdGEiLCJaX09SSUdJTiIsIlpfVFJBTlNGT1JNIiwiZHJhd05vZGUiLCJkcmF3UGFydCIsImRyYXdQYXJ0VHlwZSIsImRyYXdUeXBlT2JqIiwiaW5pdFN0eWxlIiwic2V0RHJhd1N0eWxlIiwic3R5bGVUeXBlRnVuYyIsInRyYW5zZm9ybSIsInRyYW5zZm9ybVZlcnQiLCJ0cnNmT2JqIiwiRXZlbnRFbW1pdGVyIiwiTG9hZGVyIiwiW29iamVjdCBPYmplY3RdIiwibG9hZGVyIiwiZmlsZSIsInNwcml0ZSIsImNhY2hlIiwibG9hZCIsImxvYWRKc29uIiwiZGF0YTEiLCJ0aGlzIiwiZGF0YSIsImxvYWRJbWFnZSIsInRleHR1cmUiLCJnIiwiZnJhbWUiLCJ4IiwieSIsImluZGV4IiwiY29uc3RydWN0b3IiLCJPYmplY3QiLCJkcmF3SW1hZ2UiLCJ3IiwiaCIsImN4IiwiY3kiLCJBcnJheSIsImRyYXciLCJNYXRoIiwiZmxvb3IiLCJsZW5naHQiLCJTdHJpbmciLCJhbmltRGF0YSIsImtleSIsInJlc3VsdHMiLCJ2YWx1ZSIsIkRhdGUiLCJ0aW1pbmciLCJ0aW1lIiwibmFtZSIsImxpbmVhciIsImVhc2VPdXQiLCJlYXNlSW5PdXQiLCJzaW4iLCJhY29zIiwiYSIsImIiLCJwb3ciLCJzdGFydFRpbWUiLCJkZWx0YVRpbWUiLCJhbmdsZSIsImFuaW0iLCJyZXNldCIsImR1cmF0aW9uIiwic2V0QW5nbGUiLCJkQW5nbGUiLCJkaXJzIiwibiIsImRlbHRhIiwic2NhbGUiLCJsb29wIiwibm9kZSIsIm5vZGVQYXRoIiwibm9kZU5hbWUiLCJpIiwibGVuIiwicG9pbnQiLCJwcm9wIiwicHJvcHMiLCJwcm9wc1VzZWQiLCJyZWYiLCJyZWYxIiwidEZ1bmMiLCJ0aW1lc3RvcHMiLCJ0b1ZhbCIsImxlbmd0aCIsImVuZCIsInN0YXJ0IiwiZnVuYyIsIk51bWJlciIsIndvcmsiLCJ0byIsImFPYmoiLCJtb2RlbCIsImltYWdlIiwiaW1hZ2VzRGF0YSIsImoiLCJtb2RlbHNEYXRhIiwibm9kZXMiLCJub2Rlc0xvYWQiLCJzcHJpdGVzRGF0YSIsImltYWdlcyIsInNwcml0ZXMiLCJtb2RlbHMiLCJiZWZvcmUiLCJhZnRlciIsImxpbmUiLCJtb3ZlVG8iLCJ4MSIsInkxIiwibGluZVRvIiwieDIiLCJ5MiIsInJlY3QiLCJ3aWR0aCIsImhlaWdodCIsInJlY3RSb3VuZCIsInIiLCJub0Nsb3NlIiwicmFkaXVzIiwiYXJjVG8iLCJhcmMiLCJzdGFydEFuZ2xlIiwiUEkiLCJlbmRBbmdsZSIsImNsb2Nrd2lzZSIsImVsaXBzZSIsImVsbGlwc2UiLCJyeCIsInJ5Iiwicm90YXRpb24iLCJwYXRoIiwiUGF0aDJEIiwidHJhbnNsYXRlIiwiZmlsbCIsInN0cm9rZSIsIm9wYWNpdHkiLCJtIiwicm9vdCIsInREYXRhIiwidE1vZGVsIiwiZGlyZWN0aW9uIiwiY2FsbCIsImF0dGFjaCIsImF0dGFjaG1lbnQiLCJ0ZXh0IiwiZHJhd1RleHQiLCJmb250IiwidGV4dEFsaWduIiwidGV4dEJhc2VsaW5lIiwiZmlsbFRleHQiLCJtYXhXaWR0aCIsInN0cm9rZVRleHQiLCJjb2xvclN0b3AiLCJncmFkaWVudCIsImNyZWF0ZUxpbmVhckdyYWRpZW50IiwieDAiLCJ5MCIsImFkZENvbG9yU3RvcCIsInBvcyIsImNvbG9yIiwicmFkaWFsIiwiY3JlYXRlUmFkaWFsR3JhZGllbnQiLCJyMCIsInIxIiwicGF0dGVybiIsImNyZWF0ZVBhdHRlcm4iLCJyZXBldGl0aW9uIiwic3R5bGUiLCJzdHJva2VTdHlsZSIsImZpbGxTdHlsZSIsImxpbmVXaWR0aCIsImxpbmVDYXAiLCJsaW5lSm9pbiIsImxpbmVEYXNoT2Zmc2V0IiwibUFzY2FsZSIsInJlZjIiLCJzYXZlIiwiYW5pbWF0aW9uIiwiYW5pbWF0ZSIsInNjYWxlWCIsInNrZXdZIiwic2tld1giLCJzY2FsZVkiLCJvcmlnWCIsIm9yaWdZIiwibW9kZWxBbmdsZVNjYWxlIiwicm90YXRlIiwibm9TaGFkb3ciLCJzaGFkb3dCbHVyIiwic2hhZG93T2Zmc2V0WCIsInNoYWRvd09mZnNldFkiLCJzaGFkb3dDb2xvciIsImdsb2JhbEFscGhhIiwicmVjaXZlUHJvcHMiLCJoaWRlIiwiYmVnaW5QYXRoIiwiY2xvc2VQYXRoIiwiY2xpcCIsImRyYXdPcmlnaW4iLCJmaWxsUmVjdCIsInJlc3RvcmUiLCJwb2x5IiwidmVydHMiLCJjYW1lcmEiLCJ2IiwieGMiLCJ5YyIsInoiLCJ6dCIsInBhcnQiLCJjIiwiZmFjZSIsInBhcnRzIiwidFBhcnRzIiwiZGlyc1BhcnRzIiwidmVydCIsImFwcGx5IiwidmVydDEiLCJ2ZXJ0MiIsIl8iLCJldmVudCIsImNhbGxiYWNrIiwiaGFuZGxlciIsImhhbmRsZXJzIiwiaW5kZXhPZiIsInB1c2giLCJzcGxpY2UiLCJhcmdzIiwibG9hZFJlc051bWJlciIsImFsbFJlc0xvYWRlciIsInRyaWdnZXIiLCJnZXRQZXJjZW50IiwiX3RoaXMiLCJhcmd1bWVudHMiLCJ1cGRhdGVQZXJjZW50IiwiJCIsImdldEpTT04iLCJkb25lIiwiZmFpbCIsImltZyIsIkltYWdlIiwib25sb2FkIiwic3JjIiwiZG9jdW1lbnQiLCJyZWFkeSIsIiRjYW52YXMiLCJhbmltYXRpb25GcmFtZSIsImNhbmNlbEZ1bGxzY3JlZW4iLCJjYW52YXMiLCJjb250ZXh0IiwiZnVsbHNjcmVlbiIsImxhdW5jaEZ1bGxTY3JlZW4iLCJtUmVmcmVzaEludGVydmFsIiwibW9kZWxEYXRhIiwibW9kZWxGaWxlIiwibW9kZWxSZWZyZXNoIiwibW92ZUNhbWVyYSIsIm9sZE1vdXNlWCIsIm9sZE1vdXNlWSIsInJlbmRlciIsInJlc2l6ZSIsImdldCIsImdldENvbnRleHQiLCJhbHBoYSIsIndpbmRvdyIsIm9mZnNldCIsInRvcCIsIm9uIiwiY29udGFpbmVyIiwic2V0RGF0YSIsImVtcHR5IiwiYXBwZW5kIiwic2V0QW5pbSIsImNsaWNrIiwiY29uc29sZSIsImxvZyIsInNldEludGVydmFsIiwicGxheSIsImRyYXdQYXJ0cyIsImRyYXcyRCIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImUiLCJjbGllbnRYIiwiY2xpZW50WSIsInRvdWNoZXMiLCJvZmYiLCJ2YWwiLCJjbGVhckludGVydmFsIiwiY2hhbmdlIiwiZG9jdW1lbnRFbGVtZW50IiwiZWxlbWVudCIsInJlcXVlc3RGdWxsU2NyZWVuIiwibW96UmVxdWVzdEZ1bGxTY3JlZW4iLCJ3ZWJraXRSZXF1ZXN0RnVsbFNjcmVlbiIsImNhbmNlbEZ1bGxTY3JlZW4iLCJtb3pDYW5jZWxGdWxsU2NyZWVuIiwid2Via2l0Q2FuY2VsRnVsbFNjcmVlbiJdLCJtYXBwaW5ncyI6InlCQUFBLElBQUFBLEVDQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEVDQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEVDQUFDLEVDQUFDLEVKQU12QixFQUFBLFdBQU4sTUFBQUEsRUFHUXdCLFlBQUNDLEVBQVFDLE9BQ2ZDLFNBQUFBLEVBQVMzQixFQUFPNEIsTUFBTUYsT0FFckJDLEVBQVMsSUFBSTNCLEdBQ042QixLQUFLSixFQUFRQyxHQUNwQjFCLEVBQU80QixNQUFNRixHQUFRQyxHQUN0QkEsRUFFREgsS0FBT0MsRUFBUUMsVUFDZEQsRUFBT0ssU0FBU0osRUFBTUssSUFBQ0MsS0FBQ0MsS0FBQUYsSUFDeEJOLEVBQU9TLFVBQVVSLEVBQU8sT0FBUVMsSUFBQ0gsS0FBQ0csUUFBQUEsSUFF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LEVBQW1CLFdBQ2xCLE9BQUdKLFNBQVNtRCxpQkFDWG5ELFNBQVNtRCxtQkFDRm5ELFNBQVNvRCxvQkFDaEJwRCxTQUFTb0Qsc0JBQ0ZwRCxTQUFTcUQsdUJBQ2hCckQsU0FBU3FELDhCQURMIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBTcHJpdGVcclxuXHRAY2FjaGU6IFtdXHJcblxyXG5cdEBsb2FkOiAobG9hZGVyLCBmaWxlKSAtPlxyXG5cdFx0c3ByaXRlID0gU3ByaXRlLmNhY2hlW2ZpbGVdXHJcblx0XHR1bmxlc3Mgc3ByaXRlXHJcblx0XHRcdHNwcml0ZSA9IG5ldyBTcHJpdGVcclxuXHRcdFx0c3ByaXRlLmxvYWQgbG9hZGVyLCBmaWxlXHJcblx0XHRcdFNwcml0ZS5jYWNoZVtmaWxlXSA9IHNwcml0ZVxyXG5cdFx0c3ByaXRlXHJcblxyXG5cdGxvYWQ6IChsb2FkZXIsIGZpbGUpIC0+XHJcblx0XHRsb2FkZXIubG9hZEpzb24gZmlsZSwgKEBkYXRhKSA9PlxyXG5cdFx0bG9hZGVyLmxvYWRJbWFnZSBmaWxlICsgJy5wbmcnLCAoQHRleHR1cmUpID0+XHJcblxyXG5cdGRyYXc6IChnLCBmcmFtZSwgeCwgeSwgaW5kZXggPSAwKSAtPlxyXG5cdFx0ZGF0YSA9IEBkYXRhXHJcblx0XHRpZiBkYXRhXHJcblx0XHRcdHN3aXRjaCBmcmFtZS5jb25zdHJ1Y3RvclxyXG5cdFx0XHRcdHdoZW4gT2JqZWN0XHJcblx0XHRcdFx0XHRnLmRyYXdJbWFnZSBAdGV4dHVyZSxcclxuXHRcdFx0XHRcdFx0ZnJhbWUueCwgZnJhbWUueSwgZnJhbWUudywgZnJhbWUuaCxcclxuXHRcdFx0XHRcdFx0eCArIGZyYW1lLmN4LCB5ICsgZnJhbWUuY3ksIGZyYW1lLncsIGZyYW1lLmhcclxuXHRcdFx0XHR3aGVuIEFycmF5XHJcblx0XHRcdFx0XHRAZHJhdyBnLCBmcmFtZVtNYXRoLmZsb29yKGluZGV4KSAlIGZyYW1lLmxlbmdodF0sIHgsIHlcclxuXHRcdFx0XHR3aGVuIFN0cmluZ1xyXG5cdFx0XHRcdFx0QGRyYXcgZywgZGF0YVtmcmFtZV0sIHgsIHksIGluZGV4XHJcblx0XHR0aGlzXHJcblxyXG5leHBvcnQgeyBTcHJpdGUgfSIsImNsYXNzIEFuaW1hdGlvbkRhdGFcclxuXHRAY2FjaGU6IFtdXHJcblxyXG5cdEBsb2FkOiAobG9hZGVyLCBmaWxlKSAtPlxyXG5cdFx0YW5pbURhdGEgPSBBbmltYXRpb25EYXRhLmNhY2hlW2ZpbGVdXHJcblx0XHR1bmxlc3MgYW5pbURhdGFcclxuXHRcdFx0YW5pbURhdGEgPSBuZXcgQW5pbWF0aW9uRGF0YVxyXG5cdFx0XHRhbmltRGF0YS5sb2FkIGxvYWRlciwgZmlsZVxyXG5cdFx0XHRBbmltYXRpb25EYXRhLmNhY2hlW2ZpbGVdID0gYW5pbURhdGFcclxuXHRcdGFuaW1EYXRhXHJcblxyXG5cdGxvYWQ6IChsb2FkZXIsIGZpbGUpIC0+XHJcblx0XHRsb2FkZXIubG9hZEpzb24gZmlsZSwgKGRhdGEpID0+XHJcblx0XHRcdGlmIGRhdGFcclxuXHRcdFx0XHRmb3Iga2V5LCB2YWx1ZSBvZiBkYXRhXHJcblx0XHRcdFx0XHR0aGlzW2tleV0gPSB2YWx1ZVxyXG5cclxuZ2V0VGltZSA9IC0+XHJcblx0bmV3IERhdGUoKS5nZXRUaW1lKCkgLyAxMDAwXHJcblxyXG5tYWtlRWFzZU91dCA9ICh0aW1pbmcpIC0+XHJcblx0KHRpbWUpIC0+XHJcblx0XHQxIC0gdGltaW5nKDEgLSB0aW1lKVxyXG5cclxubWFrZUVhc2VJbk91dCA9ICh0aW1pbmcpIC0+XHJcblx0KHRpbWUpIC0+XHJcblx0XHRpZiB0aW1lIDwgMC41XHJcblx0XHRcdHRpbWluZygyICogdGltZSkgLyAyXHJcblx0XHRlbHNlXHJcblx0XHRcdCgyIC0gdGltaW5nKDIgKiAoMSAtIHRpbWUpKSkgLyAyXHJcblxyXG5cclxuc2V0VGltaW5nRnVuY3Rpb24gPSAobmFtZSwgdGltaW5nKSAtPlxyXG5cdHRpbWluZ0Z1bmN0aW9uc1tuYW1lXSA9IHRpbWluZ1xyXG5cdHRpbWluZ0Z1bmN0aW9uc1tuYW1lICsgJ0Vhc2VPdXQnXSA9IG1ha2VFYXNlT3V0IHRpbWluZ1xyXG5cdHRpbWluZ0Z1bmN0aW9uc1tuYW1lICsgJ0Vhc2VJbk91dCddID0gbWFrZUVhc2VJbk91dCB0aW1pbmdcclxuXHJcbnRpbWluZ0Z1bmN0aW9ucyA9XHJcblx0bGluZWFyOiAodGltZSkgLT5cclxuXHRcdHRpbWVcclxuXHJcblx0ZWFzZU91dDogKHRpbWUpIC0+XHJcblx0XHQxIC0gdGltZVxyXG5cclxuXHRlYXNlSW5PdXQ6ICh0aW1lKSAtPlxyXG5cdFx0aWYgdGltZSA8IDAuNVxyXG5cdFx0XHR0aW1lICogMlxyXG5cdFx0ZWxzZVxyXG5cdFx0XHQyIC0gdGltZSAqIDJcclxuXHJcbnNldFRpbWluZ0Z1bmN0aW9uICdxdWFkJywgKHRpbWUpIC0+XHJcblx0dGltZSAqIHRpbWVcclxuXHJcbnNldFRpbWluZ0Z1bmN0aW9uICdjaXJjbGUnLCAodGltZSkgLT5cclxuXHQxIC0gTWF0aC5zaW4gTWF0aC5hY29zIHRpbWVcclxuXHJcbnNldFRpbWluZ0Z1bmN0aW9uICdib3VuY2UnLCAodGltZSkgLT5cclxuXHRhID0gMFxyXG5cdGIgPSAxXHJcblx0d2hpbGUgdHJ1ZVxyXG5cdFx0aWYgdGltZSA+PSAoNyAtIDQgKiBhKSAvIDExXHJcblx0XHRcdHJldHVybiAtTWF0aC5wb3coKDExIC0gNiAqIGEgLSAxMSAqIHRpbWUpIC8gNCwgMikgKyBNYXRoLnBvdyhiLCAyKVxyXG5cdFx0YSArPSBiXHJcblx0XHRiIC89IDJcclxuXHJcbmNsYXNzIEFuaW1hdGlvblxyXG5cdEBnZXRUaW1lOiBnZXRUaW1lXHJcblxyXG5cdGxvb3A6IHRydWVcclxuXHRzdGFydFRpbWU6IDBcclxuXHRkdXJhdGlvbjogMFxyXG5cdGRlbHRhVGltZTogMFxyXG5cdHNjYWxlOiAxXHJcblxyXG5cdEBwcm9wczogW11cclxuXHRAcHJvcHNVc2VkOiBbXVxyXG5cclxuXHRyZXNldDogLT5cclxuXHRcdEBzdGFydFRpbWUgPSBnZXRUaW1lKClcclxuXHRcdEBkZWx0YVRpbWUgPSAwXHJcblx0XHR0aGlzXHJcblxyXG5cdHNldEFuaW06IChuYW1lLCBhbmdsZSA9IDAsIGRhdGEgPSBAZGF0YSkgLT5cclxuXHRcdEBhbmltID0gZGF0YT9bbmFtZV1cclxuXHRcdEByZXNldCgpXHJcblx0XHRpZiBAYW5pbVxyXG5cdFx0XHRAZHVyYXRpb24gPSBpZiBAYW5pbSB0aGVuIEBhbmltLmR1cmF0aW9uIGVsc2UgMFxyXG5cdFx0XHRAc2V0QW5nbGUgYW5nbGVcclxuXHRcdHRoaXNcclxuXHJcblx0c2V0QW5nbGU6IChhbmdsZSkgLT5cclxuXHRcdEBmcmFtZSA9IG51bGxcclxuXHRcdGlmIEBhbmltXHJcblx0XHRcdGFuZ2xlID0gYW5nbGUgJSAzNjBcclxuXHRcdFx0ZGlycyA9IEBhbmltLmRpcnNcclxuXHRcdFx0aWYgZGlyc1xyXG5cdFx0XHRcdG4gPSBkaXJzLmxlbmdodFxyXG5cdFx0XHRcdGlmIG4gPiAxXHJcblx0XHRcdFx0XHRkQW5nbGUgPSAzNjAgLyBuXHJcblx0XHRcdFx0XHQjIGFuZ2xlICs9IGRBbmdsZSAyXHJcblx0XHRcdFx0XHRpZiBhbmdsZSA8IDAgdGhlbiBhbmdsZSArPSAzNjBcclxuXHRcdFx0XHRcdEBmcmFtZSA9IGRpcnNbTWF0aC5mbG9vcihhbmdsZSAvIGRBbmdsZSldXHJcblx0XHRcdFx0ZWxzZVxyXG5cdFx0XHRcdFx0QGZyYW1lID0gZGlyc1swXVxyXG5cdFx0dGhpc1xyXG5cclxuXHRwbGF5OiAodGltZSkgLT5cclxuXHRcdHRpbWUgPSB0aW1lIHx8IGdldFRpbWUoKVxyXG5cdFx0QGRlbHRhVGltZSA9IGRlbHRhID0gKHRpbWUgLSBAc3RhcnRUaW1lKSAqIEBzY2FsZVxyXG5cdFx0ZHVyYXRpb24gPSBAZHVyYXRpb25cclxuXHRcdHVubGVzcyBkdXJhdGlvblxyXG5cdFx0XHRyZXR1cm4gZmFsc2VcclxuXHRcdGlmIGRlbHRhID4gZHVyYXRpb25cclxuXHRcdFx0aWYgQGxvb3BcclxuXHRcdFx0XHRAZGVsdGFUaW1lICU9IGR1cmF0aW9uXHJcblx0XHRcdGVsc2VcclxuXHRcdFx0XHRyZXR1cm4gZmFsc2VcclxuXHRcdHRydWVcclxuXHJcblx0YW5pbWF0ZTogKG5vZGUsIG5vZGVQYXRoID0gbm9kZS5ub2RlUGF0aCwgbm9kZU5hbWUgPSBub2RlLm5vZGVOYW1lKSAtPlxyXG5cdFx0ZnJhbWUgPSBAZnJhbWVcclxuXHRcdGlmIGZyYW1lXHJcblx0XHRcdHRpbWVzdG9wcyA9IGZyYW1lW25vZGVQYXRoXSB8fCBmcmFtZVtub2RlTmFtZV1cclxuXHRcdFx0aWYgdGltZXN0b3BzXHJcblx0XHRcdFx0ZGVsdGEgPSBAZGVsdGFUaW1lXHJcblx0XHRcdFx0cHJvcHMgPSBBbmltYXRpb24ucHJvcHNcclxuXHRcdFx0XHRwcm9wc1VzZWQgPSBBbmltYXRpb24ucHJvcHNVc2VkXHJcblx0XHRcdFx0Zm9yIHBvaW50IGluIHRpbWVzdG9wc1xyXG5cdFx0XHRcdFx0aWYgZGVsdGEgPj0gcG9pbnQuZW5kXHJcblx0XHRcdFx0XHRcdGZvciBuYW1lLCB0b1ZhbCBvZiBwb2ludC50b1xyXG5cdFx0XHRcdFx0XHRcdHVubGVzcyBwcm9wc1VzZWRbbmFtZV1cclxuXHRcdFx0XHRcdFx0XHRcdHByb3BzW25hbWVdID0gbm9kZVtuYW1lXVxyXG5cdFx0XHRcdFx0XHRcdFx0cHJvcHNVc2VkW25hbWVdID0gdHJ1ZVxyXG5cdFx0XHRcdFx0XHRcdG5vZGVbbmFtZV0gPSB0b1ZhbFxyXG5cdFx0XHRcdFx0ZWxzZSBpZiBkZWx0YSA+PSBwb2ludC5zdGFydFxyXG5cdFx0XHRcdFx0XHRpZiBwb2ludC5mdW5jXHJcblx0XHRcdFx0XHRcdFx0dEZ1bmMgPSB0aW1pbmdGdW5jdGlvbnNbcG9pbnQuZnVuY11cclxuXHRcdFx0XHRcdFx0ZWxzZVxyXG5cdFx0XHRcdFx0XHRcdHRGdW5jID0gdGltaW5nRnVuY3Rpb25zLmxpbmVhclxyXG5cdFx0XHRcdFx0XHQjXHJcblx0XHRcdFx0XHRcdGZvciBuYW1lLCB0b1ZhbCBvZiBwb2ludC50b1xyXG5cdFx0XHRcdFx0XHRcdHByb3AgPSBub2RlW25hbWVdXHJcblx0XHRcdFx0XHRcdFx0dW5sZXNzIHByb3BzVXNlZFtuYW1lXVxyXG5cdFx0XHRcdFx0XHRcdFx0cHJvcHNbbmFtZV0gPSBwcm9wXHJcblx0XHRcdFx0XHRcdFx0XHRwcm9wc1VzZWRbbmFtZV0gPSB0cnVlXHJcblx0XHRcdFx0XHRcdFx0cHJvcCB8fD0gMFxyXG5cdFx0XHRcdFx0XHRcdGlmIHRvVmFsLmNvbnN0cnVjdG9yID09IE51bWJlclxyXG5cdFx0XHRcdFx0XHRcdFx0dGltZSA9IHRGdW5jKChkZWx0YSAtIHBvaW50LnN0YXJ0KSAvIChwb2ludC5lbmQgLSBwb2ludC5zdGFydCkpXHJcblx0XHRcdFx0XHRcdFx0XHRub2RlW25hbWVdID0gKHRvVmFsIC0gcHJvcCkgKiB0aW1lICsgcHJvcFxyXG5cdFx0XHRcdFx0XHRcdGVsc2VcclxuXHRcdFx0XHRcdFx0XHRcdG5vZGVbbmFtZV0gPSB0b1ZhbFxyXG5cdFx0dGhpc1xyXG5cclxuXHRyZWNpdmVQcm9wczogKG5vZGUpIC0+XHJcblx0XHRwcm9wcyA9IEFuaW1hdGlvbi5wcm9wc1xyXG5cdFx0cHJvcHNVc2VkID0gQW5pbWF0aW9uLnByb3BzVXNlZFxyXG5cdFx0Zm9yIG5hbWUsIHVzZSBvZiBwcm9wc1VzZWRcclxuXHRcdFx0aWYgdXNlXHJcblx0XHRcdFx0bm9kZVtuYW1lXSA9IHByb3BzW25hbWVdXHJcblx0XHRcdFx0cHJvcHNVc2VkW25hbWVdID0gZmFsc2VcclxuXHRcdHRoaXNcclxuXHJcblx0Y3JlYXRlV29ya0ZyYW1lOiAtPlxyXG5cdFx0QGxvb3AgPSBmYWxzZVxyXG5cdFx0QGZyYW1lID1cclxuXHRcdFx0d29yazogW1xyXG5cdFx0XHRcdHtcclxuXHRcdFx0XHRcdHN0YXJ0OiAwXHJcblx0XHRcdFx0XHRlbmQ6IDBcclxuXHRcdFx0XHRcdHRvOiB7fVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0XVxyXG5cdFx0dGhpc1xyXG5cclxuXHRyZXNldFdvcms6IC0+XHJcblx0XHRwcm9wc1VzZWQgPSBBbmltYXRpb24ucHJvcHNVc2VkXHJcblx0XHRmb3IgbmFtZSwgdXNlIG9mIHByb3BzVXNlZFxyXG5cdFx0XHRpZiB1c2UgdGhlbiBwcm9wc1VzZWRbbmFtZV0gPSBmYWxzZVxyXG5cdFx0dGhpc1xyXG5cclxuXHRjbGVhcldvcms6IC0+XHJcblx0XHRwcm9wc1VzZWQgPSBBbmltYXRpb24ucHJvcHNVc2VkXHJcblx0XHRhT2JqID0gQGZyYW1lLndvcmtbMF1cclxuXHRcdGFPYmouc3RhcnQgPSBhT2JqLmVuZCA9IDBcclxuXHRcdHRvID0gXHJcblx0XHRmb3IgbmFtZSwgXyBvZiB0b1xyXG5cdFx0XHRkZWxldGUgdG9bbmFtZV1cclxuXHRcdHRoaXNcclxuXHJcblx0YW5pbWF0ZVByb3BzOiAocHJvcHMsIGR1cmF0aW9uLCBmdW5jKSAtPlxyXG5cdFx0QGR1cmF0aW9uID0gZHVyYXRpb25cclxuXHRcdGFPYmogPSBAZnJhbWUud29ya1swXVxyXG5cdFx0YU9iai5lbmQgPSBkdXJhdGlvblxyXG5cdFx0YU9iai5mdW5jID0gZnVuY1xyXG5cdFx0dG8gPSBhT2JqLnRvXHJcblx0XHRmb3IgbmFtZSwgcHJvcCBvZiBwcm9wc1xyXG5cdFx0XHR0b1tuYW1lXSA9IHByb3BcclxuXHRcdEByZXNldCgpXHJcblx0XHR0aGlzXHJcblxyXG5leHBvcnQgeyBBbmltYXRpb25EYXRhLCBBbmltYXRpb24gfSIsImltcG9ydCB7IFNwcml0ZSB9IGZyb20gJy4vc3ByaXRlJ1xyXG5pbXBvcnQgeyBBbmltYXRpb24gfSBmcm9tICcuL2FuaW1hdGlvbidcclxuXHJcbmNsYXNzIE1vZGVsRGF0YVxyXG5cdEBjYWNoZTogW11cclxuXHJcblx0QGxvYWQ6IChsb2FkZXIsIGZpbGUpIC0+XHJcblx0XHRtb2RlbCA9IE1vZGVsRGF0YS5jYWNoZVtmaWxlXVxyXG5cdFx0dW5sZXNzIG1vZGVsXHJcblx0XHRcdG1vZGVsID0gbmV3IE1vZGVsRGF0YVxyXG5cdFx0XHRtb2RlbC5sb2FkIGxvYWRlciwgZmlsZVxyXG5cdFx0XHRNb2RlbERhdGEuY2FjaGVbZmlsZV0gPSBtb2RlbFxyXG5cdFx0bW9kZWxcclxuXHJcblx0bG9hZDogKGxvYWRlciwgZmlsZSkgLT5cclxuXHRcdGxvYWRlci5sb2FkSnNvbiBmaWxlLCAoZGF0YSkgPT5cclxuXHRcdFx0aWYgZGF0YVxyXG5cdFx0XHRcdGZvciBrZXksIHZhbHVlIG9mIGRhdGFcclxuXHRcdFx0XHRcdHRoaXNba2V5XSA9IHZhbHVlXHJcblxyXG5cdFx0XHRcdGlmIEBpbWFnZXNcclxuXHRcdFx0XHRcdGltYWdlc0RhdGEgPSBAaW1hZ2VzXHJcblx0XHRcdFx0XHRAaW1hZ2VzID0gW11cclxuXHRcdFx0XHRcdGZvciBrZXksIGltYWdlIG9mIGltYWdlc0RhdGFcclxuXHRcdFx0XHRcdFx0QGltYWdlc1trZXldID0gbG9hZGVyLmxvYWRJbWFnZSBpbWFnZVxyXG5cclxuXHRcdFx0XHRpZiBAc3ByaXRlc1xyXG5cdFx0XHRcdFx0c3ByaXRlc0RhdGEgPSBAc3ByaXRlc1xyXG5cdFx0XHRcdFx0QHNwcml0ZXMgPSBbXVxyXG5cdFx0XHRcdFx0Zm9yIGtleSwgc3ByaXRlIG9mIHNwcml0ZXNEYXRhXHJcblx0XHRcdFx0XHRcdEBzcHJpdGVzW2tleV0gPSBTcHJpdGUubG9hZCBsb2FkZXIsIHNwcml0ZVxyXG5cclxuXHRcdFx0XHRpZiBAbW9kZWxzXHJcblx0XHRcdFx0XHRtb2RlbHNEYXRhID0gQG1vZGVsc1xyXG5cdFx0XHRcdFx0QG1vZGVscyA9IFtdXHJcblx0XHRcdFx0XHRmb3Iga2V5LCBtb2RlbCBvZiBtb2RlbHNEYXRhXHJcblx0XHRcdFx0XHRcdEBtb2RlbHNba2V5XSA9IE1vZGVsRGF0YS5sb2FkIGxvYWRlciwgbW9kZWxcclxuXHJcblx0XHRcdFx0bm9kZXNMb2FkID0gKG5vZGVzLCBub2RlUGF0aCA9ICcnKSAtPlxyXG5cdFx0XHRcdFx0Zm9yIG5hbWUsIG5vZGUgb2Ygbm9kZXNcclxuXHRcdFx0XHRcdFx0bm9kZS5ub2RlUGF0aCA9IG5vZGVQYXRoICsgbmFtZVxyXG5cdFx0XHRcdFx0XHRub2RlLm5vZGVOYW1lID0gJ0AnICsgbmFtZVxyXG5cdFx0XHRcdFx0XHRpZiBub2RlLmJlZm9yZVxyXG5cdFx0XHRcdFx0XHRcdG5vZGVzTG9hZCBub2RlLmJlZm9yZSwgbm9kZS5ub2RlUGF0aCArICc8J1xyXG5cdFx0XHRcdFx0XHRpZiBub2RlLmFmdGVyXHJcblx0XHRcdFx0XHRcdFx0bm9kZXNMb2FkIG5vZGUuYWZ0ZXIsIG5vZGUubm9kZVBhdGggKyAnPidcclxuXHJcblx0XHRcdFx0aWYgQGRpcnNcclxuXHRcdFx0XHRcdGZvciBub2RlcyBpbiBAZGlyc1xyXG5cdFx0XHRcdFx0XHRub2Rlc0xvYWQgbm9kZXNcclxuXHJcblxyXG5kcmF3VHlwZU9iaiA9XHJcblx0bGluZTogKGcpIC0+XHJcblx0XHRnLm1vdmVUbyBAeDEgfHwgMCwgQHkxIHx8IDBcclxuXHRcdGcubGluZVRvIEB4MiB8fCAwLCBAeTIgfHwgMFxyXG5cdFx0dGhpc1xyXG5cclxuXHRyZWN0OiAoZykgLT5cclxuXHRcdGcucmVjdCBAeCB8fCAwLCBAeSB8fCAwLCBAd2lkdGggfHwgMSwgQGhlaWdodCB8fCAxXHJcblx0XHR0aGlzXHJcblxyXG5cdHJlY3RSb3VuZDogKGcpIC0+XHJcblx0XHRAbm9DbG9zZSA9IGZhbHNlXHJcblx0XHR4ID0gQHggfHwgMFxyXG5cdFx0eSA9IEB5IHx8IDBcclxuXHRcdHcgPSBAd2lkdGhcclxuXHRcdGggPSBAaGVpZ2h0XHJcblx0XHRyID0gQHJhZGl1c1xyXG5cdFx0aWYgdyA8IDIgKiByIHRoZW4gciA9IHcgLyAyXHJcblx0XHRpZiBoIDwgMiAqIHIgdGhlbiByID0gaCAvIDJcclxuXHJcblx0XHRnLm1vdmVUbyB4ICsgciwgeVxyXG5cdFx0Zy5hcmNUbyAgeCArIHcsIHksICAgICB4ICsgdywgeSArIGgsIHJcclxuXHRcdGcuYXJjVG8gIHggKyB3LCB5ICsgaCwgeCwgICAgIHkgKyBoLCByXHJcblx0XHRnLmFyY1RvICB4LCAgICAgeSArIGgsIHgsICAgICB5LCAgICAgclxyXG5cdFx0Zy5hcmNUbyAgeCwgICAgIHksICAgICB4ICsgdywgeSwgICAgIHJcclxuXHRcdHRoaXNcclxuXHJcblx0YXJjOiAoZykgLT5cclxuXHRcdGcuYXJjKFxyXG5cdFx0XHRAeCB8fCAwLFxyXG5cdFx0XHRAeSB8fCAwLFxyXG5cdFx0XHRAcmFkaXVzLFxyXG5cdFx0XHQoQHN0YXJ0QW5nbGUgfHwgMCkgKiBNYXRoLlBJIC8gMTgwLFxyXG5cdFx0XHQoQGVuZEFuZ2xlIHx8IDM2MCkgKiBNYXRoLlBJIC8gMTgwLFxyXG5cdFx0XHRpZiBAY2xvY2t3aXNlIHRoZW4gZmFsc2UgZWxzZSB0cnVlKVxyXG5cdFx0dGhpc1xyXG5cclxuXHRlbGlwc2U6IChnKSAtPlxyXG5cdFx0Zy5lbGxpcHNlKFxyXG5cdFx0XHRAeCB8fCAwLFxyXG5cdFx0XHRAeSB8fCAwLFxyXG5cdFx0XHRAcngsXHJcblx0XHRcdEByeSxcclxuXHRcdFx0KEByb3RhdGlvbiB8fCAwKSAqIE1hdGguUEkgLyAxODAsXHJcblx0XHRcdChAc3RhcnRBbmdsZSB8fCAwKSAqIE1hdGguUEkgLyAxODAsXHJcblx0XHRcdChAZW5kQW5nbGUgfHwgMzYwKSAqIE1hdGguUEkgLyAxODAsXHJcblx0XHRcdGlmIEBjbG9ja3dpc2UgdGhlbiBmYWxzZSBlbHNlIHRydWUpXHJcblx0XHR0aGlzXHJcblxyXG5cdHBhdGg6IChnKSAtPlxyXG5cdFx0eCA9IEB4IHx8IDBcclxuXHRcdHkgPSBAeSB8fCAwXHJcblx0XHRpZiB0eXBlb2YgQHBhdGggPT0gJ3N0cmluZydcclxuXHRcdFx0QHBhdGggPSBuZXcgUGF0aDJEIEBwYXRoXHJcblx0XHQjXHJcblx0XHRAbm9DbG9zZSA9IHRydWVcclxuXHRcdGcudHJhbnNsYXRlIHgsIHlcclxuXHRcdGRyYXcgPSBAZHJhdyB8fCAnZiZzJ1xyXG5cdFx0aWYgZHJhdyA9PSAnZicgfHwgZHJhdyA9PSAnZiZzJ1xyXG5cdFx0XHRnLmZpbGwgQHBhdGhcclxuXHRcdGlmIGRyYXcgPT0gJ3MnIHx8IGRyYXcgPT0gJ2YmcydcclxuXHRcdFx0Zy5zdHJva2UgQHBhdGhcclxuXHRcdHRoaXNcclxuXHJcblx0bm9kZTogKGcsIG1vZGVsLCBvcGFjaXR5LCBkYXRhKSAtPlxyXG5cdFx0QG5vQ2xvc2UgPSBAZHJhdyA9IHRydWVcclxuXHRcdCMgU2F2ZSBjdXJyZW50IG1vZGVsIGRhdGFcclxuXHRcdHREYXRhID0gbW9kZWwuZGF0YVxyXG5cdFx0dE1vZGVsID0gbW9kZWwubW9kZWxcclxuXHRcdCMgU2VsZWN0IG1vZGVsXHJcblx0XHRtID0gZGF0YSB8fCB0RGF0YS5tb2RlbHM/W0Btb2RlbF1cclxuXHRcdGlmIG1cclxuXHRcdFx0bW9kZWwuZGF0YSA9IG1cclxuXHRcdFx0bW9kZWwubW9kZWwgPSBub2RlcyA9IG0uZGlyc1tAZGlyZWN0aW9uIHx8IDBdXHJcblx0XHRlbHNlXHJcblx0XHRcdGlmIHR5cGVvZiBAZGlyZWN0aW9uID09ICdudW1iZXInXHJcblx0XHRcdFx0bm9kZXMgPSBtb2RlbC5kYXRhLmRpcnNbQGRpcmVjdGlvbl1cclxuXHRcdFx0ZWxzZVxyXG5cdFx0XHRcdG5vZGVzID0gbW9kZWwubW9kZWxcclxuXHRcdGlmIG5vZGVzXHJcblx0XHRcdCMgU2VsZWN0IG5vZGUgaW4gbW9kZWxcclxuXHRcdFx0bm9kZSA9IEBub2RlXHJcblx0XHRcdGlmIHR5cGVvZiBub2RlID09ICdzdHJpbmcnXHJcblx0XHRcdFx0bm9kZSA9IG5vZGVzW25vZGVdXHJcblx0XHRcdGVsc2VcclxuXHRcdFx0XHRyb290ID0gbm9kZXNcclxuXHRcdFx0XHRmb3IgcGF0aCBpbiBub2RlXHJcblx0XHRcdFx0XHRyb290ID0gcm9vdFtwYXRoXVxyXG5cdFx0XHRcdG5vZGUgPSByb290XHJcblx0XHRcdGlmIG5vZGVcclxuXHRcdFx0XHRnLnRyYW5zbGF0ZSBAeCB8fCAwLCBAeSB8fCAwXHJcblx0XHRcdFx0ZHJhd05vZGUuY2FsbCBub2RlLCBnLCBtb2RlbCwgb3BhY2l0eVxyXG5cdFx0XHRcdCMgUmVjaXZlIG1vZGVsIGRhdGFcclxuXHRcdG1vZGVsLm1vZGVsID0gdE1vZGVsXHJcblx0XHRtb2RlbC5kYXRhID0gdERhdGFcclxuXHRcdHRoaXNcclxuXHJcblx0YXR0YWNoOiAoZywgbW9kZWwsIG9wYWNpdHkpIC0+XHJcblx0XHRkYXRhID0gbW9kZWwuYXR0YWNobWVudFtAYXR0YWNoXVxyXG5cdFx0aWYgZGF0YVxyXG5cdFx0XHRkcmF3VHlwZU9iai5ub2RlLmNhbGwgdGhpcywgZywgbW9kZWwsIG9wYWNpdHksIGRhdGFcclxuXHRcdHRoaXNcclxuXHJcblx0aW1hZ2U6IChnLCBtb2RlbCkgLT5cclxuXHRcdEBub0Nsb3NlID0gQGRyYXcgPSB0cnVlXHJcblx0XHRpbWFnZSA9IG1vZGVsLmRhdGEuaW1hZ2VzW0BpbWFnZV1cclxuXHRcdGlmIEB3aWR0aCB8fCBAaGVpZ2h0XHJcblx0XHRcdGcuZHJhd0ltYWdlIGltYWdlLCBAeCB8fCAwLCBAeSB8fCAwLCBAd2lkdGgsIEBoZWlnaHRcclxuXHRcdGVsc2VcclxuXHRcdFx0Zy5kcmF3SW1hZ2UgaW1hZ2UsIEB4IHx8IDAsIEB5IHx8IDBcclxuXHRcdHRoaXNcclxuXHJcblx0c3ByaXRlOiAoZywgbW9kZWwpIC0+XHJcblx0XHRAbm9DbG9zZSA9IEBkcmF3ID0gdHJ1ZVxyXG5cdFx0c3ByaXRlID0gQHNwcml0ZVxyXG5cdFx0aWYgc3ByaXRlLmNvbnN0cnVjdG9yID09IFN0cmluZ1xyXG5cdFx0XHRAc3ByaXRlID0gc3ByaXRlID0gbW9kZWwuZGF0YS5zcHJpdGVzW3Nwcml0ZV1cclxuXHRcdHNwcml0ZS5kcmF3IGcsIEBmcmFtZSwgQHggfHwgMCwgQHkgfHwgMCwgQGluZGV4XHJcblx0XHR0aGlzXHJcblxyXG5cdHRleHQ6IChnKSAtPlxyXG5cdFx0aWYgQGRyYXcgIT0gdHJ1ZVxyXG5cdFx0XHRAZHJhd1RleHQgPSBAZHJhd1xyXG5cdFx0ZHJhdyA9IEBkcmF3VGV4dFxyXG5cdFx0QG5vQ2xvc2UgPSBAZHJhdyA9IHRydWVcclxuXHRcdCNcclxuXHRcdGlmIEBmb250IHRoZW4gZy5mb250ID0gQGZvbnRcclxuXHRcdGlmIEB0ZXh0QWxpZ24gdGhlbiBnLnRleHRBbGlnbiA9IEB0ZXh0QWxpZ25cclxuXHRcdGlmIEB0ZXh0QmFzZWxpbmUgIT0gbnVsbCB0aGVuIGcudGV4dEJhc2VsaW5lID0gQHRleHRCYXNlbGluZVxyXG5cdFx0aWYgQGRpcmVjdGlvbiB0aGVuIGcuZGlyZWN0aW9uID0gQGRpcmVjdGlvblxyXG5cdFx0I1xyXG5cdFx0aWYgZHJhdyA9PSAnZicgfHwgZHJhdyA9PSAnZiZzJ1xyXG5cdFx0XHRnLmZpbGxUZXh0IEB0ZXh0LCBAeCB8fCAwLCBAeSB8fCAwLCBAbWF4V2lkdGhcclxuXHRcdGlmIGRyYXcgPT0gJ3MnIHx8IGRyYXcgPT0gJ2YmcydcclxuXHRcdFx0Zy5zdHJva2VUZXh0IEB0ZXh0LCBAeCB8fCAwLCBAeSB8fCAwLCBAbWF4V2lkdGhcclxuXHRcdHRoaXNcclxuXHJcbnN0eWxlVHlwZUZ1bmMgPVxyXG5cdGxpbmVhcjogKGcpIC0+XHJcblx0XHRncmFkaWVudCA9IGcuY3JlYXRlTGluZWFyR3JhZGllbnQgQHgwIHx8IDAsIEB5MCB8fCAwLCBAeDEgfHwgMCwgQHkxIHx8IDBcclxuXHRcdGZvciBjb2xvclN0b3AgaW4gQGNvbG9yU3RvcHNcclxuXHRcdFx0Z3JhZGllbnQuYWRkQ29sb3JTdG9wIGNvbG9yU3RvcC5wb3MgfHwgMCwgY29sb3JTdG9wLmNvbG9yXHJcblx0XHRncmFkaWVudFxyXG5cclxuXHRyYWRpYWw6IChnKSAtPlxyXG5cdFx0Z3JhZGllbnQgPSBnLmNyZWF0ZVJhZGlhbEdyYWRpZW50IEB4MCB8fCAwLCBAeTAgfHwgMCwgQHIwIHx8IDAsIEB4MSB8fCAwLCBAeTEgfHwgMCwgQHIxIHx8IDBcclxuXHRcdGZvciBjb2xvclN0b3AgaW4gQGNvbG9yU3RvcHNcclxuXHRcdFx0Z3JhZGllbnQuYWRkQ29sb3JTdG9wIGNvbG9yU3RvcC5wb3MgfHwgMCwgY29sb3JTdG9wLmNvbG9yXHJcblx0XHRncmFkaWVudFxyXG5cclxuXHRwYXR0ZXJuOiAoZywgbW9kZWwpIC0+XHJcblx0XHRpbWFnZSA9IG1vZGVsLmRhdGEuaW1hZ2VzW0BpbWFnZV1cclxuXHRcdGcuY3JlYXRlUGF0dGVybiBpbWFnZSwgQHJlcGV0aXRpb24gfHwgXCJyZXBlYXRcIlxyXG5cclxuaW5pdFN0eWxlID0gKGcsIG1vZGVsLCBzdHlsZSkgLT5cclxuXHRzdHlsZVR5cGVGdW5jW3N0eWxlLnR5cGVdPy5jYWxsIHN0eWxlLCBnLCBtb2RlbFxyXG5cclxuc2V0RHJhd1N0eWxlID0gKGcsIG1vZGVsKSAtPlxyXG5cdHN0cm9rZSA9IEBzdHJva2VcclxuXHRpZiBzdHJva2VcclxuXHRcdGlmIHN0cm9rZS5jb25zdHJ1Y3RvciA9PSBPYmplY3RcclxuXHRcdFx0QHN0cm9rZSA9IGluaXRTdHlsZSBnLCBtb2RlbCwgc3Ryb2tlXHJcblx0XHRnLnN0cm9rZVN0eWxlID0gQHN0cm9rZVxyXG5cdGZpbGwgPSBAZmlsbFxyXG5cdGlmIGZpbGxcclxuXHRcdGlmIGZpbGwuY29uc3RydWN0b3IgPT0gT2JqZWN0XHJcblx0XHRcdEBmaWxsID0gaW5pdFN0eWxlIGcsIG1vZGVsLCBmaWxsXHJcblx0XHRnLmZpbGxTdHlsZSA9IEBmaWxsXHJcblx0aWYgQGxpbmVXaWR0aCAhPSBudWxsIHRoZW4gZy5saW5lV2lkdGggPSBAbGluZVdpZHRoXHJcblx0aWYgQGxpbmVDYXAgIT0gbnVsbCB0aGVuIGcubGluZUNhcCA9IEBsaW5lQ2FwXHJcblx0aWYgQGxpbmVKb2luIHRoZW4gZy5saW5lSm9pbiA9IEBsaW5lSm9pblxyXG5cdGlmIEBsaW5lRGFzaE9mZnNldCAhPSBudWxsIHRoZW4gZy5saW5lRGFzaE9mZnNldCA9IEBsaW5lRGFzaE9mZnNldFxyXG5cdHRoaXNcclxuXHJcbmRyYXdOb2RlID0gKGcsIG1vZGVsLCBvcGFjaXR5KSAtPlxyXG5cdGcuc2F2ZSgpXHJcblx0bW9kZWwuYW5pbWF0aW9uLmFuaW1hdGUgdGhpc1xyXG5cdGcudHJhbnNmb3JtIEBzY2FsZVggfHwgMSwgQHNrZXdZIHx8IDAsIEBza2V3WCB8fCAwLCBAc2NhbGVZIHx8IDEsIEBvcmlnWCB8fCAwLCBAb3JpZ1kgfHwgMFxyXG5cdG1Bc2NhbGUgPSBAbW9kZWxBbmdsZVNjYWxlXHJcblx0aWYgbUFzY2FsZSB0aGVuIGcucm90YXRlIChtb2RlbC5hbmdsZSAqIG1Bc2NhbGUpICogTWF0aC5QSSAvIDE4MFxyXG5cdGlmIEBhbmdsZSB0aGVuIGcucm90YXRlIEBhbmdsZSAqIE1hdGguUEkgLyAxODBcclxuXHRzZXREcmF3U3R5bGUuY2FsbCB0aGlzLCBnLCBtb2RlbFxyXG5cdCMgU2hhZG93c1xyXG5cdGlmIEBub1NoYWRvd1xyXG5cdFx0Zy5zaGFkb3dCbHVyID0gMFxyXG5cdFx0Zy5zaGFkb3dPZmZzZXRYID0gMFxyXG5cdFx0Zy5zaGFkb3dPZmZzZXRZID0gMFxyXG5cdGlmIEBzaGFkb3dCbHVyICE9IG51bGwgdGhlbiBnLnNoYWRvd0JsdXIgPSBAc2hhZG93Qmx1clxyXG5cdGlmIEBzaGFkb3dDb2xvciAhPSBudWxsIHRoZW4gZy5zaGFkb3dDb2xvciA9IEBzaGFkb3dDb2xvclxyXG5cdGlmIEBzaGFkb3dPZmZzZXRYICE9IG51bGwgdGhlbiBnLnNoYWRvd09mZnNldFggPSBAc2hhZG93T2Zmc2V0WFxyXG5cdGlmIEBzaGFkb3dPZmZzZXRZICE9IG51bGwgdGhlbiBnLnNoYWRvd09mZnNldFkgPSBAc2hhZG93T2Zmc2V0WVxyXG5cdGcuZ2xvYmFsQWxwaGEgPSBvcGFjaXR5ICogKGlmIEBvcGFjaXR5ID09IG51bGwgdGhlbiAxIGVsc2UgQG9wYWNpdHkpXHJcblxyXG5cdGlmIEBiZWZvcmVcclxuXHRcdG1vZGVsLmFuaW1hdGlvbi5yZWNpdmVQcm9wcyB0aGlzXHJcblx0XHQjXHJcblx0XHRmb3Iga2V5LCBub2RlIG9mIEBiZWZvcmVcclxuXHRcdFx0aWYgIW5vZGUuaGlkZVxyXG5cdFx0XHRcdGRyYXdOb2RlLmNhbGwgbm9kZSwgZywgbW9kZWwsIG9wYWNpdHlcclxuXHRcdCNcclxuXHRcdG1vZGVsLmFuaW1hdGlvbi5hbmltYXRlIHRoaXNcclxuXHJcblx0Zy5iZWdpblBhdGgoKVxyXG5cdGRyYXdUeXBlT2JqW0B0eXBlXT8uY2FsbCB0aGlzLCBnLCBtb2RlbCwgb3BhY2l0eVxyXG5cdGlmICFAbm9DbG9zZSB0aGVuIGcuY2xvc2VQYXRoKClcclxuXHJcblx0ZHJhdyA9IEBkcmF3IHx8ICdmJnMnXHJcblx0aWYgZHJhdyA9PSAnZicgfHwgZHJhdyA9PSAnZiZzJ1xyXG5cdFx0Zy5maWxsKClcclxuXHRpZiBkcmF3ID09ICdzJyB8fCBkcmF3ID09ICdmJnMnXHJcblx0XHRnLnN0cm9rZSgpXHJcblxyXG5cdGlmIEBjbGlwXHJcblx0XHRnLmNsaXAoKVxyXG5cclxuXHRtb2RlbC5hbmltYXRpb24ucmVjaXZlUHJvcHMgdGhpc1xyXG5cclxuXHRpZiBAYWZ0ZXJcclxuXHRcdGZvciBrZXksIG5vZGUgb2YgQGFmdGVyXHJcblx0XHRcdGlmICFub2RlLmhpZGVcclxuXHRcdFx0XHRkcmF3Tm9kZS5jYWxsIG5vZGUsIGcsIG1vZGVsLCBvcGFjaXR5XHJcblxyXG5cdGlmIE1vZGVsLmRyYXdPcmlnaW5cclxuXHRcdGcuZmlsbFN0eWxlID0gJyNmMDAnXHJcblx0XHRnLnNoYWRvd0JsdXIgPSAwXHJcblx0XHRnLnNoYWRvd09mZnNldFggPSAwXHJcblx0XHRnLnNoYWRvd09mZnNldFkgPSAwXHJcblx0XHRnLmZpbGxSZWN0IC0yLCAtMiwgNCwgNFxyXG5cclxuXHRnLnJlc3RvcmUoKVxyXG5cdHRoaXNcclxuXHJcblxyXG5kcmF3UGFydFR5cGUgPVxyXG5cdHBvbHk6IChnLCB2ZXJ0cywgY2FtZXJhLCBtb2RlbCkgLT5cclxuXHRcdHYgPSB2ZXJ0c1tAdmVydHNbMF1dXHJcblx0XHR4YyA9IGNhbWVyYS54XHJcblx0XHR5YyA9IGNhbWVyYS55XHJcblx0XHR6dCA9IFpfT1JJR0lOICsgY2FtZXJhLnpcclxuXHRcdHogPSAoKHYueiB8fCAwKSArIHp0KSAqIFpfVFJBTlNGT1JNXHJcblx0XHR4ID0gKCh2LnggfHwgMCkgKyB4YykgKiB6XHJcblx0XHR5ID0gKCh2LnkgfHwgMCkgKyB5YykgKiB6XHJcblx0XHRnLm1vdmVUbyB4LCB5XHJcblx0XHRsID0gQHZlcnRzLmxlbmd0aCAtIDFcclxuXHRcdGZvciBpIGluIFsxLi5sXVxyXG5cdFx0XHR2ID0gdmVydHNbQHZlcnRzW2ldXTtcclxuXHRcdFx0eiA9ICgodi56IHx8IDApICsgenQpICogWl9UUkFOU0ZPUk1cclxuXHRcdFx0eCA9ICgodi54IHx8IDApICsgeGMpICogelxyXG5cdFx0XHR5ID0gKCh2LnkgfHwgMCkgKyB5YykgKiB6XHJcblx0XHRcdGcubGluZVRvIHgsIHlcclxuXHRcdHRoaXNcclxuXHJcblx0cGFydDogKGcsIHZlcnRzLCBjYW1lcmEsIG1vZGVsLCBvcGFjaXR5KSAtPlxyXG5cdFx0QG5vQ2xvc2UgPSBAZHJhdyA9IHRydWVcclxuXHRcdCMgU2F2ZSBtb2RlbCBkYXRhXHJcblx0XHR0RGF0YSA9IG1vZGVsLmRhdGFcclxuXHRcdCMgU2VsZWN0IG1vZGVsXHJcblx0XHRtID0gdERhdGEubW9kZWxzP1tAbW9kZWxdXHJcblx0XHRpZiBtXHJcblx0XHRcdG1vZGVsLmRhdGEgPSBtXHJcblx0XHRcdHBhcnRzID0gbS5kaXJzUGFydHNbQGRpcmVjdGlvbiB8fCAwXVxyXG5cdFx0ZWxzZVxyXG5cdFx0XHRwYXJ0cyA9IG1vZGVsLnBhcnRzXHJcblx0XHRpZiBwYXJ0c1xyXG5cdFx0XHR2ID0gdmVydHNbQHZlcnRdXHJcblx0XHRcdGMgPVxyXG5cdFx0XHRcdHg6IGNhbWVyYS54ICsgKHYueCB8fCAwKVxyXG5cdFx0XHRcdHk6IGNhbWVyYS55ICsgKHYueSB8fCAwKVxyXG5cdFx0XHRcdHo6IGNhbWVyYS56ICsgKHYueiB8fCAwKVxyXG5cclxuXHRcdFx0cGFydCA9IHBhcnRzW0BwYXJ0XVxyXG5cdFx0XHRpZiBwYXJ0XHJcblx0XHRcdFx0dFBhcnRzID0gbW9kZWwucGFydHNcclxuXHRcdFx0XHRtb2RlbC5wYXJ0cyA9IHBhcnRzXHJcblx0XHRcdFx0Zm9yIGZhY2UgaW4gcGFydC5mYWNlc1xyXG5cdFx0XHRcdFx0ZHJhd1BhcnQuY2FsbCBmYWNlLCBnLCBtb2RlbCwgYywgb3BhY2l0eVxyXG5cdFx0XHRcdG1vZGVsLnBhcnRzID0gdFBhcnRzXHJcblx0XHRtb2RlbC5kYXRhID0gdERhdGFcclxuXHRcdHRoaXNcclxuXHJcblx0bm9kZTogKGcsIHZlcnRzLCBjYW1lcmEsIG1vZGVsLCBvcGFjaXR5KSAtPlxyXG5cdFx0dHJhbnNmb3JtVmVydCB2ZXJ0c1tAdmVydF0sIGNhbWVyYVxyXG5cdFx0XHQuYXBwbHkgZ1xyXG5cdFx0ZHJhd1R5cGVPYmoubm9kZS5jYWxsIHRoaXMsIGcsIG1vZGVsLCBvcGFjaXR5XHJcblx0XHR0aGlzXHJcblxyXG5cdGF0dGFjaDogKGcsIG1vZGVsLCBvcGFjaXR5KSAtPlxyXG5cdFx0dHJhbnNmb3JtVmVydCB2ZXJ0c1tAdmVydF0sIGNhbWVyYVxyXG5cdFx0XHQuYXBwbHkgZ1xyXG5cdFx0ZGF0YSA9IG1vZGVsLmF0dGFjaG1lbnRbQGF0dGFjaF1cclxuXHRcdGlmIGRhdGFcclxuXHRcdFx0ZHJhd1R5cGVPYmoubm9kZS5jYWxsIHRoaXMsIGcsIG1vZGVsLCBvcGFjaXR5LCBkYXRhXHJcblx0XHR0aGlzXHJcblxyXG5cdGVsaXBzZTogKGcsIHZlcnRzLCBjYW1lcmEpIC0+XHJcblx0XHR2ID0gdHJhbnNmb3JtVmVydCB2ZXJ0c1tAdmVydDFdLCBjYW1lcmFcclxuXHRcdHgxID0gdi54XHJcblx0XHR5MSA9IHYueVxyXG5cdFx0diA9IHRyYW5zZm9ybVZlcnQgdmVydHNbQHZlcnQyXSwgY2FtZXJhXHJcblx0XHR4MiA9IHYueFxyXG5cdFx0eTIgPSB2LnlcclxuXHRcdHJ4ID0gKHgyIC0geDEpIC8gMlxyXG5cdFx0cnkgPSAoeTIgLSB5MSkgLyAyXHJcblx0XHRnLmVsbGlwc2UoXHJcblx0XHRcdHgxICsgcngsXHJcblx0XHRcdHkxICsgcnksXHJcblx0XHRcdHJ4LFxyXG5cdFx0XHRyeSxcclxuXHRcdFx0KEByb3RhdGlvbiB8fCAwKSAqIE1hdGguUEkgLyAxODAsXHJcblx0XHRcdChAc3RhcnRBbmdsZSB8fCAwKSAqIE1hdGguUEkgLyAxODAsXHJcblx0XHRcdChAZW5kQW5nbGUgfHwgMzYwKSAqIE1hdGguUEkgLyAxODAsXHJcblx0XHRcdGlmIEBjbG9ja3dpc2UgdGhlbiBmYWxzZSBlbHNlIHRydWUpXHJcblx0XHR0aGlzXHJcblxyXG5cclxuZHJhd1BhcnQgPSAoZywgbW9kZWwsIGNhbWVyYSwgb3BhY2l0eSkgLT5cclxuXHRnLnNhdmUoKVxyXG5cdHN0cm9rZSA9IEBzdHJva2VcclxuXHRzZXREcmF3U3R5bGUuY2FsbCB0aGlzLCBnLCBtb2RlbFxyXG5cdGcuZ2xvYmFsQWxwaGEgPSBvcGFjaXR5ICogKGlmIEBvcGFjaXR5ID09IG51bGwgdGhlbiAxIGVsc2UgQG9wYWNpdHkpXHJcblxyXG5cdGcuYmVnaW5QYXRoKClcclxuXHRkcmF3UGFydFR5cGVbQHR5cGUgfHwgJ3BvbHknXT8uY2FsbCB0aGlzLCBnLCBtb2RlbC5kYXRhLnZlcnRzLCBjYW1lcmEsIG1vZGVsLCBvcGFjaXR5XHJcblx0aWYgIUBub0Nsb3NlIHRoZW4gZy5jbG9zZVBhdGgoKVxyXG5cclxuXHRkcmF3ID0gQGRyYXcgfHwgJ2YmcydcclxuXHRpZiBkcmF3ID09ICdmJyB8fCBkcmF3ID09ICdmJnMnXHJcblx0XHRnLmZpbGwoKVxyXG5cdGlmIGRyYXcgPT0gJ3MnIHx8IGRyYXcgPT0gJ2YmcydcclxuXHRcdGcuc3Ryb2tlKClcclxuXHJcblx0Zy5yZXN0b3JlKClcclxuXHR0aGlzXHJcblxyXG5aX1RSQU5TRk9STSA9IDAuMDAwMlxyXG5aX09SSUdJTiA9IDEgLyBaX1RSQU5TRk9STVxyXG5cclxudHJzZk9iaiA9XHJcblx0eDogMFxyXG5cdHk6IDBcclxuXHRzY2FsZTogMVxyXG5cdGFwcGx5OiAoZykgLT5cclxuXHRcdGcudHJhbnNmb3JtIEBzY2FsZSwgMCwgMCwgQHNjYWxlLCBAeCwgQHlcclxuXHJcblxyXG5cclxuY2xhc3MgTW9kZWxcclxuXHRAdHJhbnNmb3JtOiAoeCwgeSwgeiwgY2FtZXJhKSAtPlxyXG5cdFx0eiA9IChaX09SSUdJTiArIHogKyBjYW1lcmEueikgKiBaX1RSQU5TRk9STVxyXG5cdFx0dHJzZk9iai54ID0gKHggKyBjYW1lcmEueCkgKiB6XHJcblx0XHR0cnNmT2JqLnkgPSAoeSArIGNhbWVyYS55KSAqIHpcclxuXHRcdHRyc2ZPYmouc2NhbGUgPSB6XHJcblx0XHR0cnNmT2JqXHJcblxyXG5cdGF0dGFjaG1lbnQ6IFtdXHJcblx0YW5pbWF0aW9uOiBuZXcgQW5pbWF0aW9uXHJcblx0YW5nbGU6IDBcclxuXHJcblx0Y29uc3RydWN0b3I6IChAZGF0YSkgLT5cclxuXHJcblx0c2V0RGF0YTogKEBkYXRhKSAtPlxyXG5cdFx0QHNldEFuZ2xlIEBhbmdsZVxyXG5cclxuXHRzZXRBbmdsZTogKGFuZ2xlKSAtPlxyXG5cdFx0QGFuZ2xlID0gYW5nbGUgPSBhbmdsZSAlIDM2MFxyXG5cdFx0QGFuaW1hdGlvbi5zZXRBbmdsZSBhbmdsZVxyXG5cdFx0ZGlycyA9IEBkYXRhLmRpcnNcclxuXHRcdGlmIGRpcnNcclxuXHRcdFx0biA9IGRpcnMubGVuZ3RoXHJcblx0XHRcdGlmIG4gPiAxXHJcblx0XHRcdFx0ZEFuZ2xlID0gMzYwIC8gblxyXG5cdFx0XHRcdCMgYW5nbGUgKz0gZEFuZ2xlIC8gMlxyXG5cdFx0XHRcdGlmIGFuZ2xlIDwgMCB0aGVuIGFuZ2xlICs9IDM2MFxyXG5cdFx0XHRcdEBtb2RlbCA9IGRpcnNbTWF0aC5mbG9vcihhbmdsZSAvIGRBbmdsZSldXHJcblx0XHRcdGVsc2VcclxuXHRcdFx0XHRAbW9kZWwgPSBkaXJzWzBdXHJcblx0XHRlbHNlXHJcblx0XHRcdEBtb2RlbCA9IG51bGxcclxuXHJcblx0XHRwYXJ0cyA9IEBkYXRhLmRpcnNQYXJ0c1xyXG5cdFx0aWYgcGFydHNcclxuXHRcdFx0biA9IHBhcnRzLmxlbmd0aFxyXG5cdFx0XHRpZiBuID4gMVxyXG5cdFx0XHRcdGRBbmdsZSA9IDM2MCAvIG5cclxuXHRcdFx0XHQjIGFuZ2xlICs9IGRBbmdsZSAvIDJcclxuXHRcdFx0XHRpZiBhbmdsZSA8IDAgdGhlbiBhbmdsZSArPSAzNjBcclxuXHRcdFx0XHRAcGFydHMgPSBwYXJ0c1tNYXRoLmZsb29yKGFuZ2xlIC8gZEFuZ2xlKV1cclxuXHRcdFx0ZWxzZVxyXG5cdFx0XHRcdEBwYXJ0cyA9IHBhcnRzWzBdXHJcblx0XHRlbHNlXHJcblx0XHRcdEBwYXJ0cyA9IG51bGxcclxuXHJcblx0ZHJhdzJEOiAoZywgb3BhY2l0eSA9IDEpIC0+XHJcblx0XHRpZiBAbW9kZWxcclxuXHRcdFx0Zm9yIGtleSwgbm9kZSBvZiBAbW9kZWxcclxuXHRcdFx0XHRpZiAhbm9kZS5oaWRlXHJcblx0XHRcdFx0XHRkcmF3Tm9kZS5jYWxsIG5vZGUsIGcsIHRoaXMsIG9wYWNpdHlcclxuXHJcblx0ZHJhd05vZGU6IChnLCBub2RlLCBvcGFjaXR5ID0gMSkgLT5cclxuXHRcdGlmIEBtb2RlbFxyXG5cdFx0XHRub2RlID0gQG1vZGVsW25vZGVdXHJcblx0XHRcdGlmIG5vZGVcclxuXHRcdFx0XHRkcmF3Tm9kZS5jYWxsIG5vZGUsIGcsIHRoaXMsIG9wYWNpdHlcclxuXHJcblx0ZHJhd1BhcnQ6IChnLCBwYXJ0LCBjYW1lcmEsIG9wYWNpdHkgPSAxKSAtPlxyXG5cdFx0Zm9yIGZhY2UgaW4gcGFydC5mYWNlc1xyXG5cdFx0XHRkcmF3UGFydC5jYWxsIGZhY2UsIGcsIHRoaXMsIGNhbWVyYSwgb3BhY2l0eVxyXG5cclxuXHRkcmF3UGFydHM6IChnLCBjYW1lcmEsIG9wYWNpdHkgPSAxKSAtPlxyXG5cdFx0aWYgQHBhcnRzXHJcblx0XHRcdGZvciBfLCBwYXJ0IG9mIEBwYXJ0c1xyXG5cdFx0XHRcdGlmICFwYXJ0LmhpZGVcclxuXHRcdFx0XHRcdGZvciBmYWNlIGluIHBhcnQuZmFjZXNcclxuXHRcdFx0XHRcdFx0ZHJhd1BhcnQuY2FsbCBmYWNlLCBnLCB0aGlzLCBjYW1lcmEsIG9wYWNpdHlcclxuXHJcbnRyYW5zZm9ybSA9IE1vZGVsLnRyYW5zZm9ybVxyXG5cclxudHJhbnNmb3JtVmVydCA9ICh2LCBjYW1lcmEpIC0+XHJcblx0dHJhbnNmb3JtIHYueCB8fCAwLCB2LnkgfHwgMCwgdi56IHx8IDAsIGNhbWVyYVxyXG5cclxuZXhwb3J0IHsgTW9kZWxEYXRhLCBNb2RlbCB9IiwiY2xhc3MgRXZlbnRFbW1pdGVyXHJcblx0aGFuZGxlcnM6IFtdXHJcblxyXG5cdG9uOiAoZXZlbnQsIGNhbGxiYWNrKSAtPlxyXG5cdFx0aWYgY2FsbGJhY2tcclxuXHRcdFx0aGFuZGxlciA9IEBoYW5kbGVyc1tldmVudF1cclxuXHRcdFx0aWYgIWhhbmRsZXJcclxuXHRcdFx0XHRAaGFuZGxlcnNbZXZlbnRdID0gaGFuZGxlciA9IFtdXHJcblx0XHRcdGlmIGhhbmRsZXIuaW5kZXhPZihjYWxsYmFjaykgPCAwXHJcblx0XHRcdFx0aGFuZGxlci5wdXNoIGNhbGxiYWNrXHJcblx0XHR0aGlzXHJcblxyXG5cdG9mZjogKGV2ZW50LCBjYWxsYmFjaykgLT5cclxuXHRcdGlmIGNhbGxiYWNrXHJcblx0XHRcdGhhbmRsZXIgPSBAaGFuZGxlcnNbZXZlbnRdXHJcblx0XHRcdGlmIGhhbmRsZXJcclxuXHRcdFx0XHRpbmRleCA9IGhhbmRsZXIuaW5kZXhPZiBjYWxsYmFja1xyXG5cdFx0XHRcdGlmIGluZGV4ID49IDBcclxuXHRcdFx0XHRcdGhhbmRsZXIuc3BsaWNlIGluZGV4LCAxXHJcblx0XHR0aGlzXHJcblxyXG5cdHRyaWdnZXI6IChldmVudCwgYXJncykgLT5cclxuXHRcdGhhbmRsZXIgPSBAaGFuZGxlcnNbZXZlbnRdXHJcblx0XHRpZiBoYW5kbGVyXHJcblx0XHRcdGZvciBjYWxsYmFjayBpbiBoYW5kbGVyXHJcblx0XHRcdFx0Y2FsbGJhY2suYXBwbHkgdGhpcywgYXJnc1xyXG5cdFx0dGhpc1xyXG5cclxuXHRyZW1vdmVFdmVudDogKGV2ZW50KSAtPlxyXG5cdFx0ZGVsZXRlIEBoYW5kbGVyc1tldmVudF1cclxuXHRcdHRoaXNcclxuXHJcbmV4cG9ydCB7IEV2ZW50RW1taXRlciB9IiwiaW1wb3J0IHsgRXZlbnRFbW1pdGVyIH0gZnJvbSAnLi9ldmVudHMnXHJcblxyXG4jIEV2ZW50czpcclxuIyAnY2hhbmdlcGVyY2VudCcgdHJpZ2dlciB3aGVuIHNvbWUgcmVzb3JjZXMgbG9hZGVkXHJcbiMgJ2xvYWQnIHRyaWdnZXIgd2hlbiBhbGwgcmVzb3JjZXMgbG9hZGVkXHJcblxyXG5jbGFzcyBMb2FkZXIgZXh0ZW5kcyBFdmVudEVtbWl0ZXJcclxuXHRsb2FkUmVzTnVtYmVyID0gMFxyXG5cdGFsbFJlc0xvYWRlciA9IDBcclxuXHJcblx0cmVzZXQ6ICgpIC0+XHJcblx0XHRsb2FkUmVzTnVtYmVyID0gYWxsUmVzTG9hZGVyID0gMFxyXG5cclxuXHRnZXRQZXJjZW50OiAtPlxyXG5cdFx0MSAtIGlmIGFsbFJlc0xvYWRlciAhPSAwIHRoZW4gbG9hZFJlc051bWJlciAvIGFsbFJlc0xvYWRlciBlbHNlIDBcclxuXHJcblx0dXBkYXRlUGVyY2VudDogKCkgLT5cclxuXHRcdEB0cmlnZ2VyICdjaGFuZ2VwZXJjZW50JywgWyBAZ2V0UGVyY2VudCgpIF1cclxuXHJcblx0bG9hZDogKGNhbGxiYWNrKSAtPlxyXG5cdFx0X3RoaXMgPSB0aGlzXHJcblx0XHRsb2FkUmVzTnVtYmVyKytcclxuXHRcdGFsbFJlc0xvYWRlcisrXHJcblx0XHQjIEB1cGRhdGVQZXJjZW50KClcclxuXHRcdC0+XHJcblx0XHRcdGNhbGxiYWNrPy5hcHBseSBfdGhpcywgYXJndW1lbnRzXHJcblx0XHRcdGxvYWRSZXNOdW1iZXItLVxyXG5cdFx0XHRpZiBsb2FkUmVzTnVtYmVyIDw9IDBcclxuXHRcdFx0XHRfdGhpcy5yZXNldCgpXHJcblx0XHRcdFx0X3RoaXMudHJpZ2dlciAnbG9hZCdcclxuXHRcdFx0X3RoaXMudXBkYXRlUGVyY2VudCgpXHJcblxyXG5cdGxvYWRKc29uOiAoZmlsZSwgY2FsbGJhY2spIC0+XHJcblx0XHRjYWxsYmFjayA9IEBsb2FkIGNhbGxiYWNrXHJcblx0XHQkLmdldEpTT04gZmlsZSArICcuanNvbidcclxuXHRcdFx0LmRvbmUgY2FsbGJhY2tcclxuXHRcdFx0LmZhaWwgLT5cclxuXHRcdFx0XHRjYWxsYmFjayBudWxsXHJcblxyXG5cdGxvYWRJbWFnZTogKGZpbGUsIGNhbGxiYWNrKSAtPlxyXG5cdFx0Y2FsbGJhY2sgPSBAbG9hZCBjYWxsYmFja1xyXG5cdFx0aW1nID0gbmV3IEltYWdlXHJcblx0XHRpbWcub25sb2FkID0gLT5cclxuXHRcdFx0Y2FsbGJhY2sgaW1nXHJcblx0XHRpbWcuc3JjID0gZmlsZVxyXG5cdFx0aW1nXHJcblxyXG5leHBvcnQgeyBMb2FkZXIgfSIsImltcG9ydCB7IE1vZGVsRGF0YSwgTW9kZWwgfSBmcm9tICcuL21vZGVsJ1xuaW1wb3J0IHsgQW5pbWF0aW9uRGF0YSB9IGZyb20gJy4vYW5pbWF0aW9uJ1xuaW1wb3J0IHsgTG9hZGVyIH0gZnJvbSAnLi9sb2FkZXInXG5cbiQoZG9jdW1lbnQpLnJlYWR5IC0+XG5cdCRjYW52YXMgPSAkICcjY2FudmFzJ1xuXHRjYW52YXMgPSAkY2FudmFzLmdldCAwXG5cdGNvbnRleHQgPSBjYW52YXMuZ2V0Q29udGV4dCAnMmQnLCBhbHBoYTogZmFsc2VcblxuXHRtb2RlbEZpbGUgPSAnbW9kZWxzL3Rlc3QxJ1xuXHRsb2FkZXIgPSBuZXcgTG9hZGVyXG5cdG1vZGVsID0gbmV3IE1vZGVsXG5cdG1vZGVsRGF0YSA9IG5ldyBNb2RlbERhdGFcblx0YW5pbWF0aW9uRnJhbWUgPSBudWxsXG5cdGNhbWVyYSA9XG5cdFx0Y2FudmFzOiBjYW52YXNcblx0XHRnOiBjb250ZXh0XG5cdFx0eDogMFxuXHRcdHk6IDBcblx0XHR6OiAwXG5cblx0cmVzaXplID0gLT5cblx0XHRjYW52YXMud2lkdGggPSAkKHdpbmRvdykud2lkdGgoKVxuXHRcdGNhbnZhcy5oZWlnaHQgPSAkKHdpbmRvdykuaGVpZ2h0KCkgLSAkKCcjY2FudmFzJykub2Zmc2V0KCkudG9wXG5cblx0cmVzaXplKClcblxuXHQkKHdpbmRvdykub24gJ3Jlc2l6ZScsIHJlc2l6ZVxuXG5cdG1vZGVsUmVmcmVzaCA9IC0+XG4jXHRcdGZvciBrZXksIF8gb2YgbW9kZWxEYXRhXG4jXHRcdFx0ZGVsZXRlIG1vZGVsRGF0YVtrZXldXG5cdFx0bW9kZWxEYXRhLmxvYWQgbG9hZGVyLCBtb2RlbEZpbGVcblx0XG5cdGxvYWRlci5vbiAnbG9hZCcsIC0+XG5cdFx0bW9kZWwuc2V0RGF0YSBtb2RlbERhdGFcblx0XHRpZiBtb2RlbC5hbmltYXRpb24uZGF0YVxuXHRcdFx0IyBtb2RlbC5hbmltYXRpb24uc2V0QW5pbSAndGVzdCcsIDBcblx0XHRcdCNcblx0XHRcdGNvbnRhaW5lciA9ICQgJy5qcy1mcmFtZS1jb250YWluZXInXG5cdFx0XHRjb250YWluZXIuZW1wdHkoKVxuXHRcdFx0Zm9yIGFuaW0sIF8gb2YgbW9kZWwuYW5pbWF0aW9uLmRhdGFcblx0XHRcdFx0Y29udGFpbmVyLmFwcGVuZCBcIjxhIGNsYXNzPSdkcm9wZG93bi1pdGVtIGpzLWZyYW1lLXNlbGVjdCcgaHJlZj0nIyc+I3thbmltfTwvYT5cIlxuXHRcdFx0bW9kZWwuYW5pbWF0aW9uLnNldEFuaW0gYW5pbWF0aW9uRnJhbWUsIG1vZGVsLmFuZ2xlXG5cdFx0XHQkKCcuanMtZnJhbWUtc2VsZWN0JykuY2xpY2sgLT5cblx0XHRcdFx0YW5pbWF0aW9uRnJhbWUgPSAkKHRoaXMpLnRleHQoKVxuXHRcdFx0XHRtb2RlbC5hbmltYXRpb24uc2V0QW5pbSBhbmltYXRpb25GcmFtZSwgbW9kZWwuYW5nbGVcblxuXHRjb25zb2xlLmxvZyBtb2RlbFxuXG5cdG1SZWZyZXNoSW50ZXJ2YWwgPSBzZXRJbnRlcnZhbCBtb2RlbFJlZnJlc2gsIDUwMFxuXG5cdHJlbmRlciA9IChkZWx0YSkgLT5cblx0XHRjb250ZXh0LnNhdmUoKVxuXHRcdHcgPSBjYW52YXMud2lkdGhcblx0XHRoID0gY2FudmFzLmhlaWdodFxuXHRcdGN4ID0gdyAvIDJcblx0XHRjeSA9IDBcblx0XHRjb250ZXh0LmZpbGxTdHlsZSA9ICcjZmZmJ1xuXHRcdGNvbnRleHQuZmlsbFJlY3QgMCwgMCwgdywgaFxuXHRcdGNvbnRleHQuYmVnaW5QYXRoKClcblx0XHRjb250ZXh0LmxpbmVXaWR0aCA9IDJcblx0XHRjb250ZXh0LnN0cm9rZVN0eWxlID0gJyNmMDAnXG5cdFx0Y29udGV4dC5tb3ZlVG8gY3gsIDBcblx0XHRjb250ZXh0LmxpbmVUbyBjeCwgaFxuXHRcdGNvbnRleHQubW92ZVRvIDAsIGN5XG5cdFx0Y29udGV4dC5saW5lVG8gdywgY3lcblx0XHRjb250ZXh0LnN0cm9rZSgpXG5cblx0XHRjb250ZXh0LnRyYW5zbGF0ZSBjeCwgY3lcblxuXHRcdG1vZGVsLmFuaW1hdGlvbi5wbGF5KClcblxuXHRcdG1vZGVsLmRyYXdQYXJ0cyBjb250ZXh0LCBjYW1lcmFcblxuXHRcdE1vZGVsLnRyYW5zZm9ybSgwLCAwLCAwLCBjYW1lcmEpXG5cdFx0XHQuYXBwbHkgY29udGV4dFxuXG5cdFx0bW9kZWwuZHJhdzJEIGNvbnRleHRcblxuXHRcdGNvbnRleHQucmVzdG9yZSgpXG5cdFx0IyBcblx0XHR3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lIHJlbmRlclxuXG5cdHJlbmRlcigwKVxuXG5cdG9sZE1vdXNlWCA9IG9sZE1vdXNlWSA9MFxuXHRtb3ZlQ2FtZXJhID0gKGUpIC0+XG5cdFx0Y2FtZXJhLnggKz0gZS5jbGllbnRYIC0gb2xkTW91c2VYXG5cdFx0Y2FtZXJhLnkgKz0gZS5jbGllbnRZIC0gb2xkTW91c2VZXG5cdFx0b2xkTW91c2VYID0gZS5jbGllbnRYXG5cdFx0b2xkTW91c2VZID0gZS5jbGllbnRZXG5cblx0JGNhbnZhcy5vbiAnbW91c2Vkb3duJywgKGUpIC0+XG5cdFx0b2xkTW91c2VYID0gZS5jbGllbnRYXG5cdFx0b2xkTW91c2VZID0gZS5jbGllbnRZXG5cdFx0JGNhbnZhcy5vbiAnbW91c2Vtb3ZlJywgbW92ZUNhbWVyYVxuXG5cdCRjYW52YXMub24gJ3RvdWNoc3RhcnQnLCAoZSkgLT5cblx0XHRvbGRNb3VzZVggPSBlLnRvdWNoZXNbMF0uY2xpZW50WFxuXHRcdG9sZE1vdXNlWSA9IGUudG91Y2hlc1swXS5jbGllbnRZXG5cblx0JGNhbnZhcy5vbiAndG91Y2htb3ZlJywgKGUpIC0+XG5cdFx0bW92ZUNhbWVyYSBlLnRvdWNoZXNbMF1cblxuXHQkY2FudmFzLm9uICdtb3VzZXVwJywgLT5cblx0XHQkY2FudmFzLm9mZiAnbW91c2Vtb3ZlJywgbW92ZUNhbWVyYVxuXG5cdCQoJy5qcy16LW51bWJlcicpXG5cdFx0LnZhbCBjYW1lcmEuelxuXHRcdC5vbiAnaW5wdXQgY2hhbmdlJywgLT5cblx0XHRcdGNhbWVyYS56ID0gKyAkKHRoaXMpLnZhbCgpXG5cblx0JCgnLmpzLWFuZ2xlLW51bWJlcicpXG5cdFx0LnZhbCBtb2RlbC5hbmdsZVxuXHRcdC5vbiAnaW5wdXQgY2hhbmdlJywgLT5cblx0XHRcdG1vZGVsLnNldEFuZ2xlICgrICQodGhpcykudmFsKCkpXG5cblx0JCgnLmpzLW1vZGVsLXNlbGVjdCcpLmNsaWNrIC0+XG5cdFx0bW9kZWxEYXRhID0gbmV3IE1vZGVsRGF0YVxuXHRcdG1vZGVsRmlsZSA9ICQodGhpcykuZGF0YSAnZmlsZSdcblxuXHQkKCcuanMtYW5pbS1zZWxlY3QnKS5jbGljayAtPlxuXHRcdGZpbGUgPSAkKHRoaXMpLmRhdGEgJ2ZpbGUnXG5cdFx0bW9kZWwuYW5pbWF0aW9uLmRhdGEgPSBuZXcgQW5pbWF0aW9uRGF0YVxuXHRcdG1vZGVsLmFuaW1hdGlvbi5kYXRhLmxvYWQgbG9hZGVyLCBmaWxlXG5cdFx0JCgnLmpzLWFuaW0tcmVmcmVzaCcpLmRhdGEgJ2ZpbGUnLCBmaWxlXG5cdFx0I1xuXHRcdCQoJy5qcy1yZWZyZXNoLW1vZGVsJykucHJvcCAnY2hlY2tlZCcsIGZhbHNlXG5cdFx0Y2xlYXJJbnRlcnZhbCBtUmVmcmVzaEludGVydmFsXG5cblx0TW9kZWwuZHJhd09yaWdpbiA9IHRydWVcblx0JCgnLmpzLWRyYXctb3JpZ2luJykuY2hhbmdlIC0+XG5cdFx0TW9kZWwuZHJhd09yaWdpbiA9ICQodGhpcykucHJvcCAnY2hlY2tlZCdcblxuXHQkKCcuanMtcmVmcmVzaC1tb2RlbCcpLmNoYW5nZSAtPlxuXHRcdGlmICQodGhpcykucHJvcCAnY2hlY2tlZCdcblx0XHRcdG1SZWZyZXNoSW50ZXJ2YWwgPSBzZXRJbnRlcnZhbCBtb2RlbFJlZnJlc2gsIDUwMFxuXHRcdGVsc2Vcblx0XHRcdGNsZWFySW50ZXJ2YWwgbVJlZnJlc2hJbnRlcnZhbFxuXG5cdCQoJy5qcy1yZXNldC1wb3MnKS5jbGljayAtPlxuXHRcdGNhbWVyYS54ID0gY2FtZXJhLnkgPSBjYW1lcmEueiA9IDBcblx0XHQkKCcuanMtei1udW1iZXInKS52YWwgJzAnXG5cblx0ZnVsbHNjcmVlbiA9IGZhbHNlXG5cdCQoJy5qcy1mdWxsLXNjcmVlbicpLmNsaWNrIC0+XG5cdFx0aWYgZnVsbHNjcmVlblxuXHRcdFx0Y2FuY2VsRnVsbHNjcmVlbigpXG5cdFx0ZWxzZVxuXHRcdFx0bGF1bmNoRnVsbFNjcmVlbiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnRcblx0XHRmdWxsc2NyZWVuID0gIWZ1bGxzY3JlZW5cblxuXHRsYXVuY2hGdWxsU2NyZWVuID0gKGVsZW1lbnQpIC0+XG5cdFx0aWYgZWxlbWVudC5yZXF1ZXN0RnVsbFNjcmVlblxuXHRcdFx0ZWxlbWVudC5yZXF1ZXN0RnVsbFNjcmVlbigpXG5cdFx0ZWxzZSBpZiBlbGVtZW50Lm1velJlcXVlc3RGdWxsU2NyZWVuXG5cdFx0XHRlbGVtZW50Lm1velJlcXVlc3RGdWxsU2NyZWVuKClcblx0XHRlbHNlIGlmIGVsZW1lbnQud2Via2l0UmVxdWVzdEZ1bGxTY3JlZW5cblx0XHRcdGVsZW1lbnQud2Via2l0UmVxdWVzdEZ1bGxTY3JlZW4oKVxuXG5cdGNhbmNlbEZ1bGxzY3JlZW4gPSAtPlxuXHRcdGlmIGRvY3VtZW50LmNhbmNlbEZ1bGxTY3JlZW5cblx0XHRcdGRvY3VtZW50LmNhbmNlbEZ1bGxTY3JlZW4oKVxuXHRcdGVsc2UgaWYgZG9jdW1lbnQubW96Q2FuY2VsRnVsbFNjcmVlblxuXHRcdFx0ZG9jdW1lbnQubW96Q2FuY2VsRnVsbFNjcmVlbigpXG5cdFx0ZWxzZSBpZiBkb2N1bWVudC53ZWJraXRDYW5jZWxGdWxsU2NyZWVuXG5cdFx0XHRkb2N1bWVudC53ZWJraXRDYW5jZWxGdWxsU2NyZWVuKCkiXX0=
