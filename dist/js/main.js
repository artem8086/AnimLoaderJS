"use strict";!function(){var t,i,e,s,n,r,h,o;i=function(){class t{static load(i,e){var s;return null===(s=t.modelsCache[e])&&((s=new t).load(i,e),t.modelsCache[e]=s),s}load(i,e){return i.loadJson(e,e=>{var s,n,r,h,o,a,l;if(e){for(n in e)l=e[n],this[n]=l;if(this.images)for(n in h=this.images)s=h[n],this.images[n]=i.loadImage(s);if(this.models){for(n in a=[],o=this.models)r=o[n],a.push(this.models[n]=t.load(i,r));return a}}})}}return t.modelsCache=[],t}.call(void 0),n={line:function(t){return t.moveTo(this.x1||0,this.y1||0),t.lineTo(this.x2||0,this.y2||0)},rect:function(t){return t.rect(this.x||0,this.y||0,this.width||1,this.height||1)},rectRound:function(t){var i,e,s,n,r;return this.noClose=!1,n=this.x||0,r=this.y||0,s=this.width,i=this.height,s<2*(e=this.radius)&&(e=s/2),i<2*e&&(e=i/2),t.moveTo(n+e,r),t.arcTo(n+s,r,n+s,r+i,e),t.arcTo(n+s,r+i,n,r+i,e),t.arcTo(n,r+i,n,r,e),t.arcTo(n,r,n+s,r,e)},arc:function(t){return t.arc(this.x||0,this.y||0,this.radius,(this.startAngle||0)*Math.PI/180,(this.endAngle||0)*Math.PI/180,!this.clockwise)},path:function(t){var i;if(this.x||0,this.y||0,"string"==typeof this.path&&(this.path=new Path(this.path)),this.noClose=!0,"f"!==(i=this.draw||"f&s")&&"f&s"!==i||t.fill(this.path),"s"===i||"f&s"===i)return t.stroke(this.path)},node:function(t,i,e){var n,r,h,o;if(this.noClose=this.draw=!0,"string"==typeof(h=this.node))h=i.model.root2D[h];else{for(o=i.model.root2D,n=0,r=h.length;n<r;n++)o=o[h[n]];h=o}if(t.translate(this.x||0,this.y||0),this.ignoreHide||!h.hide)return s.call(h,t,i,e)},image:function(t,i){var e;return this.noClose=this.draw=!0,e=i.data.images[this.image],this.width||this.height?t.drawImage(e,this.x||0,this.y||0,this.width,this.height):t.drawImage(e,this.x||0,this.y||0)}},s=function(t,i,e){var r,h,o,a,l;if(t.save(),t.transform(this.scaleX||1,this.skewY||0,this.skewX||0,this.scaleY||1,this.origX||0,this.origY||0),this.angle&&t.rotate(this.angle*Math.PI/180),this.stroke&&(t.strokeStyle=this.stroke),this.fill&&(t.fillStyle=this.fill),this.lineWidth&&(t.lineWidth=this.lineWidth),this.lineCap&&(t.lineCap=this.lineCap),this.lineJoin&&(t.lineJoin=this.lineJoin),this.lineDashOffset&&(t.lineDashOffset=this.lineDashOffset),t.globalAlpha=e*(this.opacity||1),t.beginPath(),null!=(a=n[this.type])&&a.call(this,t,i,e),this.noClose||t.closePath(),"f"!==(r=this.draw||"f&s")&&"f&s"!==r||t.fill(),"s"!==r&&"f&s"!==r||t.stroke(),this.childs)for(h in l=this.childs)(o=l[h]).hide||s.call(o,t,i,e);return t.restore()},e=.002,r={x:0,y:0,scale:1,apply:function(t){return t.transform(this.scale,0,0,this.scale,this.x,this.y)}},t=function(){class t{static transform(t,i,s,n){var h,o;return h=n.canvas.width/2,o=n.canvas.height/2,t-=h-n.x,i-=o-n.y,s=(500+s+n.z)*e,r.x=t*s+h,r.y=i*s+o,r.scale=s,r}constructor(t){this.data=t}setData(t){return this.data=t,this.setDirection(this.direction)}setDirection(t){return this.direction=t,this.data.dirs.lenght<this.direction&&(this.direction=0),this.model=this.data.dirs[this.direction]}draw2D(t,i=1){var e,n,r,h;if(this.model&&(h=this.model.root2D)){for(e in r=[],h)(n=h[e]).hide?r.push(void 0):r.push(s.call(n,t,this,i));return r}}}return t.prototype.direction=0,t}.call(void 0),h=function(){class t{on(t,i){var e;if(i&&((e=this.handlers[t])||(this.handlers[t]=e=[]),e.indexOf(i)<0))return e.push(i)}off(t,i){var e,s;if(i&&(e=this.handlers[t])&&(s=e.indexOf(i))>=0)return e.splice(s,1)}trigger(t,i){var e,s,n,r,h;if(s=this.handlers[t]){for(h=[],n=0,r=s.length;n<r;n++)e=s[n],h.push(e.apply(this,i));return h}}removeEvent(t){return delete this.handlers[t]}}return t.prototype.handlers=[],t}.call(void 0),o=function(){var t,i;return i=0,t=0,class extends h{reset(){return i=t=0}getPercent(){return 1-(0!==t?i/t:0)}updatePercent(){return this.trigger("changepercent",[this.getPercent()])}load(e){var s;return s=this,i++,t++,function(){return null!=e&&e.apply(s,arguments),--i<=0&&(s.reset(),s.trigger("load")),s.updatePercent()}}loadJson(t,i){return i=this.load(i),$.getJSON(t+".json").done(i).fail((function(){return i(null)}))}loadImage(t,i){var e;return i=this.load(i),(e=new Image).onload((function(){return i(e)})),e.src=t,e}}}.call(void 0),$(document).ready((function(){var e,s,n,r,h,a,l,c,d,u,f,g,m,v;return e=$("#canvas"),n=e.get(0),r=n.getContext("2d",{alpha:!1}),(v=function(){return n.width=$(window).width(),n.height=$(window).height()-$("#canvas").offset().top})(),$(window).on("resize",v),c="anims/test",h=new o,a=new t,l=new i,s={canvas:n,g:r,x:0,y:0,z:0},d=function(){var t;for(t in l)l[t],delete l[t];return l.load(h,c)},h.on("load",(function(){return a.setData(l)})),console.log(a),setInterval(d,500),(m=function(i){var e,h;return r.save(),h=n.width,e=n.height,r.fillStyle="#fff",r.fillRect(0,0,h,e),r.beginPath(),r.lineWidth=2,r.strokeStyle="#f00",r.moveTo(h/2,0),r.lineTo(h/2,e),r.moveTo(0,e/2),r.lineTo(h,e/2),r.stroke(),r.translate(h/2,e/2),t.transform(0,0,0,s).apply(r),a.draw2D(r),r.restore(),window.requestAnimationFrame(m)})(0),f=g=0,u=function(t){return s.x+=t.clientX-f,s.y+=t.clientY-g,f=t.clientX,g=t.clientY},e.mousedown((function(t){return f=t.clientX,g=t.clientY,e.on("mousemove",u)})),e.mouseup((function(){return e.off("mousemove",u)})),$(".js-z-number").val(s.z).on("input change",(function(){return s.z=+$(this).val()})),$(".js-anim-select").click((function(){return c=$(this).data("file")}))}))}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
