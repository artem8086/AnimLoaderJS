"use strict";!function(){var t,i,e,s,n,r,o,h,a,l;i=function(){class t{static load(i,e){var s;return null===(s=t.modelsCache[e])&&((s=new t).load(i,e),t.modelsCache[e]=s),s}load(i,e){return i.loadJson(e,e=>{var s,n,r,o,h,a,l;if(e){for(n in e)l=e[n],this[n]=l;if(this.images)for(n in o=this.images)s=o[n],this.images[n]=i.loadImage(s);if(this.models){for(n in a=[],h=this.models)r=h[n],a.push(this.models[n]=t.load(i,r));return a}}})}}return t.modelsCache=[],t}.call(void 0),n={line:function(t){return t.moveTo(this.x1||0,this.y1||0),t.lineTo(this.x2||0,this.y2||0)},rect:function(t){return t.rect(this.x||0,this.y||0,this.width||1,this.height||1)},rectRound:function(t){var i,e,s,n,r;return this.noClose=!1,n=this.x||0,r=this.y||0,s=this.width,i=this.height,s<2*(e=this.radius)&&(e=s/2),i<2*e&&(e=i/2),t.moveTo(n+e,r),t.arcTo(n+s,r,n+s,r+i,e),t.arcTo(n+s,r+i,n,r+i,e),t.arcTo(n,r+i,n,r,e),t.arcTo(n,r,n+s,r,e)},arc:function(t){return t.arc(this.x||0,this.y||0,this.radius,(this.startAngle||0)*Math.PI/180,(this.endAngle||360)*Math.PI/180,!this.clockwise)},elipse:function(t){return t.ellipse(this.x||0,this.y||0,this.rx,this.ry,(this.rotation||0)*Math.PI/180,(this.startAngle||0)*Math.PI/180,(this.endAngle||360)*Math.PI/180,!this.clockwise)},path:function(t){var i;if(this.x||0,this.y||0,"string"==typeof this.path&&(this.path=new Path(this.path)),this.noClose=!0,"f"!==(i=this.draw||"f&s")&&"f&s"!==i||t.fill(this.path),"s"===i||"f&s"===i)return t.stroke(this.path)},node:function(t,i,e){var n,r,o,h;if(this.noClose=this.draw=!0,"string"==typeof(o=this.node))o=i.model.root2D[o];else{for(h=i.model.root2D,n=0,r=o.length;n<r;n++)h=h[o[n]];o=h}return t.translate(this.x||0,this.y||0),s.call(o,t,i,e)},image:function(t,i){var e;return this.noClose=this.draw=!0,e=i.data.images[this.image],this.width||this.height?t.drawImage(e,this.x||0,this.y||0,this.width,this.height):t.drawImage(e,this.x||0,this.y||0)}},o={linear:function(t){var i,e,s,n,r;for(e=t.createLinearGradient(this.x0||0,this.y0||0,this.x1||0,this.y1||0),s=0,n=(r=this.colorStops).length;s<n;s++)i=r[s],e.addColorStop(i.pos||0,i.color);return e},radial:function(t){var i,e,s,n,r;for(e=t.createRadialGradient(this.x0||0,this.y0||0,this.r0||0,this.x1||0,this.y1||0,this.r1||0),s=0,n=(r=this.colorStops).length;s<n;s++)i=r[s],e.addColorStop(i.pos||0,i.color);return e},pattern:function(t,i){var e;return e=i.data.images[this.image],t.createPattern(e,this.repetition||"repeat")}},r=function(t,i,e){var s;return null!=(s=o[e.type])?s.call(e,t,i):void 0},s=function(t,i,e){var o,h,a,l,c,u,d,f;if(t.save(),t.transform(this.scaleX||1,this.skewY||0,this.skewX||0,this.scaleY||1,this.origX||0,this.origY||0),this.angle&&t.rotate(this.angle*Math.PI/180),(f=this.stroke)&&(f.constructor===Object&&(this.stroke=r(t,i,f)),t.strokeStyle=this.stroke),(h=this.fill)&&(h.constructor===Object&&(this.fill=r(t,i,h)),t.fillStyle=this.fill),this.lineWidth&&(t.lineWidth=this.lineWidth),this.lineCap&&(t.lineCap=this.lineCap),this.lineJoin&&(t.lineJoin=this.lineJoin),this.lineDashOffset&&(t.lineDashOffset=this.lineDashOffset),this.shadowBlur&&(t.shadowBlur=this.shadowBlur),this.shadowColor&&(t.shadowColor=this.shadowColor),this.shadowOffsetX&&(t.shadowOffsetX=this.shadowOffsetX),this.shadowOffsetY&&(t.shadowOffsetY=this.shadowOffsetY),t.globalAlpha=e*(this.opacity||1),this.before)for(a in c=this.before)(l=c[a]).hide||s.call(l,t,i,e);if(t.beginPath(),null!=(u=n[this.type])&&u.call(this,t,i,e),this.noClose||t.closePath(),"f"!==(o=this.draw||"f&s")&&"f&s"!==o||t.fill(),"s"!==o&&"f&s"!==o||t.stroke(),this.after)for(a in d=this.after)(l=d[a]).hide||s.call(l,t,i,e);return t.restore()},e=.002,h={x:0,y:0,scale:1,apply:function(t){return t.transform(this.scale,0,0,this.scale,this.x,this.y)}},t=function(){class t{static transform(t,i,s,n){var r,o;return r=n.canvas.width/2,o=n.canvas.height/2,t-=r-n.x,i-=o-n.y,s=(500+s+n.z)*e,h.x=t*s+r,h.y=i*s+o,h.scale=s,h}constructor(t){this.data=t}setData(t){return this.data=t,this.setDirection(this.direction)}setDirection(t){return this.direction=t,this.data.dirs.lenght<this.direction&&(this.direction=0),this.model=this.data.dirs[this.direction]}draw2D(t,i=1){var e,n,r,o;if(this.model&&(o=this.model.root2D)){for(e in r=[],o)(n=o[e]).hide?r.push(void 0):r.push(s.call(n,t,this,i));return r}}}return t.prototype.direction=0,t}.call(void 0),a=function(){class t{on(t,i){var e;if(i&&((e=this.handlers[t])||(this.handlers[t]=e=[]),e.indexOf(i)<0))return e.push(i)}off(t,i){var e,s;if(i&&(e=this.handlers[t])&&(s=e.indexOf(i))>=0)return e.splice(s,1)}trigger(t,i){var e,s,n,r,o;if(s=this.handlers[t]){for(o=[],n=0,r=s.length;n<r;n++)e=s[n],o.push(e.apply(this,i));return o}}removeEvent(t){return delete this.handlers[t]}}return t.prototype.handlers=[],t}.call(void 0),l=function(){var t,i;return i=0,t=0,class extends a{reset(){return i=t=0}getPercent(){return 1-(0!==t?i/t:0)}updatePercent(){return this.trigger("changepercent",[this.getPercent()])}load(e){var s;return s=this,i++,t++,function(){return null!=e&&e.apply(s,arguments),--i<=0&&(s.reset(),s.trigger("load")),s.updatePercent()}}loadJson(t,i){return i=this.load(i),$.getJSON(t+".json").done(i).fail((function(){return i(null)}))}loadImage(t,i){var e;return i=this.load(i),(e=new Image).onload((function(){return i(e)})),e.src=t,e}}}.call(void 0),$(document).ready((function(){var e,s,n,r,o,h,a,c,u,d,f,g,p,v;return e=$("#canvas"),n=e.get(0),r=n.getContext("2d",{alpha:!1}),(v=function(){return n.width=$(window).width(),n.height=$(window).height()-$("#canvas").offset().top})(),$(window).on("resize",v),c="anims/test",o=new l,h=new t,a=new i,s={canvas:n,g:r,x:0,y:0,z:0},u=function(){var t;for(t in a)a[t],delete a[t];return a.load(o,c)},o.on("load",(function(){return h.setData(a)})),console.log(h),setInterval(u,500),(p=function(i){var e,o;return r.save(),o=n.width,e=n.height,r.fillStyle="#fff",r.fillRect(0,0,o,e),r.beginPath(),r.lineWidth=2,r.strokeStyle="#f00",r.moveTo(o/2,0),r.lineTo(o/2,e),r.moveTo(0,e/2),r.lineTo(o,e/2),r.stroke(),r.translate(o/2,e/2),t.transform(0,0,0,s).apply(r),h.draw2D(r),r.restore(),window.requestAnimationFrame(p)})(0),f=g=0,d=function(t){return s.x+=t.clientX-f,s.y+=t.clientY-g,f=t.clientX,g=t.clientY},e.on("mousedown",(function(t){return f=t.clientX,g=t.clientY,e.on("mousemove",d)})),e.on("touchstart",(function(t){return f=t.touches[0].clientX,g=t.touches[0].clientY})),e.on("touchmove",(function(t){return d(t.touches[0])})),e.on("mouseup",(function(){return e.off("mousemove",d)})),$(".js-z-number").val(s.z).on("input change",(function(){return s.z=+$(this).val()})),$(".js-anim-select").click((function(){return c=$(this).data("file")}))}))}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
