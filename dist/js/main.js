"use strict";!function(){var t,e,i,r,s,n,a,o,h,l,c,u,f,d,p,m,g,v,w,y,x,k,P,O;t=function(){class t{static load(e,i){var r;return(r=t.cache[i])||((r=new t).load(e,i),t.cache[i]=r),r}load(t,e){return t.loadJson(e,t=>{this.data=t}),t.loadImage(e+".png",t=>{this.texture=t})}draw(t,e,i,r,s=0){var n;if(n=this.data)switch(e.constructor){case Object:t.drawImage(this.texture,e.x,e.y,e.w,e.h,i+e.cx,r+e.cy,e.w,e.h);break;case Array:this.draw(t,e[Math.floor(s)%e.lenght],i,r);break;case String:this.draw(t,n[e],i,r,s)}return this}}return t.cache=[],t}.call(void 0),i=function(){class t{static load(e,i){var r;return(r=t.cache[i])||((r=new t).load(e,i),t.cache[i]=r),r}load(t,e){return t.loadJson(e,t=>{var e,i,r;if(t){for(e in i=[],t)r=t[e],i.push(this[e]=r);return i}})}}return t.cache=[],t}.call(void 0),r=function(){return(new Date).getTime()/1e3},n=function(t){return function(e){return 1-t(1-e)}},s=function(t){return function(e){return e<.5?t(2*e)/2:(2-t(2*(1-e)))/2}},a=function(t,e){return o[t]=e,o[t+"EaseOut"]=n(e),o[t+"EaseInOut"]=s(e)},o={linear:function(t){return t},easeOut:function(t){return 1-t},easeInOut:function(t){return t<.5?2*t:2-2*t}},a("quad",(function(t){return t*t})),a("circle",(function(t){return 1-Math.sin(Math.acos(t))})),a("bounce",(function(t){var e,i;for(e=0,i=1;;){if(t>=(7-4*e)/11)return-Math.pow((11-6*e-11*t)/4,2)+Math.pow(i,2);e+=i,i/=2}})),e=function(){class t{reset(){return this.startTime=r(),this.deltaTime=0,this}setAnim(t,e=0,i=this.data){return this.anim=null!=i?i[t]:void 0,this.reset(),this.anim&&(this.duration=this.anim?this.anim.duration:0,this.setAngle(e)),this}setAngle(t){var e,i,r;return this.frame=null,this.anim&&(t%=360,(i=this.anim.dirs)&&((r=i.lenght)>1?((t+=(e=360/r)>>1)<0&&(t+=360),this.frame=i[Math.floor(t/e)]):this.frame=i[0])),this}play(t){var e,i;if(t=t||r(),this.deltaTime=e=(t-this.startTime)*this.scale,!(i=this.duration))return!1;if(e>i){if(!this.loop)return!1;this.deltaTime%=i}return!0}animate(e,i=e.nodePath){var r,s,n,a,h,l,c,u,f,d,p,m,g,v;if((s=this.frame)&&(g=s[i]))for(r=this.deltaTime,u=t.props,f=t.propsUsed,n=0,a=g.length;n<a;n++)if(r>=(l=g[n]).start&&r<l.end)for(h in p=l.func?o[l.func]:o.linear,d=l.from)c=d[h],u[h]=e[h],f[h]=!0,null!==(v=l.to[h])?(m=p((r-l.start)/(l.end-l.start)),e[h]=(v-c)*m+c):e[h]=c;return this}reciveProps(e){var i,r,s;for(i in r=t.props,s=t.propsUsed)s[i]&&(e[i]=r[i],s[i]=!1);return this}createWorkFrame(){return this.loop=!1,this.frame={work:[{start:0,end:0,from:{},to:{}}]},this}resetWork(){var e,i,r,s,n;for(r in s=t.propsUsed,(e=this.frame.work[0]).start=e.end=0,i=e.from,n=e.to,s)s[r]&&(delete i[r],delete n[r],s[r]=!1);return this}animateProps(t,e,i,r){var s,n,a,o,h;for(a in this.duration=i,(s=this.frame.work[0]).end=i,s.func=r,n=s.from,h=s.to,e)o=e[a],n[a]=t[a],h[a]=o;return this.reset(),this}}return t.prototype.loop=!0,t.prototype.startTime=0,t.prototype.duration=0,t.prototype.deltaTime=0,t.prototype.scale=1,t.props=[],t.propsUsed=[],t}.call(void 0),l=function(){class e{static load(t,i){var r;return(r=e.cache[i])||((r=new e).load(t,i),e.cache[i]=r),r}load(i,r){return i.loadJson(r,r=>{var s,n,a,o,h,l,c,u,f,d,p,m,g,v;if(r){for(o in r)v=r[o],this[o]=v;if(this.images)for(o in n=this.images,this.images=[],n)s=n[o],this.images[o]=i.loadImage(s);if(this.sprites)for(o in g=this.sprites,this.sprites=[],g)m=g[o],this.sprites[o]=t.load(i,m);if(this.models)for(o in c=this.models,this.models=[],c)l=c[o],this.models[o]=e.load(i,l);if(f=function(t,e=""){var i,r,s;for(i in s=[],t)(r=t[i]).nodePath=e+i,r.before&&f(r.before,r.nodePath+"\\"),r.after?s.push(f(r.after,r.nodePath+"/")):s.push(void 0);return s},this.dirs){for(p=[],a=0,h=(d=this.dirs).length;a<h;a++)u=d[a],p.push(f(u));return p}}})}}return e.cache=[],e}.call(void 0),m={line:function(t){return t.moveTo(this.x1||0,this.y1||0),t.lineTo(this.x2||0,this.y2||0)},rect:function(t){return t.rect(this.x||0,this.y||0,this.width||1,this.height||1)},rectRound:function(t){var e,i,r,s,n;return this.noClose=!1,s=this.x||0,n=this.y||0,r=this.width,e=this.height,r<2*(i=this.radius)&&(i=r/2),e<2*i&&(i=e/2),t.moveTo(s+i,n),t.arcTo(s+r,n,s+r,n+e,i),t.arcTo(s+r,n+e,s,n+e,i),t.arcTo(s,n+e,s,n,i),t.arcTo(s,n,s+r,n,i)},arc:function(t){return t.arc(this.x||0,this.y||0,this.radius,(this.startAngle||0)*Math.PI/180,(this.endAngle||360)*Math.PI/180,!this.clockwise)},elipse:function(t){return t.ellipse(this.x||0,this.y||0,this.rx,this.ry,(this.rotation||0)*Math.PI/180,(this.startAngle||0)*Math.PI/180,(this.endAngle||360)*Math.PI/180,!this.clockwise)},path:function(t){var e;if(this.x||0,this.y||0,"string"==typeof this.path&&(this.path=new Path(this.path)),this.noClose=!0,"f"!==(e=this.draw||"f&s")&&"f&s"!==e||t.fill(this.path),"s"===e||"f&s"===e)return t.stroke(this.path)},node:function(t,e,i){var r,s,n,a;if(this.noClose=this.draw=!0,"string"==typeof(n=this.node))n=e.model[n];else{for(a=e.model,r=0,s=n.length;r<s;r++)a=a[n[r]];n=a}return t.translate(this.x||0,this.y||0),f.call(n,t,e,i)},image:function(t,e){var i;return this.noClose=this.draw=!0,i=e.data.images[this.image],this.width||this.height?t.drawImage(i,this.x||0,this.y||0,this.width,this.height):t.drawImage(i,this.x||0,this.y||0)},sprite:function(t,e){var i;return this.noClose=this.draw=!0,(i=this.sprite).constructor===String&&(this.sprite=i=e.data.sprites[i]),i.draw(t,this.frame,this.x||0,this.y||0,this.index)},text:function(t){var e;if(!0!==this.draw&&(this.drawText=this.draw),e=this.drawText,this.noClose=this.draw=!0,this.font&&(t.font=this.font),this.textAlign&&(t.textAlign=this.textAlign),this.textBaseline&&(t.textBaseline=this.textBaseline),this.direction&&(t.direction=this.direction),"f"!==e&&"f&s"!==e||t.fillText(this.text,this.x||0,this.y||0,this.maxWidth),"s"===e||"f&s"===e)return t.strokeText(this.text,this.x||0,this.y||0,this.maxWidth)}},w={linear:function(t){var e,i,r,s,n;for(i=t.createLinearGradient(this.x0||0,this.y0||0,this.x1||0,this.y1||0),r=0,s=(n=this.colorStops).length;r<s;r++)e=n[r],i.addColorStop(e.pos||0,e.color);return i},radial:function(t){var e,i,r,s,n;for(i=t.createRadialGradient(this.x0||0,this.y0||0,this.r0||0,this.x1||0,this.y1||0,this.r1||0),r=0,s=(n=this.colorStops).length;r<s;r++)e=n[r],i.addColorStop(e.pos||0,e.color);return i},pattern:function(t,e){var i;return i=e.data.images[this.image],t.createPattern(i,this.repetition||"repeat")}},g=function(t,e,i){var r;return null!=(r=w[i.type])?r.call(i,t,e):void 0},v=function(t,e){var i,r;if((r=this.stroke)&&(r.constructor===Object&&(this.stroke=g(t,e,r)),t.strokeStyle=this.stroke),(i=this.fill)&&(i.constructor===Object&&(this.fill=g(t,e,i)),t.fillStyle=this.fill),this.lineWidth&&(t.lineWidth=this.lineWidth),this.lineCap&&(t.lineCap=this.lineCap),this.lineJoin&&(t.lineJoin=this.lineJoin),this.lineDashOffset)return t.lineDashOffset=this.lineDashOffset},f=function(t,e,i){var r,s,n,a,o,l;if(t.save(),e.animation.animate(this),t.transform(this.scaleX||1,this.skewY||0,this.skewX||0,this.scaleY||1,this.origX||0,this.origY||0),this.angle&&t.rotate(this.angle*Math.PI/180),v.call(this,t,e),this.noShadow&&(t.shadowBlur=0,t.shadowOffsetX=0,t.shadowOffsetY=0),this.shadowBlur&&(t.shadowBlur=this.shadowBlur),this.shadowColor&&(t.shadowColor=this.shadowColor),this.shadowOffsetX&&(t.shadowOffsetX=this.shadowOffsetX),this.shadowOffsetY&&(t.shadowOffsetY=this.shadowOffsetY),t.globalAlpha=i*(this.opacity||1),this.before){for(s in e.animation.reciveProps(this),a=this.before)(n=a[s]).hide||f.call(n,t,e,i);e.animation.animate(this)}if(t.beginPath(),null!=(o=m[this.type])&&o.call(this,t,e,i),this.noClose||t.closePath(),"f"!==(r=this.draw||"f&s")&&"f&s"!==r||t.fill(),"s"!==r&&"f&s"!==r||t.stroke(),e.animation.reciveProps(this),this.after)for(s in l=this.after)(n=l[s]).hide||f.call(n,t,e,i);return h.drawOrigin&&(t.fillStyle="#f00",t.shadowBlur=0,t.shadowOffsetX=0,t.shadowOffsetY=0,t.fillRect(-2,-2,4,4)),t.restore()},p={poly:function(t,e,i,r){var s,n,a,o,h,l,f,d,p,m;for(o=e[this.verts[0]],l=i.x,d=i.y,m=c+i.z,p=((o.z||0)+m)*u,h=((o.x||0)+l)*p,f=((o.y||0)+d)*p,t.moveTo(h,f),s=n=1,a=this.verts.length-1;1<=a?n<=a:n>=a;s=1<=a?++n:--n)p=(((o=e[this.verts[s]]).z||0)+m)*u,h=((o.x||0)+l)*p,f=((o.y||0)+d)*p,t.lineTo(h,f);return null},part:function(t,e,i,r,s){var n,a,o,h,l,c,u;for(this.noClose=this.draw=!0,u=e[this.vert],n={x:i.x+(u.x||0),y:i.y+(u.y||0),z:i.z+(u.z||0)},c=[],h=0,l=(o=r.parts[this.part].faces).length;h<l;h++)a=o[h],c.push(d.call(a,t,r,n,s));return c},node:function(t,e,i,r,s){var n,a,o,h,l;if(this.noClose=this.draw=!0,x(e[this.vert],i).apply(t),o=r.model,this.dir&&(o=r.data.dirs[this.dir]),(h=this.node).constructor===String)h=o[h];else{for(l=o,n=0,a=h.length;n<a;n++)l=l[h[n]];h=l}return f.call(h,t,r,s)},elipse:function(t,e,i){var r,s,n,a,o;return a=(n=x(e[this.vert1],i)).x,o=n.y,r=((n=x(e[this.vert2],i)).x-a)/2,s=(n.y-o)/2,t.ellipse(a+r,o+s,r,s,(this.rotation||0)*Math.PI/180,(this.startAngle||0)*Math.PI/180,(this.endAngle||360)*Math.PI/180,!this.clockwise)}},d=function(t,e,i,r){var s,n;return t.save(),this.stroke,v.call(this,t,e),t.globalAlpha=r*(this.opacity||1),t.beginPath(),null!=(n=p[this.type||"poly"])&&n.call(this,t,e.data.verts,i,e,r),this.noClose||t.closePath(),"f"!==(s=this.draw||"f&s")&&"f&s"!==s||t.fill(),"s"!==s&&"f&s"!==s||t.stroke(),t.restore()},c=1/(u=5e-4),k={x:0,y:0,scale:1,apply:function(t){return t.transform(this.scale,0,0,this.scale,this.x,this.y)}},h=function(){class t{static transform(t,e,i,r){return i=(c+i+r.z)*u,k.x=(t+r.x)*i,k.y=(e+r.y)*i,k.scale=i,k}constructor(t){this.data=t}setData(t){return this.data=t,this.setAngle(this.angle)}setAngle(t){var e,i,r,s;return this.angle=t%=360,this.animation.setAngle(t),(i=this.data.dirs)?(r=i.lenght)>1?((t+=(e=360/r)>>1)<0&&(t+=360),this.model=i[Math.floor(t/e)]):this.model=i[0]:this.model=null,(s=this.data.dirsParts)?(r=s.lenght)>1?((t+=(e=360/r)>>1)<0&&(t+=360),this.parts=s[Math.floor(t/e)]):this.parts=s[0]:this.parts=null}draw2D(t,e=1){var i,r,s,n;if(this.model){for(i in n=[],s=this.model)(r=s[i]).hide?n.push(void 0):n.push(f.call(r,t,this,e));return n}}drawParts(t,e,i=1){var r,s,n,a,o;if(this.parts){for(r in o=[],a=this.parts)(n=a[r]).hide?o.push(void 0):o.push(function(){var r,a,o,h;for(h=[],r=0,a=(o=n.faces).length;r<a;r++)s=o[r],h.push(d.call(s,t,this,e,i));return h}.call(this));return o}}}return t.prototype.animation=new e,t.prototype.angle=0,t}.call(void 0),y=h.transform,x=function(t,e){return y(t.x||0,t.y||0,t.z||0,e)},P=function(){class t{on(t,e){var i;if(e&&((i=this.handlers[t])||(this.handlers[t]=i=[]),i.indexOf(e)<0))return i.push(e)}off(t,e){var i,r;if(e&&(i=this.handlers[t])&&(r=i.indexOf(e))>=0)return i.splice(r,1)}trigger(t,e){var i,r,s,n,a;if(r=this.handlers[t]){for(a=[],s=0,n=r.length;s<n;s++)i=r[s],a.push(i.apply(this,e));return a}}removeEvent(t){return delete this.handlers[t]}}return t.prototype.handlers=[],t}.call(void 0),O=function(){var t,e;return e=0,t=0,class extends P{reset(){return e=t=0}getPercent(){return 1-(0!==t?e/t:0)}updatePercent(){return this.trigger("changepercent",[this.getPercent()])}load(i){var r;return r=this,e++,t++,function(){return null!=i&&i.apply(r,arguments),--e<=0&&(r.reset(),r.trigger("load")),r.updatePercent()}}loadJson(t,e){return e=this.load(e),$.getJSON(t+".json").done(e).fail((function(){return e(null)}))}loadImage(t,e){var i;return e=this.load(e),(i=new Image).onload=function(){return e(i)},i.src=t,i}}}.call(void 0),$(document).ready((function(){var t,e,r,s,n,a,o,c,u,f,d,p,m,g,v,w,y,x;return t=$("#canvas"),s=t.get(0),n=s.getContext("2d",{alpha:!1}),$(window).on("resize",x),p="models/test1",c=new O,f=new h,d=new l,e={canvas:s,g:n,x:0,y:0,z:0},(x=function(){return s.width=$(window).width(),s.height=$(window).height()-$("#canvas").offset().top})(),m=function(){return d.load(c,p)},c.on("load",(function(){var t,e,i;if(f.setData(d),f.animation.data){for(t in(e=$(".js-frame-container")).empty(),i=f.animation.data)i[t],e.append(`<a class='dropdown-item js-frame-select' href='#'>${t}</a>`);return $(".js-frame-select").click((function(){return f.animation.setAnim($(this).text(),f.angle)}))}})),console.log(f),u=setInterval(m,500),(y=function(t){var i,r,a;return n.save(),a=s.width,r=s.height,i=a/2,0,n.fillStyle="#fff",n.fillRect(0,0,a,r),n.beginPath(),n.lineWidth=2,n.strokeStyle="#f00",n.moveTo(i,0),n.lineTo(i,r),n.moveTo(0,0),n.lineTo(a,0),n.stroke(),n.translate(i,0),f.animation.play(),f.drawParts(n,e),h.transform(0,0,0,e).apply(n),f.draw2D(n),n.restore(),window.requestAnimationFrame(y)})(0),v=w=0,g=function(t){return e.x+=t.clientX-v,e.y+=t.clientY-w,v=t.clientX,w=t.clientY},t.on("mousedown",(function(e){return v=e.clientX,w=e.clientY,t.on("mousemove",g)})),t.on("touchstart",(function(t){return v=t.touches[0].clientX,w=t.touches[0].clientY})),t.on("touchmove",(function(t){return g(t.touches[0])})),t.on("mouseup",(function(){return t.off("mousemove",g)})),$(".js-z-number").val(e.z).on("input change",(function(){return e.z=+$(this).val()})),$(".js-angle-number").val(f.angle).on("input change",(function(){return f.setAngle+$(this).val()})),$(".js-model-select").click((function(){return d=new l,p=$(this).data("file")})),$(".js-anim-select").click((function(){var t;return t=$(this).data("file"),f.animation.data=new i,f.animation.data.load(c,t),$(".js-anim-refresh").data("file",t),$(".js-refresh-model").prop("checked",!1),clearInterval(u)})),h.drawOrigin=!0,$(".js-draw-origin").change((function(){return h.drawOrigin=$(this).prop("checked")})),$(".js-refresh-model").change((function(){return $(this).prop("checked")?u=setInterval(m,500):clearInterval(u)})),$(".js-reset-pos").click((function(){return e.x=e.y=e.z=0,$(".js-z-number").val("0")})),a=!1,$(".js-full-screen").click((function(){return a?r():o(document.documentElement),a=!a})),o=function(t){return t.requestFullScreen?t.requestFullScreen():t.mozRequestFullScreen?t.mozRequestFullScreen():t.webkitRequestFullScreen?t.webkitRequestFullScreen():void 0},r=function(){return document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen?document.webkitCancelFullScreen():void 0}}))}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
