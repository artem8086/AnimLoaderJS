"use strict";!function(){var t,i,s,e,r,n,a,h,o,l,c,u,d,f,p,m,g,v,w,y,x;t=function(){class t{static load(i,s){var e;return(e=t.cache[s])||((e=new t).load(i,s),t.cache[s]=e),e}load(t,i){return t.loadJson(i,t=>{this.data=t}),t.loadImage(i+".png",t=>{this.texture=t})}draw(t,i,s,e,r=0){var n;if(n=this.data)switch(i.constructor){case Object:t.drawImage(this.texture,i.x,i.y,i.w,i.h,s+i.cx,e+i.cy,i.w,i.h);break;case Array:this.draw(t,i[Math.floor(r)%i.lenght],s,e);break;case String:this.draw(t,n[i],s,e,r)}return this}}return t.cache=[],t}.call(void 0),s=function(){class t{static load(i,s){var e;return(e=t.cache[s])||((e=new t).load(i,s),t.cache[s]=e),e}load(t,i){return t.loadJson(i,t=>{var i,s,e;if(t){for(i in s=[],t)e=t[i],s.push(this[i]=e);return s}})}}return t.cache=[],t}.call(void 0),e=function(){return(new Date).getTime()/1e3},r={linear:function(t){return t},quad:function(t){return t*t},circle:function(t){return 1-Math.sin(Math.acos(t))}},i=function(){class t{setAnim(t,i,s=this.data){if(this.anim=null!=s?s[t]:void 0,this.startTime=e(),this.deltaTime=0,this.anim)return this.duration=this.anim?this.anim.duration:0,this.setAngle(i)}setAngle(t){var i,s,e;if(this.frame=null,this.anim&&(t%=360,s=this.anim.dirs))return(e=s.lenght)>1?((t+=(i=360/e)>>1)<0&&(t+=360),this.frame=s[Math.floor(t/i)]):this.frame=s[0]}play(t){var i,s;if(t=t||e(),this.deltaTime=i=(t-this.startTime)*this.scale,!(s=this.duration))return!1;if(i>s){if(!this.loop)return!1;this.deltaTime%=s}return!0}animate(t){var i,s,e,n,a,h,o,l,c,u,d,f;if((s=this.frame)&&(d=s[t.nodePath])){for(i=this.deltaTime,l=[],e=0,n=d.length;e<n;e++)h=d[e],i>=h.start&&i<h.end?(c=h.func?r[h.func]:r.linear,l.push(function(){var s,e;for(a in e=[],s=h.from)o=s[a],this.props[a]=t[a],this.propsUsed[a]=!0,null!==(f=h.to[a])?(u=c((i-h.start)/(h.end-h.start)),e.push(t[a]=(f-o)*u+o)):e.push(t[a]=o);return e}.call(this))):l.push(void 0);return l}}reciveProps(t){var i,s,e;for(i in e=[],s=this.propsUsed)s[i]?(t[i]=this.props[i],e.push(this.propsUsed[i]=!1)):e.push(void 0);return e}}return t.prototype.loop=!0,t.prototype.startTime=0,t.prototype.duration=0,t.prototype.deltaTime=0,t.prototype.scale=1,t.prototype.props=[],t.prototype.propsUsed=[],t}.call(void 0),a=function(){class i{static load(t,s){var e;return(e=i.cache[s])||((e=new i).load(t,s),i.cache[s]=e),e}load(s,e){return s.loadJson(e,e=>{var r,n,a,h,o,l,c,u,d,f,p,m,g,v;if(e){for(h in e)v=e[h],this[h]=v;if(this.images)for(h in n=this.images,this.images=[],n)r=n[h],this.images[h]=s.loadImage(r);if(this.sprites)for(h in g=this.sprites,this.sprites=[],g)m=g[h],this.sprites[h]=t.load(s,m);if(this.models)for(h in c=this.models,this.models=[],c)l=c[h],this.models[h]=i.load(s,l);if(d=function(t,i=""){var s,e,r;for(s in r=[],t)(e=t[s]).nodePath=i+s,e.before&&d(e.before,e.nodePath+"\\"),e.after?r.push(d(e.after,e.nodePath+"/")):r.push(void 0);return r},this.dirs){for(p=[],a=0,o=(f=this.dirs).length;a<o;a++)u=f[a],p.push(d(u));return p}}})}}return i.cache=[],i}.call(void 0),d={line:function(t){return t.moveTo(this.x1||0,this.y1||0),t.lineTo(this.x2||0,this.y2||0)},rect:function(t){return t.rect(this.x||0,this.y||0,this.width||1,this.height||1)},rectRound:function(t){var i,s,e,r,n;return this.noClose=!1,r=this.x||0,n=this.y||0,e=this.width,i=this.height,e<2*(s=this.radius)&&(s=e/2),i<2*s&&(s=i/2),t.moveTo(r+s,n),t.arcTo(r+e,n,r+e,n+i,s),t.arcTo(r+e,n+i,r,n+i,s),t.arcTo(r,n+i,r,n,s),t.arcTo(r,n,r+e,n,s)},arc:function(t){return t.arc(this.x||0,this.y||0,this.radius,(this.startAngle||0)*Math.PI/180,(this.endAngle||360)*Math.PI/180,!this.clockwise)},elipse:function(t){return t.ellipse(this.x||0,this.y||0,this.rx,this.ry,(this.rotation||0)*Math.PI/180,(this.startAngle||0)*Math.PI/180,(this.endAngle||360)*Math.PI/180,!this.clockwise)},path:function(t){var i;if(this.x||0,this.y||0,"string"==typeof this.path&&(this.path=new Path(this.path)),this.noClose=!0,"f"!==(i=this.draw||"f&s")&&"f&s"!==i||t.fill(this.path),"s"===i||"f&s"===i)return t.stroke(this.path)},node:function(t,i,s){var e,r,n,a;if(this.noClose=this.draw=!0,"string"==typeof(n=this.node))n=i.model[n];else{for(a=i.model,e=0,r=n.length;e<r;e++)a=a[n[e]];n=a}return t.translate(this.x||0,this.y||0),l.call(n,t,i,s)},image:function(t,i){var s;return this.noClose=this.draw=!0,s=i.data.images[this.image],this.width||this.height?t.drawImage(s,this.x||0,this.y||0,this.width,this.height):t.drawImage(s,this.x||0,this.y||0)},sprite:function(t,i){var s;return this.noClose=this.draw=!0,(s=this.sprite).constructor===String&&(this.sprite=s=i.data.sprites[s]),s.draw(t,this.frame,this.x||0,this.y||0,this.index)},text:function(t){var i;if(!0!==this.draw&&(this.drawText=this.draw),i=this.drawText,this.noClose=this.draw=!0,this.font&&(t.font=this.font),this.textAlign&&(t.textAlign=this.textAlign),this.textBaseline&&(t.textBaseline=this.textBaseline),this.direction&&(t.direction=this.direction),"f"!==i&&"f&s"!==i||t.fillText(this.text,this.x||0,this.y||0,this.maxWidth),"s"===i||"f&s"===i)return t.strokeText(this.text,this.x||0,this.y||0,this.maxWidth)}},m={linear:function(t){var i,s,e,r,n;for(s=t.createLinearGradient(this.x0||0,this.y0||0,this.x1||0,this.y1||0),e=0,r=(n=this.colorStops).length;e<r;e++)i=n[e],s.addColorStop(i.pos||0,i.color);return s},radial:function(t){var i,s,e,r,n;for(s=t.createRadialGradient(this.x0||0,this.y0||0,this.r0||0,this.x1||0,this.y1||0,this.r1||0),e=0,r=(n=this.colorStops).length;e<r;e++)i=n[e],s.addColorStop(i.pos||0,i.color);return s},pattern:function(t,i){var s;return s=i.data.images[this.image],t.createPattern(s,this.repetition||"repeat")}},f=function(t,i,s){var e;return null!=(e=m[s.type])?e.call(s,t,i):void 0},p=function(t,i){var s,e;if((e=this.stroke)&&(e.constructor===Object&&(this.stroke=f(t,i,e)),t.strokeStyle=this.stroke),(s=this.fill)&&(s.constructor===Object&&(this.fill=f(t,i,s)),t.fillStyle=this.fill),this.lineWidth&&(t.lineWidth=this.lineWidth),this.lineCap&&(t.lineCap=this.lineCap),this.lineJoin&&(t.lineJoin=this.lineJoin),this.lineDashOffset)return t.lineDashOffset=this.lineDashOffset},l=function(t,i,s){var e,r,a,h,o,c;if(t.save(),i.animation.animate(this),t.transform(this.scaleX||1,this.skewY||0,this.skewX||0,this.scaleY||1,this.origX||0,this.origY||0),this.angle&&t.rotate(this.angle*Math.PI/180),p.call(this,t,i),this.noShadow&&(t.shadowBlur=0,t.shadowOffsetX=0,t.shadowOffsetY=0),this.shadowBlur&&(t.shadowBlur=this.shadowBlur),this.shadowColor&&(t.shadowColor=this.shadowColor),this.shadowOffsetX&&(t.shadowOffsetX=this.shadowOffsetX),this.shadowOffsetY&&(t.shadowOffsetY=this.shadowOffsetY),t.globalAlpha=s*(this.opacity||1),this.before){for(r in i.animation.reciveProps(this),h=this.before)(a=h[r]).hide||l.call(a,t,i,s);i.animation.animate(this)}if(t.beginPath(),null!=(o=d[this.type])&&o.call(this,t,i,s),this.noClose||t.closePath(),"f"!==(e=this.draw||"f&s")&&"f&s"!==e||t.fill(),"s"!==e&&"f&s"!==e||t.stroke(),i.animation.reciveProps(this),this.after)for(r in c=this.after)(a=c[r]).hide||l.call(a,t,i,s);return n.drawOrigin&&(t.fillStyle="#f00",t.shadowBlur=0,t.shadowOffsetX=0,t.shadowOffsetY=0,t.fillRect(-2,-2,4,4)),t.restore()},u={poly:function(t,i,s,e){var r,n,a,l,c,u,d,f,p,m;for(l=i[this.verts[0]],u=s.x,f=s.y,m=h+s.z,p=((l.z||0)+m)*o,c=((l.x||0)+u)*p,d=((l.y||0)+f)*p,t.moveTo(c,d),r=n=1,a=this.verts.length-1;1<=a?n<=a:n>=a;r=1<=a?++n:--n)p=(((l=i[this.verts[r]]).z||0)+m)*o,c=((l.x||0)+u)*p,d=((l.y||0)+f)*p,t.lineTo(c,d);return null},part:function(t,i,s,e,r){var n,a,h,o,l,u,d;for(this.noClose=this.draw=!0,d=i[this.vert],n={x:s.x+(d.x||0),y:s.y+(d.y||0),z:s.z+(d.z||0)},u=[],o=0,l=(h=e.parts[this.part].faces).length;o<l;o++)a=h[o],u.push(c.call(a,t,e,n,r));return u},node:function(t,i,s,e,r){var n,a,h,o,c;if(this.noClose=this.draw=!0,v(i[this.vert],s).apply(t),h=e.model,this.dir&&(h=e.data.dirs[this.dir]),(o=this.node).constructor===String)o=h[o];else{for(c=h,n=0,a=o.length;n<a;n++)c=c[o[n]];o=c}return l.call(o,t,e,r)},elipse:function(t,i,s){var e,r,n,a,h;return a=(n=v(i[this.vert1],s)).x,h=n.y,e=((n=v(i[this.vert2],s)).x-a)/2,r=(n.y-h)/2,t.ellipse(a+e,h+r,e,r,(this.rotation||0)*Math.PI/180,(this.startAngle||0)*Math.PI/180,(this.endAngle||360)*Math.PI/180,!this.clockwise)}},c=function(t,i,s,e){var r,n;return t.save(),this.stroke,p.call(this,t,i),t.globalAlpha=e*(this.opacity||1),t.beginPath(),null!=(n=u[this.type||"poly"])&&n.call(this,t,i.data.verts,s,i,e),this.noClose||t.closePath(),"f"!==(r=this.draw||"f&s")&&"f&s"!==r||t.fill(),"s"!==r&&"f&s"!==r||t.stroke(),t.restore()},h=1/(o=5e-4),w={x:0,y:0,scale:1,apply:function(t){return t.transform(this.scale,0,0,this.scale,this.x,this.y)}},n=function(){class t{static transform(t,i,s,e){return s=(h+s+e.z)*o,w.x=(t+e.x)*s,w.y=(i+e.y)*s,w.scale=s,w}constructor(t){this.data=t}setData(t){return this.data=t,this.setAngle(this.angle)}setAngle(t){var i,s,e,r;return this.angle=t%=360,this.animation.setAngle(t),(s=this.data.dirs)?(e=s.lenght)>1?((t+=(i=360/e)>>1)<0&&(t+=360),this.model=s[Math.floor(t/i)]):this.model=s[0]:this.model=null,(r=this.data.dirsParts)?(e=r.lenght)>1?((t+=(i=360/e)>>1)<0&&(t+=360),this.parts=r[Math.floor(t/i)]):this.parts=r[0]:this.parts=null}draw2D(t,i=1){var s,e,r,n;if(this.model){for(s in n=[],r=this.model)(e=r[s]).hide?n.push(void 0):n.push(l.call(e,t,this,i));return n}}drawParts(t,i,s=1){var e,r,n,a,h;if(this.parts){for(e in h=[],a=this.parts)(n=a[e]).hide?h.push(void 0):h.push(function(){var e,a,h,o;for(o=[],e=0,a=(h=n.faces).length;e<a;e++)r=h[e],o.push(c.call(r,t,this,i,s));return o}.call(this));return h}}}return t.prototype.animation=new i,t.prototype.angle=0,t}.call(void 0),g=n.transform,v=function(t,i){return g(t.x||0,t.y||0,t.z||0,i)},y=function(){class t{on(t,i){var s;if(i&&((s=this.handlers[t])||(this.handlers[t]=s=[]),s.indexOf(i)<0))return s.push(i)}off(t,i){var s,e;if(i&&(s=this.handlers[t])&&(e=s.indexOf(i))>=0)return s.splice(e,1)}trigger(t,i){var s,e,r,n,a;if(e=this.handlers[t]){for(a=[],r=0,n=e.length;r<n;r++)s=e[r],a.push(s.apply(this,i));return a}}removeEvent(t){return delete this.handlers[t]}}return t.prototype.handlers=[],t}.call(void 0),x=function(){var t,i;return i=0,t=0,class extends y{reset(){return i=t=0}getPercent(){return 1-(0!==t?i/t:0)}updatePercent(){return this.trigger("changepercent",[this.getPercent()])}load(s){var e;return e=this,i++,t++,function(){return null!=s&&s.apply(e,arguments),--i<=0&&(e.reset(),e.trigger("load")),e.updatePercent()}}loadJson(t,i){return i=this.load(i),$.getJSON(t+".json").done(i).fail((function(){return i(null)}))}loadImage(t,i){var s;return i=this.load(i),(s=new Image).onload=function(){return i(s)},s.src=t,s}}}.call(void 0),$(document).ready((function(){var t,i,e,r,h,o,l,c,u,d,f,p,m,g,v;return t=$("#canvas"),e=t.get(0),r=e.getContext("2d",{alpha:!1}),$(window).on("resize",v),u="anims/test1",h=new x,l=new n,c=new a,i={canvas:e,g:r,x:0,y:0,z:0},(v=function(){return e.width=$(window).width(),e.height=$(window).height()-$("#canvas").offset().top})(),d=function(){return c.load(h,u)},h.on("load",(function(){if(l.setData(c),l.animation.data)return l.animation.setAnim("test",0)})),console.log(l),o=setInterval(d,500),(g=function(t){var s,a,h;return r.save(),h=e.width,a=e.height,s=h/2,0,r.fillStyle="#fff",r.fillRect(0,0,h,a),r.beginPath(),r.lineWidth=2,r.strokeStyle="#f00",r.moveTo(s,0),r.lineTo(s,a),r.moveTo(0,0),r.lineTo(h,0),r.stroke(),r.translate(s,0),l.animation.play(),l.drawParts(r,i),n.transform(0,0,0,i).apply(r),l.draw2D(r),r.restore(),window.requestAnimationFrame(g)})(0),p=m=0,f=function(t){return i.x+=t.clientX-p,i.y+=t.clientY-m,p=t.clientX,m=t.clientY},t.on("mousedown",(function(i){return p=i.clientX,m=i.clientY,t.on("mousemove",f)})),t.on("touchstart",(function(t){return p=t.touches[0].clientX,m=t.touches[0].clientY})),t.on("touchmove",(function(t){return f(t.touches[0])})),t.on("mouseup",(function(){return t.off("mousemove",f)})),$(".js-z-number").val(i.z).on("input change",(function(){return i.z=+$(this).val()})),$(".js-model-select").click((function(){return c=new a,u=$(this).data("file")})),$(".js-anim-select").click((function(){return l.animation.data=new s,l.animation.data.load(h,$(this).data("file"))})),n.drawOrigin=!0,$(".js-draw-origin").change((function(){return n.drawOrigin=$(this).prop("checked")})),$(".js-refresh-model").change((function(){return $(this).prop("checked")?o=setInterval(d,500):clearInterval(o)})),$(".js-reset-pos").click((function(){return i.x=i.y=i.z=0,$(".js-z-number").val("0")}))}))}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
