"use strict";!function(){var t,i,s,e,r,n,h,o,a,l,c,u,d,f,p,v;i=function(){class t{static load(i,s){var e;return null===(e=t.modelsCache[s])&&((e=new t).load(i,s),t.modelsCache[s]=e),e}load(i,s){return i.loadJson(s,s=>{var e,r,n,h,o,a,l;if(s){for(r in s)l=s[r],this[r]=l;if(this.images)for(r in h=this.images)e=h[r],this.images[r]=i.loadImage(e);if(this.models){for(r in a=[],o=this.models)n=o[r],a.push(this.models[r]=t.load(i,n));return a}}})}}return t.modelsCache=[],t}.call(void 0),o={line:function(t){return t.moveTo(this.x1||0,this.y1||0),t.lineTo(this.x2||0,this.y2||0)},rect:function(t){return t.rect(this.x||0,this.y||0,this.width||1,this.height||1)},rectRound:function(t){var i,s,e,r,n;return this.noClose=!1,r=this.x||0,n=this.y||0,e=this.width,i=this.height,e<2*(s=this.radius)&&(s=e/2),i<2*s&&(s=i/2),t.moveTo(r+s,n),t.arcTo(r+e,n,r+e,n+i,s),t.arcTo(r+e,n+i,r,n+i,s),t.arcTo(r,n+i,r,n,s),t.arcTo(r,n,r+e,n,s)},arc:function(t){return t.arc(this.x||0,this.y||0,this.radius,(this.startAngle||0)*Math.PI/180,(this.endAngle||360)*Math.PI/180,!this.clockwise)},elipse:function(t){return t.ellipse(this.x||0,this.y||0,this.rx,this.ry,(this.rotation||0)*Math.PI/180,(this.startAngle||0)*Math.PI/180,(this.endAngle||360)*Math.PI/180,!this.clockwise)},path:function(t){var i;if(this.x||0,this.y||0,"string"==typeof this.path&&(this.path=new Path(this.path)),this.noClose=!0,"f"!==(i=this.draw||"f&s")&&"f&s"!==i||t.fill(this.path),"s"===i||"f&s"===i)return t.stroke(this.path)},node:function(t,i,s){var e,n,h,o;if(this.noClose=this.draw=!0,"string"==typeof(h=this.node))h=i.model[h];else{for(o=i.model,e=0,n=h.length;e<n;e++)o=o[h[e]];h=o}return t.translate(this.x||0,this.y||0),r.call(h,t,i,s)},image:function(t,i){var s;return this.noClose=this.draw=!0,s=i.data.images[this.image],this.width||this.height?t.drawImage(s,this.x||0,this.y||0,this.width,this.height):t.drawImage(s,this.x||0,this.y||0)}},c={linear:function(t){var i,s,e,r,n;for(s=t.createLinearGradient(this.x0||0,this.y0||0,this.x1||0,this.y1||0),e=0,r=(n=this.colorStops).length;e<r;e++)i=n[e],s.addColorStop(i.pos||0,i.color);return s},radial:function(t){var i,s,e,r,n;for(s=t.createRadialGradient(this.x0||0,this.y0||0,this.r0||0,this.x1||0,this.y1||0,this.r1||0),e=0,r=(n=this.colorStops).length;e<r;e++)i=n[e],s.addColorStop(i.pos||0,i.color);return s},pattern:function(t,i){var s;return s=i.data.images[this.image],t.createPattern(s,this.repetition||"repeat")}},a=function(t,i,s){var e;return null!=(e=c[s.type])?e.call(s,t,i):void 0},l=function(t,i){var s,e;if((e=this.stroke)&&(e.constructor===Object&&(this.stroke=a(t,i,e)),t.strokeStyle=this.stroke),(s=this.fill)&&(s.constructor===Object&&(this.fill=a(t,i,s)),t.fillStyle=this.fill),this.lineWidth&&(t.lineWidth=this.lineWidth),this.lineCap&&(t.lineCap=this.lineCap),this.lineJoin&&(t.lineJoin=this.lineJoin),this.lineDashOffset)return t.lineDashOffset=this.lineDashOffset},r=function(t,i,s){var e,n,h,a,c,u;if(t.save(),t.transform(this.scaleX||1,this.skewY||0,this.skewX||0,this.scaleY||1,this.origX||0,this.origY||0),this.angle&&t.rotate(this.angle*Math.PI/180),l.call(this,t,i),this.shadowBlur&&(t.shadowBlur=this.shadowBlur),this.shadowColor&&(t.shadowColor=this.shadowColor),this.shadowOffsetX&&(t.shadowOffsetX=this.shadowOffsetX),this.shadowOffsetY&&(t.shadowOffsetY=this.shadowOffsetY),t.globalAlpha=s*(this.opacity||1),this.before)for(n in a=this.before)(h=a[n]).hide||r.call(h,t,i,s);if(t.beginPath(),null!=(c=o[this.type])&&c.call(this,t,i,s),this.noClose||t.closePath(),"f"!==(e=this.draw||"f&s")&&"f&s"!==e||t.fill(),"s"!==e&&"f&s"!==e||t.stroke(),this.after)for(n in u=this.after)(h=u[n]).hide||r.call(h,t,i,s);return t.restore()},h={poly:function(t,i,r,n){var h,o,a,l,c,u,d,f,p,v;for(l=i[this.verts[0]],u=r.x,f=r.y,v=s+r.z,p=((l.z||0)+v)*e,c=((l.x||0)+u)*p,d=((l.y||0)+f)*p,t.moveTo(c,d),h=o=1,a=this.verts.length-1;1<=a?o<=a:o>=a;h=1<=a?++o:--o)p=(((l=i[this.verts[h]]).z||0)+v)*e,c=((l.x||0)+u)*p,d=((l.y||0)+f)*p,t.lineTo(c,d);return null},part:function(t,i,s,e,r){var h,o,a,l,c,u,d;for(this.noClose=this.draw=!0,d=i[this.vert],h={x:s.x+(d.x||0),y:s.y+(d.y||0),z:s.z+(d.z||0)},u=[],l=0,c=(a=e.parts[this.part].faces).length;l<c;l++)o=a[l],u.push(n.call(o,t,e,h,r));return u},node:function(t,i,s,e,n){var h,o,a,l,c,u;if(this.noClose=this.draw=!0,u=i[this.vert],d(u,s).apply(t),a=e.model,this.dir&&(a=e.data.dirs[this.dir]),"string"==typeof(l=this.node))l=a[l];else{for(c=a,h=0,o=l.length;h<o;h++)c=c[l[h]];l=c}return r.call(l,t,e,n)}},n=function(t,i,s,e){var r,n;return t.save(),this.stroke,l.call(this,t,i),t.globalAlpha=e*(this.opacity||1),t.beginPath(),null!=(n=h[this.type||"poly"])&&n.call(this,t,i.data.verts,s,i,e),this.noClose||t.closePath(),"f"!==(r=this.draw||"f&s")&&"f&s"!==r||t.fill(),"s"!==r&&"f&s"!==r||t.stroke(),t.restore()},s=1/(e=5e-4),f={x:0,y:0,scale:1,apply:function(t){return t.transform(this.scale,0,0,this.scale,this.x,this.y)}},t=function(){class t{static transform(t,i,r,n){return r=(s+r+n.z)*e,f.x=(t+n.x)*r,f.y=(i+n.y)*r,f.scale=r,f}constructor(t){this.data=t}setData(t){return this.data=t,this.setDirection(this.direction),this.setDirectionParts(this.directionParts)}setDirection(t){var i;return this.direction=t,(i=this.data.dirs)?(i.lenght<=this.direction&&(this.direction=0),this.model=i[this.direction]):this.model=null}setDirectionParts(t){var i;return this.directionParts=t,(i=this.data.dirsParts)?(i.lenght<=this.directionParts&&(this.directionParts=0),this.parts=i[this.directionParts]):this.parts=null}draw2D(t,i=1){var s,e,n,h;if(this.model){for(s in h=[],n=this.model)(e=n[s]).hide?h.push(void 0):h.push(r.call(e,t,this,i));return h}}drawParts(t,i,s=1){var e,r,h,o,a;if(this.parts){for(e in a=[],o=this.parts)(h=o[e]).hide?a.push(void 0):a.push(function(){var e,o,a,l;for(l=[],e=0,o=(a=h.faces).length;e<o;e++)r=a[e],l.push(n.call(r,t,this,i,s));return l}.call(this));return a}}}return t.prototype.direction=0,t.prototype.directionParts=0,t}.call(void 0),u=t.transform,d=function(t,i){return u(t.x||0,t.y||0,t.z||0,i)},p=function(){class t{on(t,i){var s;if(i&&((s=this.handlers[t])||(this.handlers[t]=s=[]),s.indexOf(i)<0))return s.push(i)}off(t,i){var s,e;if(i&&(s=this.handlers[t])&&(e=s.indexOf(i))>=0)return s.splice(e,1)}trigger(t,i){var s,e,r,n,h;if(e=this.handlers[t]){for(h=[],r=0,n=e.length;r<n;r++)s=e[r],h.push(s.apply(this,i));return h}}removeEvent(t){return delete this.handlers[t]}}return t.prototype.handlers=[],t}.call(void 0),v=function(){var t,i;return i=0,t=0,class extends p{reset(){return i=t=0}getPercent(){return 1-(0!==t?i/t:0)}updatePercent(){return this.trigger("changepercent",[this.getPercent()])}load(s){var e;return e=this,i++,t++,function(){return null!=s&&s.apply(e,arguments),--i<=0&&(e.reset(),e.trigger("load")),e.updatePercent()}}loadJson(t,i){return i=this.load(i),$.getJSON(t+".json").done(i).fail((function(){return i(null)}))}loadImage(t,i){var s;return i=this.load(i),(s=new Image).onload((function(){return i(s)})),s.src=t,s}}}.call(void 0),$(document).ready((function(){var s,e,r,n,h,o,a,l,c,u,d,f,p,g;return s=$("#canvas"),r=s.get(0),n=r.getContext("2d",{alpha:!1}),$(window).on("resize",g),l="anims/test1",h=new v,o=new t,a=new i,e={canvas:r,g:n,x:0,y:0,z:0},(g=function(){return r.width=$(window).width(),r.height=$(window).height()-$("#canvas").offset().top})(),c=function(){return a.load(h,l)},h.on("load",(function(){return o.setData(a)})),console.log(o),setInterval(c,500),(p=function(i){var s,h,a;return n.save(),a=r.width,h=r.height,s=a/2,0,n.fillStyle="#fff",n.fillRect(0,0,a,h),n.beginPath(),n.lineWidth=2,n.strokeStyle="#f00",n.moveTo(s,0),n.lineTo(s,h),n.moveTo(0,0),n.lineTo(a,0),n.stroke(),n.translate(s,0),o.drawParts(n,e),t.transform(0,0,0,e).apply(n),o.draw2D(n),n.restore(),window.requestAnimationFrame(p)})(0),d=f=0,u=function(t){return e.x+=t.clientX-d,e.y+=t.clientY-f,d=t.clientX,f=t.clientY},s.on("mousedown",(function(t){return d=t.clientX,f=t.clientY,s.on("mousemove",u)})),s.on("touchstart",(function(t){return d=t.touches[0].clientX,f=t.touches[0].clientY})),s.on("touchmove",(function(t){return u(t.touches[0])})),s.on("mouseup",(function(){return s.off("mousemove",u)})),$(".js-z-number").val(e.z).on("input change",(function(){return e.z=+$(this).val()})),$(".js-anim-select").click((function(){return a=new i,l=$(this).data("file")}))}))}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
