"use strict";!function(){var t,e,i,r,s,n,a,o,h,l,u,c,f,d,p,m,g,v,w,y,x,k,P,S;t=function(){class t{static load(e,i){var r;return(r=t.cache[i])||((r=new t).load(e,i),t.cache[i]=r),r}load(t,e){return t.loadJson(e,t=>{this.data=t}),t.loadImage(e+".png",t=>{this.texture=t})}draw(t,e,i,r,s=0){var n;if(n=this.data)switch(e.constructor){case Object:t.drawImage(this.texture,e.x,e.y,e.w,e.h,i+e.cx,r+e.cy,e.w,e.h);break;case Array:this.draw(t,e[Math.floor(s)%e.lenght],i,r);break;case String:this.draw(t,n[e],i,r,s)}return this}}return t.cache=[],t}.call(void 0),i=function(){class t{static load(e,i){var r;return(r=t.cache[i])||((r=new t).load(e,i),t.cache[i]=r),r}load(t,e){return t.loadJson(e,t=>{var e,i,r;if(t){for(e in i=[],t)r=t[e],i.push(this[e]=r);return i}})}}return t.cache=[],t}.call(void 0),r=function(){return(new Date).getTime()/1e3},n=function(t){return function(e){return 1-t(1-e)}},s=function(t){return function(e){return e<.5?t(2*e)/2:(2-t(2*(1-e)))/2}},a=function(t,e){return o[t]=e,o[t+"EaseOut"]=n(e),o[t+"EaseInOut"]=s(e)},o={linear:function(t){return t},easeOut:function(t){return 1-t},easeInOut:function(t){return t<.5?2*t:2-2*t}},a("quad",(function(t){return t*t})),a("circle",(function(t){return 1-Math.sin(Math.acos(t))})),a("bounce",(function(t){var e,i;for(e=0,i=1;;){if(t>=(7-4*e)/11)return-Math.pow((11-6*e-11*t)/4,2)+Math.pow(i,2);e+=i,i/=2}})),e=function(){class t{reset(){return this.startTime=r(),this.deltaTime=0,this}setAnim(t,e=0,i=this.data){return this.anim=null!=i?i[t]:void 0,this.reset(),this.anim&&(this.duration=this.anim?this.anim.duration:0,this.setAngle(e)),this}setAngle(t){var e,i,r;return this.frame=null,this.anim&&(t%=360,(i=this.anim.dirs)&&((r=i.lenght)>1?((t+=(e=360/r)>>1)<0&&(t+=360),this.frame=i[Math.floor(t/e)]):this.frame=i[0])),this}play(t){var e,i;if(t=t||r(),this.deltaTime=e=(t-this.startTime)*this.scale,!(i=this.duration))return!1;if(e>i){if(!this.loop)return!1;this.deltaTime%=i}return!0}animate(e,i=e.nodePath){var r,s,n,a,h,l,u,c,f,d,p,m,g,v,w;if((s=this.frame)&&(v=s[i]))for(r=this.deltaTime,c=t.props,f=t.propsUsed,n=0,a=v.length;n<a;n++)if(r>=(l=v[n]).end)for(h in d=l.to)w=d[h],f[h]||(c[h]=e[h],f[h]=!0),e[h]=w;else if(r>=l.start)for(h in m=l.func?o[l.func]:o.linear,p=l.to)w=p[h],u=e[h],f[h]||(c[h]=u,f[h]=!0),u||(u=0),w.constructor===Number?(g=m((r-l.start)/(l.end-l.start)),e[h]=(w-u)*g+u):e[h]=w;return this}reciveProps(e){var i,r,s;for(i in r=t.props,s=t.propsUsed)s[i]&&(e[i]=r[i],s[i]=!1);return this}createWorkFrame(){return this.loop=!1,this.frame={work:[{start:0,end:0,to:{}}]},this}resetWork(){var e,i;for(e in i=t.propsUsed)i[e]&&(i[e]=!1);return this}clearWork(){var t,e,i;return(t=this.frame.work[0]).start=t.end=0,i=function(){var t;for(e in t=[],i)i[e],t.push(delete i[e]);return t}(),this}animateProps(t,e,i){var r,s,n,a;for(s in this.duration=e,(r=this.frame.work[0]).end=e,r.func=i,a=r.to,t)n=t[s],a[s]=n;return this.reset(),this}}return t.getTime=r,t.prototype.loop=!0,t.prototype.startTime=0,t.prototype.duration=0,t.prototype.deltaTime=0,t.prototype.scale=1,t.props=[],t.propsUsed=[],t}.call(void 0),l=function(){class e{static load(t,i){var r;return(r=e.cache[i])||((r=new e).load(t,i),e.cache[i]=r),r}load(i,r){return i.loadJson(r,r=>{var s,n,a,o,h,l,u,c,f,d,p,m,g,v;if(r){for(o in r)v=r[o],this[o]=v;if(this.images)for(o in n=this.images,this.images=[],n)s=n[o],this.images[o]=i.loadImage(s);if(this.sprites)for(o in g=this.sprites,this.sprites=[],g)m=g[o],this.sprites[o]=t.load(i,m);if(this.models)for(o in u=this.models,this.models=[],u)l=u[o],this.models[o]=e.load(i,l);if(f=function(t,e=""){var i,r,s;for(i in s=[],t)(r=t[i]).nodePath=e+i,r.before&&f(r.before,r.nodePath+"<"),r.after?s.push(f(r.after,r.nodePath+">")):s.push(void 0);return s},this.dirs){for(p=[],a=0,h=(d=this.dirs).length;a<h;a++)c=d[a],p.push(f(c));return p}}})}}return e.cache=[],e}.call(void 0),m={line:function(t){return t.moveTo(this.x1||0,this.y1||0),t.lineTo(this.x2||0,this.y2||0)},rect:function(t){return t.rect(this.x||0,this.y||0,this.width||1,this.height||1)},rectRound:function(t){var e,i,r,s,n;return this.noClose=!1,s=this.x||0,n=this.y||0,r=this.width,e=this.height,r<2*(i=this.radius)&&(i=r/2),e<2*i&&(i=e/2),t.moveTo(s+i,n),t.arcTo(s+r,n,s+r,n+e,i),t.arcTo(s+r,n+e,s,n+e,i),t.arcTo(s,n+e,s,n,i),t.arcTo(s,n,s+r,n,i)},arc:function(t){return t.arc(this.x||0,this.y||0,this.radius,(this.startAngle||0)*Math.PI/180,(this.endAngle||360)*Math.PI/180,!this.clockwise)},elipse:function(t){return t.ellipse(this.x||0,this.y||0,this.rx,this.ry,(this.rotation||0)*Math.PI/180,(this.startAngle||0)*Math.PI/180,(this.endAngle||360)*Math.PI/180,!this.clockwise)},path:function(t){var e;if(this.x||0,this.y||0,"string"==typeof this.path&&(this.path=new Path2D(this.path)),this.noClose=!0,"f"!==(e=this.draw||"f&s")&&"f&s"!==e||t.fill(this.path),"s"===e||"f&s"===e)return t.stroke(this.path)},node:function(t,e,i){var r,s,n,a;if(this.noClose=this.draw=!0,"string"==typeof(n=this.node))n=e.model[n];else{for(a=e.model,r=0,s=n.length;r<s;r++)a=a[n[r]];n=a}return t.translate(this.x||0,this.y||0),f.call(n,t,e,i)},image:function(t,e){var i;return this.noClose=this.draw=!0,i=e.data.images[this.image],this.width||this.height?t.drawImage(i,this.x||0,this.y||0,this.width,this.height):t.drawImage(i,this.x||0,this.y||0)},sprite:function(t,e){var i;return this.noClose=this.draw=!0,(i=this.sprite).constructor===String&&(this.sprite=i=e.data.sprites[i]),i.draw(t,this.frame,this.x||0,this.y||0,this.index)},text:function(t){var e;if(!0!==this.draw&&(this.drawText=this.draw),e=this.drawText,this.noClose=this.draw=!0,this.font&&(t.font=this.font),this.textAlign&&(t.textAlign=this.textAlign),null!==this.textBaseline&&(t.textBaseline=this.textBaseline),this.direction&&(t.direction=this.direction),"f"!==e&&"f&s"!==e||t.fillText(this.text,this.x||0,this.y||0,this.maxWidth),"s"===e||"f&s"===e)return t.strokeText(this.text,this.x||0,this.y||0,this.maxWidth)}},w={linear:function(t){var e,i,r,s,n;for(i=t.createLinearGradient(this.x0||0,this.y0||0,this.x1||0,this.y1||0),r=0,s=(n=this.colorStops).length;r<s;r++)e=n[r],i.addColorStop(e.pos||0,e.color);return i},radial:function(t){var e,i,r,s,n;for(i=t.createRadialGradient(this.x0||0,this.y0||0,this.r0||0,this.x1||0,this.y1||0,this.r1||0),r=0,s=(n=this.colorStops).length;r<s;r++)e=n[r],i.addColorStop(e.pos||0,e.color);return i},pattern:function(t,e){var i;return i=e.data.images[this.image],t.createPattern(i,this.repetition||"repeat")}},g=function(t,e,i){var r;return null!=(r=w[i.type])?r.call(i,t,e):void 0},v=function(t,e){var i,r;if((r=this.stroke)&&(r.constructor===Object&&(this.stroke=g(t,e,r)),t.strokeStyle=this.stroke),(i=this.fill)&&(i.constructor===Object&&(this.fill=g(t,e,i)),t.fillStyle=this.fill),null!==this.lineWidth&&(t.lineWidth=this.lineWidth),null!==this.lineCap&&(t.lineCap=this.lineCap),this.lineJoin&&(t.lineJoin=this.lineJoin),null!==this.lineDashOffset)return t.lineDashOffset=this.lineDashOffset},f=function(t,e,i){var r,s,n,a,o,l,u;if(t.save(),e.animation.animate(this),t.transform(this.scaleX||1,this.skewY||0,this.skewX||0,this.scaleY||1,this.origX||0,this.origY||0),(n=this.modelAngleScale)&&t.rotate(e.angle*n*Math.PI/180),this.angle&&t.rotate(this.angle*Math.PI/180),v.call(this,t,e),this.noShadow&&(t.shadowBlur=0,t.shadowOffsetX=0,t.shadowOffsetY=0),null!==this.shadowBlur&&(t.shadowBlur=this.shadowBlur),null!==this.shadowColor&&(t.shadowColor=this.shadowColor),null!==this.shadowOffsetX&&(t.shadowOffsetX=this.shadowOffsetX),null!==this.shadowOffsetY&&(t.shadowOffsetY=this.shadowOffsetY),t.globalAlpha=i*(this.opacity||1),this.before){for(s in e.animation.reciveProps(this),o=this.before)(a=o[s]).hide||f.call(a,t,e,i);e.animation.animate(this)}if(t.beginPath(),null!=(l=m[this.type])&&l.call(this,t,e,i),this.noClose||t.closePath(),"f"!==(r=this.draw||"f&s")&&"f&s"!==r||t.fill(),"s"!==r&&"f&s"!==r||t.stroke(),e.animation.reciveProps(this),this.after)for(s in u=this.after)(a=u[s]).hide||f.call(a,t,e,i);return h.drawOrigin&&(t.fillStyle="#f00",t.shadowBlur=0,t.shadowOffsetX=0,t.shadowOffsetY=0,t.fillRect(-2,-2,4,4)),t.restore()},p={poly:function(t,e,i,r){var s,n,a,o,h,l,f,d,p,m;for(o=e[this.verts[0]],l=i.x,d=i.y,m=u+i.z,p=((o.z||0)+m)*c,h=((o.x||0)+l)*p,f=((o.y||0)+d)*p,t.moveTo(h,f),s=n=1,a=this.verts.length-1;1<=a?n<=a:n>=a;s=1<=a?++n:--n)p=(((o=e[this.verts[s]]).z||0)+m)*c,h=((o.x||0)+l)*p,f=((o.y||0)+d)*p,t.lineTo(h,f);return null},part:function(t,e,i,r,s){var n,a,o,h,l,u,c;for(this.noClose=this.draw=!0,c=e[this.vert],n={x:i.x+(c.x||0),y:i.y+(c.y||0),z:i.z+(c.z||0)},u=[],h=0,l=(o=r.parts[this.part].faces).length;h<l;h++)a=o[h],u.push(d.call(a,t,r,n,s));return u},node:function(t,e,i,r,s){var n,a,o,h,l;if(this.noClose=this.draw=!0,x(e[this.vert],i).apply(t),o=r.model,this.dir&&(o=r.data.dirs[this.dir]),(h=this.node).constructor===String)h=o[h];else{for(l=o,n=0,a=h.length;n<a;n++)l=l[h[n]];h=l}return f.call(h,t,r,s)},elipse:function(t,e,i){var r,s,n,a,o;return a=(n=x(e[this.vert1],i)).x,o=n.y,r=((n=x(e[this.vert2],i)).x-a)/2,s=(n.y-o)/2,t.ellipse(a+r,o+s,r,s,(this.rotation||0)*Math.PI/180,(this.startAngle||0)*Math.PI/180,(this.endAngle||360)*Math.PI/180,!this.clockwise)}},d=function(t,e,i,r){var s,n;return t.save(),this.stroke,v.call(this,t,e),t.globalAlpha=r*(this.opacity||1),t.beginPath(),null!=(n=p[this.type||"poly"])&&n.call(this,t,e.data.verts,i,e,r),this.noClose||t.closePath(),"f"!==(s=this.draw||"f&s")&&"f&s"!==s||t.fill(),"s"!==s&&"f&s"!==s||t.stroke(),t.restore()},u=1/(c=5e-4),k={x:0,y:0,scale:1,apply:function(t){return t.transform(this.scale,0,0,this.scale,this.x,this.y)}},h=function(){class t{static transform(t,e,i,r){return i=(u+i+r.z)*c,k.x=(t+r.x)*i,k.y=(e+r.y)*i,k.scale=i,k}constructor(t){this.data=t}setData(t){return this.data=t,this.setAngle(this.angle)}setAngle(t){var e,i,r,s;return this.angle=t%=360,this.animation.setAngle(t),(i=this.data.dirs)?(r=i.lenght)>1?((t+=(e=360/r)>>1)<0&&(t+=360),this.model=i[Math.floor(t/e)]):this.model=i[0]:this.model=null,(s=this.data.dirsParts)?(r=s.lenght)>1?((t+=(e=360/r)>>1)<0&&(t+=360),this.parts=s[Math.floor(t/e)]):this.parts=s[0]:this.parts=null}draw2D(t,e=1){var i,r,s,n;if(this.model){for(i in n=[],s=this.model)(r=s[i]).hide?n.push(void 0):n.push(f.call(r,t,this,e));return n}}drawParts(t,e,i=1){var r,s,n,a,o;if(this.parts){for(r in o=[],a=this.parts)(n=a[r]).hide?o.push(void 0):o.push(function(){var r,a,o,h;for(h=[],r=0,a=(o=n.faces).length;r<a;r++)s=o[r],h.push(d.call(s,t,this,e,i));return h}.call(this));return o}}}return t.prototype.animation=new e,t.prototype.angle=0,t}.call(void 0),y=h.transform,x=function(t,e){return y(t.x||0,t.y||0,t.z||0,e)},P=function(){class t{on(t,e){var i;return e&&((i=this.handlers[t])||(this.handlers[t]=i=[]),i.indexOf(e)<0&&i.push(e)),this}off(t,e){var i,r;return e&&(i=this.handlers[t])&&(r=i.indexOf(e))>=0&&i.splice(r,1),this}trigger(t,e){var i,r,s;if(i=this.handlers[t])for(r=0,s=i.length;r<s;r++)i[r].apply(this,e);return this}removeEvent(t){return delete this.handlers[t],this}}return t.prototype.handlers=[],t}.call(void 0),S=function(){var t,e;return e=0,t=0,class extends P{reset(){return e=t=0}getPercent(){return 1-(0!==t?e/t:0)}updatePercent(){return this.trigger("changepercent",[this.getPercent()])}load(i){var r;return r=this,e++,t++,function(){return null!=i&&i.apply(r,arguments),--e<=0&&(r.reset(),r.trigger("load")),r.updatePercent()}}loadJson(t,e){return e=this.load(e),$.getJSON(t+".json").done(e).fail((function(){return e(null)}))}loadImage(t,e){var i;return e=this.load(e),(i=new Image).onload=function(){return e(i)},i.src=t,i}}}.call(void 0),$(document).ready((function(){var t,e,r,s,n,a,o,u,c,f,d,p,m,g,v,w,y,x;return t=$("#canvas"),s=t.get(0),n=s.getContext("2d",{alpha:!1}),$(window).on("resize",x),p="models/test1",u=new S,f=new h,d=new l,e={canvas:s,g:n,x:0,y:0,z:0},(x=function(){return s.width=$(window).width(),s.height=$(window).height()-$("#canvas").offset().top})(),m=function(){return d.load(u,p)},u.on("load",(function(){var t,e,i;if(f.setData(d),f.animation.data){for(t in(e=$(".js-frame-container")).empty(),i=f.animation.data)i[t],e.append(`<a class='dropdown-item js-frame-select' href='#'>${t}</a>`);return $(".js-frame-select").click((function(){return f.animation.setAnim($(this).text(),f.angle)}))}})),console.log(f),c=setInterval(m,500),(y=function(t){var i,r,a;return n.save(),a=s.width,r=s.height,i=a/2,0,n.fillStyle="#fff",n.fillRect(0,0,a,r),n.beginPath(),n.lineWidth=2,n.strokeStyle="#f00",n.moveTo(i,0),n.lineTo(i,r),n.moveTo(0,0),n.lineTo(a,0),n.stroke(),n.translate(i,0),f.animation.play(),f.drawParts(n,e),h.transform(0,0,0,e).apply(n),f.draw2D(n),n.restore(),window.requestAnimationFrame(y)})(0),v=w=0,g=function(t){return e.x+=t.clientX-v,e.y+=t.clientY-w,v=t.clientX,w=t.clientY},t.on("mousedown",(function(e){return v=e.clientX,w=e.clientY,t.on("mousemove",g)})),t.on("touchstart",(function(t){return v=t.touches[0].clientX,w=t.touches[0].clientY})),t.on("touchmove",(function(t){return g(t.touches[0])})),t.on("mouseup",(function(){return t.off("mousemove",g)})),$(".js-z-number").val(e.z).on("input change",(function(){return e.z=+$(this).val()})),$(".js-angle-number").val(f.angle).on("input change",(function(){return f.setAngle+$(this).val()})),$(".js-model-select").click((function(){return d=new l,p=$(this).data("file")})),$(".js-anim-select").click((function(){var t;return t=$(this).data("file"),f.animation.data=new i,f.animation.data.load(u,t),$(".js-anim-refresh").data("file",t),$(".js-refresh-model").prop("checked",!1),clearInterval(c)})),h.drawOrigin=!0,$(".js-draw-origin").change((function(){return h.drawOrigin=$(this).prop("checked")})),$(".js-refresh-model").change((function(){return $(this).prop("checked")?c=setInterval(m,500):clearInterval(c)})),$(".js-reset-pos").click((function(){return e.x=e.y=e.z=0,$(".js-z-number").val("0")})),a=!1,$(".js-full-screen").click((function(){return a?r():o(document.documentElement),a=!a})),o=function(t){return t.requestFullScreen?t.requestFullScreen():t.mozRequestFullScreen?t.mozRequestFullScreen():t.webkitRequestFullScreen?t.webkitRequestFullScreen():void 0},r=function(){return document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen?document.webkitCancelFullScreen():void 0}}))}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNwcml0ZS5jb2ZmZWUiLCJhbmltYXRpb24uY29mZmVlIiwibW9kZWwuY29mZmVlIiwiZXZlbnRzLmNvZmZlZSIsImxvYWRlci5jb2ZmZWUiLCJtYWluLmNvZmZlZSJdLCJuYW1lcyI6WyJTcHJpdGUiLCJBbmltYXRpb24iLCJBbmltYXRpb25EYXRhIiwiZ2V0VGltZSIsIm1ha2VFYXNlSW5PdXQiLCJtYWtlRWFzZU91dCIsInNldFRpbWluZ0Z1bmN0aW9uIiwidGltaW5nRnVuY3Rpb25zIiwiTW9kZWwiLCJNb2RlbERhdGEiLCJaX09SSUdJTiIsIlpfVFJBTlNGT1JNIiwiZHJhd05vZGUiLCJkcmF3UGFydCIsImRyYXdQYXJ0VHlwZSIsImRyYXdUeXBlT2JqIiwiaW5pdFN0eWxlIiwic2V0RHJhd1N0eWxlIiwic3R5bGVUeXBlRnVuYyIsInRyYW5zZm9ybSIsInRyYW5zZm9ybVZlcnQiLCJ0cnNmT2JqIiwiRXZlbnRFbW1pdGVyIiwiTG9hZGVyIiwiW29iamVjdCBPYmplY3RdIiwibG9hZGVyIiwiZmlsZSIsInNwcml0ZSIsImNhY2hlIiwibG9hZCIsImxvYWRKc29uIiwiZGF0YTEiLCJ0aGlzIiwiZGF0YSIsImxvYWRJbWFnZSIsInRleHR1cmUiLCJnIiwiZnJhbWUiLCJ4IiwieSIsImluZGV4IiwiY29uc3RydWN0b3IiLCJPYmplY3QiLCJkcmF3SW1hZ2UiLCJ3IiwiaCIsImN4IiwiY3kiLCJBcnJheSIsImRyYXciLCJNYXRoIiwiZmxvb3IiLCJsZW5naHQiLCJTdHJpbmciLCJhbmltRGF0YSIsImtleSIsInJlc3VsdHMiLCJ2YWx1ZSIsIkRhdGUiLCJ0aW1pbmciLCJ0aW1lIiwibmFtZSIsImxpbmVhciIsImVhc2VPdXQiLCJlYXNlSW5PdXQiLCJzaW4iLCJhY29zIiwiYSIsImIiLCJwb3ciLCJzdGFydFRpbWUiLCJkZWx0YVRpbWUiLCJhbmdsZSIsImFuaW0iLCJyZXNldCIsImR1cmF0aW9uIiwic2V0QW5nbGUiLCJkQW5nbGUiLCJkaXJzIiwibiIsImRlbHRhIiwic2NhbGUiLCJsb29wIiwibm9kZSIsIm5vZGVQYXRoIiwiaSIsImxlbiIsInBvaW50IiwicHJvcCIsInByb3BzIiwicHJvcHNVc2VkIiwicmVmIiwicmVmMSIsInRGdW5jIiwidGltZXN0b3BzIiwidG9WYWwiLCJsZW5ndGgiLCJlbmQiLCJzdGFydCIsImZ1bmMiLCJOdW1iZXIiLCJ3b3JrIiwidG8iLCJhT2JqIiwibW9kZWwiLCJpbWFnZSIsImltYWdlc0RhdGEiLCJqIiwibW9kZWxzRGF0YSIsIm5vZGVzIiwibm9kZXNMb2FkIiwic3ByaXRlc0RhdGEiLCJpbWFnZXMiLCJzcHJpdGVzIiwibW9kZWxzIiwiYmVmb3JlIiwiYWZ0ZXIiLCJsaW5lIiwibW92ZVRvIiwieDEiLCJ5MSIsImxpbmVUbyIsIngyIiwieTIiLCJyZWN0Iiwid2lkdGgiLCJoZWlnaHQiLCJyZWN0Um91bmQiLCJyIiwibm9DbG9zZSIsInJhZGl1cyIsImFyY1RvIiwiYXJjIiwic3RhcnRBbmdsZSIsIlBJIiwiZW5kQW5nbGUiLCJjbG9ja3dpc2UiLCJlbGlwc2UiLCJlbGxpcHNlIiwicngiLCJyeSIsInJvdGF0aW9uIiwicGF0aCIsIlBhdGgyRCIsImZpbGwiLCJzdHJva2UiLCJvcGFjaXR5Iiwicm9vdCIsInRyYW5zbGF0ZSIsImNhbGwiLCJ0ZXh0IiwiZHJhd1RleHQiLCJmb250IiwidGV4dEFsaWduIiwidGV4dEJhc2VsaW5lIiwiZGlyZWN0aW9uIiwiZmlsbFRleHQiLCJtYXhXaWR0aCIsInN0cm9rZVRleHQiLCJjb2xvclN0b3AiLCJncmFkaWVudCIsImNyZWF0ZUxpbmVhckdyYWRpZW50IiwieDAiLCJ5MCIsImFkZENvbG9yU3RvcCIsInBvcyIsImNvbG9yIiwicmFkaWFsIiwiY3JlYXRlUmFkaWFsR3JhZGllbnQiLCJyMCIsInIxIiwicGF0dGVybiIsImNyZWF0ZVBhdHRlcm4iLCJyZXBldGl0aW9uIiwic3R5bGUiLCJzdHJva2VTdHlsZSIsImZpbGxTdHlsZSIsImxpbmVXaWR0aCIsImxpbmVDYXAiLCJsaW5lSm9pbiIsImxpbmVEYXNoT2Zmc2V0IiwibUFzY2FsZSIsInJlZjIiLCJzYXZlIiwiYW5pbWF0aW9uIiwiYW5pbWF0ZSIsInNjYWxlWCIsInNrZXdZIiwic2tld1giLCJzY2FsZVkiLCJvcmlnWCIsIm9yaWdZIiwibW9kZWxBbmdsZVNjYWxlIiwicm90YXRlIiwibm9TaGFkb3ciLCJzaGFkb3dCbHVyIiwic2hhZG93T2Zmc2V0WCIsInNoYWRvd09mZnNldFkiLCJzaGFkb3dDb2xvciIsImdsb2JhbEFscGhhIiwicmVjaXZlUHJvcHMiLCJoaWRlIiwiYmVnaW5QYXRoIiwiY2xvc2VQYXRoIiwiZHJhd09yaWdpbiIsImZpbGxSZWN0IiwicmVzdG9yZSIsInBvbHkiLCJ2ZXJ0cyIsImNhbWVyYSIsInYiLCJ4YyIsInljIiwieiIsInp0IiwicGFydCIsImMiLCJmYWNlIiwiZmFjZXMiLCJ2ZXJ0IiwicGFydHMiLCJtIiwiYXBwbHkiLCJkaXIiLCJ2ZXJ0MSIsInZlcnQyIiwiZGlyc1BhcnRzIiwiXyIsImV2ZW50IiwiY2FsbGJhY2siLCJoYW5kbGVyIiwiaGFuZGxlcnMiLCJpbmRleE9mIiwicHVzaCIsInNwbGljZSIsImFyZ3MiLCJsb2FkUmVzTnVtYmVyIiwiYWxsUmVzTG9hZGVyIiwidHJpZ2dlciIsImdldFBlcmNlbnQiLCJfdGhpcyIsImFyZ3VtZW50cyIsInVwZGF0ZVBlcmNlbnQiLCIkIiwiZ2V0SlNPTiIsImRvbmUiLCJmYWlsIiwiaW1nIiwiSW1hZ2UiLCJvbmxvYWQiLCJzcmMiLCJkb2N1bWVudCIsInJlYWR5IiwiJGNhbnZhcyIsImNhbmNlbEZ1bGxzY3JlZW4iLCJjYW52YXMiLCJjb250ZXh0IiwiZnVsbHNjcmVlbiIsImxhdW5jaEZ1bGxTY3JlZW4iLCJtUmVmcmVzaEludGVydmFsIiwibW9kZWxEYXRhIiwibW9kZWxGaWxlIiwibW9kZWxSZWZyZXNoIiwibW92ZUNhbWVyYSIsIm9sZE1vdXNlWCIsIm9sZE1vdXNlWSIsInJlbmRlciIsInJlc2l6ZSIsImdldCIsImdldENvbnRleHQiLCJhbHBoYSIsIndpbmRvdyIsIm9uIiwib2Zmc2V0IiwidG9wIiwiY29udGFpbmVyIiwic2V0RGF0YSIsImVtcHR5IiwiYXBwZW5kIiwiY2xpY2siLCJzZXRBbmltIiwiY29uc29sZSIsImxvZyIsInNldEludGVydmFsIiwicGxheSIsImRyYXdQYXJ0cyIsImRyYXcyRCIsInJlcXVlc3RBbmltYXRpb25GcmFtZSIsImUiLCJjbGllbnRYIiwiY2xpZW50WSIsInRvdWNoZXMiLCJvZmYiLCJ2YWwiLCJjbGVhckludGVydmFsIiwiY2hhbmdlIiwiZG9jdW1lbnRFbGVtZW50IiwiZWxlbWVudCIsInJlcXVlc3RGdWxsU2NyZWVuIiwibW96UmVxdWVzdEZ1bGxTY3JlZW4iLCJ3ZWJraXRSZXF1ZXN0RnVsbFNjcmVlbiIsImNhbmNlbEZ1bGxTY3JlZW4iLCJtb3pDYW5jZWxGdWxsU2NyZWVuIiwid2Via2l0Q2FuY2VsRnVsbFNjcmVlbiJdLCJtYXBwaW5ncyI6InlCQUFBLElBQUFBLEVDQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEVDQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEVBQUFDLEVDQUFDLEVDQUFDLEVKQU12QixFQUFBLFdBQU4sTUFBQUEsRUFHUXdCLFlBQUNDLEVBQVFDLE9BQ2ZDLFNBQUFBLEVBQVMzQixFQUFPNEIsTUFBTUYsT0FFckJDLEVBQVMsSUFBSTNCLEdBQ042QixLQUFLSixFQUFRQyxHQUNwQjFCLEVBQU80QixNQUFNRixHQUFRQyxHQUN0QkEsRUFFREgsS0FBT0MsRUFBUUMsVUFDZEQsRUFBT0ssU0FBU0osRUFBTUssSUFBQ0MsS0FBQ0MsS0FBQUYsSUFDeEJOLEVBQU9TLFVBQVVSLEVBQU8sT0FBUVMsSUFBQ0gsS0FBQ0csUUFBQUEsSUFFbkNYLEtBQU9ZLEVBQUdDLEVBQU9DLEVBQUdDLEVBQUdDLEVBQVEsT0FDOUJQLEVBQ0EsR0FEQUEsRUFBT0QsS0FBQ0Ms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QzNCL1IsRUFBTW9NLFdBQWF1QyxFQUFFbk4sTUFBTXdELEtBQUssY0FFakMySixFQUFFLHFCQUFxQm9ELFFBQU8sV0FDN0IsT0FBR3BELEVBQUVuTixNQUFNd0QsS0FBSyxXQUNmMkssRUFBbUJ3QixZQUFZckIsRUFBYyxLQUU3Q2dDLGNBQWNuQyxNQUVoQmhCLEVBQUUsaUJBQWlCb0MsT0FBTSxrQkFDeEJ0RSxFQUFPM0ssRUFBSTJLLEVBQU8xSyxFQUFJMEssRUFBT0ksRUFBSSxFQUNqQzhCLEVBQUUsZ0JBQWdCa0QsSUFBSSxRQUV2QnBDLEdBQWEsRUFDYmQsRUFBRSxtQkFBbUJvQyxPQUFNLGtCQUN2QnRCLEVBQ0ZILElBRUFJLEVBQWlCUCxTQUFTNkMsaUJBQzNCdkMsR0FBY0EsS0FFZkMsRUFBbUIsU0FBQ3VDLEdBQ25CLE9BQUdBLEVBQVFDLGtCQUNWRCxFQUFRQyxvQkFDREQsRUFBUUUscUJBQ2ZGLEVBQVFFLHVCQUNERixFQUFRRyx3QkFDZkgsRUFBUUcsK0JBREosR0FHTjlDLEVBQW1CLFdBQ2xCLE9BQUdILFNBQVNrRCxpQkFDWGxELFNBQVNrRCxtQkFDRmxELFNBQVNtRCxvQkFDaEJuRCxTQUFTbUQsc0JBQ0ZuRCxTQUFTb0QsdUJBQ2hCcEQsU0FBU29ELDhCQURMIiwiZmlsZSI6Im1haW4uanMiLCJzb3VyY2VzQ29udGVudCI6WyJjbGFzcyBTcHJpdGVcclxuXHRAY2FjaGU6IFtdXHJcblxyXG5cdEBsb2FkOiAobG9hZGVyLCBmaWxlKSAtPlxyXG5cdFx0c3ByaXRlID0gU3ByaXRlLmNhY2hlW2ZpbGVdXHJcblx0XHR1bmxlc3Mgc3ByaXRlXHJcblx0XHRcdHNwcml0ZSA9IG5ldyBTcHJpdGVcclxuXHRcdFx0c3ByaXRlLmxvYWQgbG9hZGVyLCBmaWxlXHJcblx0XHRcdFNwcml0ZS5jYWNoZVtmaWxlXSA9IHNwcml0ZVxyXG5cdFx0c3ByaXRlXHJcblxyXG5cdGxvYWQ6IChsb2FkZXIsIGZpbGUpIC0+XHJcblx0XHRsb2FkZXIubG9hZEpzb24gZmlsZSwgKEBkYXRhKSA9PlxyXG5cdFx0bG9hZGVyLmxvYWRJbWFnZSBmaWxlICsgJy5wbmcnLCAoQHRleHR1cmUpID0+XHJcblxyXG5cdGRyYXc6IChnLCBmcmFtZSwgeCwgeSwgaW5kZXggPSAwKSAtPlxyXG5cdFx0ZGF0YSA9IEBkYXRhXHJcblx0XHRpZiBkYXRhXHJcblx0XHRcdHN3aXRjaCBmcmFtZS5jb25zdHJ1Y3RvclxyXG5cdFx0XHRcdHdoZW4gT2JqZWN0XHJcblx0XHRcdFx0XHRnLmRyYXdJbWFnZSBAdGV4dHVyZSxcclxuXHRcdFx0XHRcdFx0ZnJhbWUueCwgZnJhbWUueSwgZnJhbWUudywgZnJhbWUuaCxcclxuXHRcdFx0XHRcdFx0eCArIGZyYW1lLmN4LCB5ICsgZnJhbWUuY3ksIGZyYW1lLncsIGZyYW1lLmhcclxuXHRcdFx0XHR3aGVuIEFycmF5XHJcblx0XHRcdFx0XHRAZHJhdyBnLCBmcmFtZVtNYXRoLmZsb29yKGluZGV4KSAlIGZyYW1lLmxlbmdodF0sIHgsIHlcclxuXHRcdFx0XHR3aGVuIFN0cmluZ1xyXG5cdFx0XHRcdFx0QGRyYXcgZywgZGF0YVtmcmFtZV0sIHgsIHksIGluZGV4XHJcblx0XHR0aGlzXHJcblxyXG5leHBvcnQgeyBTcHJpdGUgfSIsImNsYXNzIEFuaW1hdGlvbkRhdGFcclxuXHRAY2FjaGU6IFtdXHJcblxyXG5cdEBsb2FkOiAobG9hZGVyLCBmaWxlKSAtPlxyXG5cdFx0YW5pbURhdGEgPSBBbmltYXRpb25EYXRhLmNhY2hlW2ZpbGVdXHJcblx0XHR1bmxlc3MgYW5pbURhdGFcclxuXHRcdFx0YW5pbURhdGEgPSBuZXcgQW5pbWF0aW9uRGF0YVxyXG5cdFx0XHRhbmltRGF0YS5sb2FkIGxvYWRlciwgZmlsZVxyXG5cdFx0XHRBbmltYXRpb25EYXRhLmNhY2hlW2ZpbGVdID0gYW5pbURhdGFcclxuXHRcdGFuaW1EYXRhXHJcblxyXG5cdGxvYWQ6IChsb2FkZXIsIGZpbGUpIC0+XHJcblx0XHRsb2FkZXIubG9hZEpzb24gZmlsZSwgKGRhdGEpID0+XHJcblx0XHRcdGlmIGRhdGFcclxuXHRcdFx0XHRmb3Iga2V5LCB2YWx1ZSBvZiBkYXRhXHJcblx0XHRcdFx0XHR0aGlzW2tleV0gPSB2YWx1ZVxyXG5cclxuZ2V0VGltZSA9IC0+XHJcblx0bmV3IERhdGUoKS5nZXRUaW1lKCkgLyAxMDAwXHJcblxyXG5tYWtlRWFzZU91dCA9ICh0aW1pbmcpIC0+XHJcblx0KHRpbWUpIC0+XHJcblx0XHQxIC0gdGltaW5nKDEgLSB0aW1lKVxyXG5cclxubWFrZUVhc2VJbk91dCA9ICh0aW1pbmcpIC0+XHJcblx0KHRpbWUpIC0+XHJcblx0XHRpZiB0aW1lIDwgMC41XHJcblx0XHRcdHRpbWluZygyICogdGltZSkgLyAyXHJcblx0XHRlbHNlXHJcblx0XHRcdCgyIC0gdGltaW5nKDIgKiAoMSAtIHRpbWUpKSkgLyAyXHJcblxyXG5cclxuc2V0VGltaW5nRnVuY3Rpb24gPSAobmFtZSwgdGltaW5nKSAtPlxyXG5cdHRpbWluZ0Z1bmN0aW9uc1tuYW1lXSA9IHRpbWluZ1xyXG5cdHRpbWluZ0Z1bmN0aW9uc1tuYW1lICsgJ0Vhc2VPdXQnXSA9IG1ha2VFYXNlT3V0IHRpbWluZ1xyXG5cdHRpbWluZ0Z1bmN0aW9uc1tuYW1lICsgJ0Vhc2VJbk91dCddID0gbWFrZUVhc2VJbk91dCB0aW1pbmdcclxuXHJcbnRpbWluZ0Z1bmN0aW9ucyA9XHJcblx0bGluZWFyOiAodGltZSkgLT5cclxuXHRcdHRpbWVcclxuXHJcblx0ZWFzZU91dDogKHRpbWUpIC0+XHJcblx0XHQxIC0gdGltZVxyXG5cclxuXHRlYXNlSW5PdXQ6ICh0aW1lKSAtPlxyXG5cdFx0aWYgdGltZSA8IDAuNVxyXG5cdFx0XHR0aW1lICogMlxyXG5cdFx0ZWxzZVxyXG5cdFx0XHQyIC0gdGltZSAqIDJcclxuXHJcbnNldFRpbWluZ0Z1bmN0aW9uICdxdWFkJywgKHRpbWUpIC0+XHJcblx0dGltZSAqIHRpbWVcclxuXHJcbnNldFRpbWluZ0Z1bmN0aW9uICdjaXJjbGUnLCAodGltZSkgLT5cclxuXHQxIC0gTWF0aC5zaW4gTWF0aC5hY29zIHRpbWVcclxuXHJcbnNldFRpbWluZ0Z1bmN0aW9uICdib3VuY2UnLCAodGltZSkgLT5cclxuXHRhID0gMFxyXG5cdGIgPSAxXHJcblx0d2hpbGUgdHJ1ZVxyXG5cdFx0aWYgdGltZSA+PSAoNyAtIDQgKiBhKSAvIDExXHJcblx0XHRcdHJldHVybiAtTWF0aC5wb3coKDExIC0gNiAqIGEgLSAxMSAqIHRpbWUpIC8gNCwgMikgKyBNYXRoLnBvdyhiLCAyKVxyXG5cdFx0YSArPSBiXHJcblx0XHRiIC89IDJcclxuXHJcbmNsYXNzIEFuaW1hdGlvblxyXG5cdEBnZXRUaW1lOiBnZXRUaW1lXHJcblxyXG5cdGxvb3A6IHRydWVcclxuXHRzdGFydFRpbWU6IDBcclxuXHRkdXJhdGlvbjogMFxyXG5cdGRlbHRhVGltZTogMFxyXG5cdHNjYWxlOiAxXHJcblxyXG5cdEBwcm9wczogW11cclxuXHRAcHJvcHNVc2VkOiBbXVxyXG5cclxuXHRyZXNldDogLT5cclxuXHRcdEBzdGFydFRpbWUgPSBnZXRUaW1lKClcclxuXHRcdEBkZWx0YVRpbWUgPSAwXHJcblx0XHR0aGlzXHJcblxyXG5cdHNldEFuaW06IChuYW1lLCBhbmdsZSA9IDAsIGRhdGEgPSBAZGF0YSkgLT5cclxuXHRcdEBhbmltID0gZGF0YT9bbmFtZV1cclxuXHRcdEByZXNldCgpXHJcblx0XHRpZiBAYW5pbVxyXG5cdFx0XHRAZHVyYXRpb24gPSBpZiBAYW5pbSB0aGVuIEBhbmltLmR1cmF0aW9uIGVsc2UgMFxyXG5cdFx0XHRAc2V0QW5nbGUgYW5nbGVcclxuXHRcdHRoaXNcclxuXHJcblx0c2V0QW5nbGU6IChhbmdsZSkgLT5cclxuXHRcdEBmcmFtZSA9IG51bGxcclxuXHRcdGlmIEBhbmltXHJcblx0XHRcdGFuZ2xlID0gYW5nbGUgJSAzNjBcclxuXHRcdFx0ZGlycyA9IEBhbmltLmRpcnNcclxuXHRcdFx0aWYgZGlyc1xyXG5cdFx0XHRcdG4gPSBkaXJzLmxlbmdodFxyXG5cdFx0XHRcdGlmIG4gPiAxXHJcblx0XHRcdFx0XHRkQW5nbGUgPSAzNjAgLyBuXHJcblx0XHRcdFx0XHRhbmdsZSArPSBkQW5nbGUgPj4gMVxyXG5cdFx0XHRcdFx0aWYgYW5nbGUgPCAwIHRoZW4gYW5nbGUgKz0gMzYwXHJcblx0XHRcdFx0XHRAZnJhbWUgPSBkaXJzW01hdGguZmxvb3IoYW5nbGUgLyBkQW5nbGUpXVxyXG5cdFx0XHRcdGVsc2VcclxuXHRcdFx0XHRcdEBmcmFtZSA9IGRpcnNbMF1cclxuXHRcdHRoaXNcclxuXHJcblx0cGxheTogKHRpbWUpIC0+XHJcblx0XHR0aW1lID0gdGltZSB8fCBnZXRUaW1lKClcclxuXHRcdEBkZWx0YVRpbWUgPSBkZWx0YSA9ICh0aW1lIC0gQHN0YXJ0VGltZSkgKiBAc2NhbGVcclxuXHRcdGR1cmF0aW9uID0gQGR1cmF0aW9uXHJcblx0XHR1bmxlc3MgZHVyYXRpb25cclxuXHRcdFx0cmV0dXJuIGZhbHNlXHJcblx0XHRpZiBkZWx0YSA+IGR1cmF0aW9uXHJcblx0XHRcdGlmIEBsb29wXHJcblx0XHRcdFx0QGRlbHRhVGltZSAlPSBkdXJhdGlvblxyXG5cdFx0XHRlbHNlXHJcblx0XHRcdFx0cmV0dXJuIGZhbHNlXHJcblx0XHR0cnVlXHJcblxyXG5cdGFuaW1hdGU6IChub2RlLCBub2RlUGF0aCA9IG5vZGUubm9kZVBhdGgpIC0+XHJcblx0XHRmcmFtZSA9IEBmcmFtZVxyXG5cdFx0aWYgZnJhbWVcclxuXHRcdFx0dGltZXN0b3BzID0gZnJhbWVbbm9kZVBhdGhdXHJcblx0XHRcdGlmIHRpbWVzdG9wc1xyXG5cdFx0XHRcdGRlbHRhID0gQGRlbHRhVGltZVxyXG5cdFx0XHRcdHByb3BzID0gQW5pbWF0aW9uLnByb3BzXHJcblx0XHRcdFx0cHJvcHNVc2VkID0gQW5pbWF0aW9uLnByb3BzVXNlZFxyXG5cdFx0XHRcdGZvciBwb2ludCBpbiB0aW1lc3RvcHNcclxuXHRcdFx0XHRcdGlmIGRlbHRhID49IHBvaW50LmVuZFxyXG5cdFx0XHRcdFx0XHRmb3IgbmFtZSwgdG9WYWwgb2YgcG9pbnQudG9cclxuXHRcdFx0XHRcdFx0XHR1bmxlc3MgcHJvcHNVc2VkW25hbWVdXHJcblx0XHRcdFx0XHRcdFx0XHRwcm9wc1tuYW1lXSA9IG5vZGVbbmFtZV1cclxuXHRcdFx0XHRcdFx0XHRcdHByb3BzVXNlZFtuYW1lXSA9IHRydWVcclxuXHRcdFx0XHRcdFx0XHRub2RlW25hbWVdID0gdG9WYWxcclxuXHRcdFx0XHRcdGVsc2UgaWYgZGVsdGEgPj0gcG9pbnQuc3RhcnRcclxuXHRcdFx0XHRcdFx0aWYgcG9pbnQuZnVuY1xyXG5cdFx0XHRcdFx0XHRcdHRGdW5jID0gdGltaW5nRnVuY3Rpb25zW3BvaW50LmZ1bmNdXHJcblx0XHRcdFx0XHRcdGVsc2VcclxuXHRcdFx0XHRcdFx0XHR0RnVuYyA9IHRpbWluZ0Z1bmN0aW9ucy5saW5lYXJcclxuXHRcdFx0XHRcdFx0I1xyXG5cdFx0XHRcdFx0XHRmb3IgbmFtZSwgdG9WYWwgb2YgcG9pbnQudG9cclxuXHRcdFx0XHRcdFx0XHRwcm9wID0gbm9kZVtuYW1lXVxyXG5cdFx0XHRcdFx0XHRcdHVubGVzcyBwcm9wc1VzZWRbbmFtZV1cclxuXHRcdFx0XHRcdFx0XHRcdHByb3BzW25hbWVdID0gcHJvcFxyXG5cdFx0XHRcdFx0XHRcdFx0cHJvcHNVc2VkW25hbWVdID0gdHJ1ZVxyXG5cdFx0XHRcdFx0XHRcdHByb3AgfHw9IDBcclxuXHRcdFx0XHRcdFx0XHRpZiB0b1ZhbC5jb25zdHJ1Y3RvciA9PSBOdW1iZXJcclxuXHRcdFx0XHRcdFx0XHRcdHRpbWUgPSB0RnVuYygoZGVsdGEgLSBwb2ludC5zdGFydCkgLyAocG9pbnQuZW5kIC0gcG9pbnQuc3RhcnQpKVxyXG5cdFx0XHRcdFx0XHRcdFx0bm9kZVtuYW1lXSA9ICh0b1ZhbCAtIHByb3ApICogdGltZSArIHByb3BcclxuXHRcdFx0XHRcdFx0XHRlbHNlXHJcblx0XHRcdFx0XHRcdFx0XHRub2RlW25hbWVdID0gdG9WYWxcclxuXHRcdHRoaXNcclxuXHJcblx0cmVjaXZlUHJvcHM6IChub2RlKSAtPlxyXG5cdFx0cHJvcHMgPSBBbmltYXRpb24ucHJvcHNcclxuXHRcdHByb3BzVXNlZCA9IEFuaW1hdGlvbi5wcm9wc1VzZWRcclxuXHRcdGZvciBuYW1lLCB1c2Ugb2YgcHJvcHNVc2VkXHJcblx0XHRcdGlmIHVzZVxyXG5cdFx0XHRcdG5vZGVbbmFtZV0gPSBwcm9wc1tuYW1lXVxyXG5cdFx0XHRcdHByb3BzVXNlZFtuYW1lXSA9IGZhbHNlXHJcblx0XHR0aGlzXHJcblxyXG5cdGNyZWF0ZVdvcmtGcmFtZTogLT5cclxuXHRcdEBsb29wID0gZmFsc2VcclxuXHRcdEBmcmFtZSA9XHJcblx0XHRcdHdvcms6IFtcclxuXHRcdFx0XHR7XHJcblx0XHRcdFx0XHRzdGFydDogMFxyXG5cdFx0XHRcdFx0ZW5kOiAwXHJcblx0XHRcdFx0XHR0bzoge31cclxuXHRcdFx0XHR9XHJcblx0XHRcdF1cclxuXHRcdHRoaXNcclxuXHJcblx0cmVzZXRXb3JrOiAtPlxyXG5cdFx0cHJvcHNVc2VkID0gQW5pbWF0aW9uLnByb3BzVXNlZFxyXG5cdFx0Zm9yIG5hbWUsIHVzZSBvZiBwcm9wc1VzZWRcclxuXHRcdFx0aWYgdXNlIHRoZW4gcHJvcHNVc2VkW25hbWVdID0gZmFsc2VcclxuXHRcdHRoaXNcclxuXHJcblx0Y2xlYXJXb3JrOiAtPlxyXG5cdFx0cHJvcHNVc2VkID0gQW5pbWF0aW9uLnByb3BzVXNlZFxyXG5cdFx0YU9iaiA9IEBmcmFtZS53b3JrWzBdXHJcblx0XHRhT2JqLnN0YXJ0ID0gYU9iai5lbmQgPSAwXHJcblx0XHR0byA9IFxyXG5cdFx0Zm9yIG5hbWUsIF8gb2YgdG9cclxuXHRcdFx0ZGVsZXRlIHRvW25hbWVdXHJcblx0XHR0aGlzXHJcblxyXG5cdGFuaW1hdGVQcm9wczogKHByb3BzLCBkdXJhdGlvbiwgZnVuYykgLT5cclxuXHRcdEBkdXJhdGlvbiA9IGR1cmF0aW9uXHJcblx0XHRhT2JqID0gQGZyYW1lLndvcmtbMF1cclxuXHRcdGFPYmouZW5kID0gZHVyYXRpb25cclxuXHRcdGFPYmouZnVuYyA9IGZ1bmNcclxuXHRcdHRvID0gYU9iai50b1xyXG5cdFx0Zm9yIG5hbWUsIHByb3Agb2YgcHJvcHNcclxuXHRcdFx0dG9bbmFtZV0gPSBwcm9wXHJcblx0XHRAcmVzZXQoKVxyXG5cdFx0dGhpc1xyXG5cclxuZXhwb3J0IHsgQW5pbWF0aW9uRGF0YSwgQW5pbWF0aW9uIH0iLCJpbXBvcnQgeyBTcHJpdGUgfSBmcm9tICcuL3Nwcml0ZSdcclxuaW1wb3J0IHsgQW5pbWF0aW9uIH0gZnJvbSAnLi9hbmltYXRpb24nXHJcblxyXG5jbGFzcyBNb2RlbERhdGFcclxuXHRAY2FjaGU6IFtdXHJcblxyXG5cdEBsb2FkOiAobG9hZGVyLCBmaWxlKSAtPlxyXG5cdFx0bW9kZWwgPSBNb2RlbERhdGEuY2FjaGVbZmlsZV1cclxuXHRcdHVubGVzcyBtb2RlbFxyXG5cdFx0XHRtb2RlbCA9IG5ldyBNb2RlbERhdGFcclxuXHRcdFx0bW9kZWwubG9hZCBsb2FkZXIsIGZpbGVcclxuXHRcdFx0TW9kZWxEYXRhLmNhY2hlW2ZpbGVdID0gbW9kZWxcclxuXHRcdG1vZGVsXHJcblxyXG5cdGxvYWQ6IChsb2FkZXIsIGZpbGUpIC0+XHJcblx0XHRsb2FkZXIubG9hZEpzb24gZmlsZSwgKGRhdGEpID0+XHJcblx0XHRcdGlmIGRhdGFcclxuXHRcdFx0XHRmb3Iga2V5LCB2YWx1ZSBvZiBkYXRhXHJcblx0XHRcdFx0XHR0aGlzW2tleV0gPSB2YWx1ZVxyXG5cclxuXHRcdFx0XHRpZiBAaW1hZ2VzXHJcblx0XHRcdFx0XHRpbWFnZXNEYXRhID0gQGltYWdlc1xyXG5cdFx0XHRcdFx0QGltYWdlcyA9IFtdXHJcblx0XHRcdFx0XHRmb3Iga2V5LCBpbWFnZSBvZiBpbWFnZXNEYXRhXHJcblx0XHRcdFx0XHRcdEBpbWFnZXNba2V5XSA9IGxvYWRlci5sb2FkSW1hZ2UgaW1hZ2VcclxuXHJcblx0XHRcdFx0aWYgQHNwcml0ZXNcclxuXHRcdFx0XHRcdHNwcml0ZXNEYXRhID0gQHNwcml0ZXNcclxuXHRcdFx0XHRcdEBzcHJpdGVzID0gW11cclxuXHRcdFx0XHRcdGZvciBrZXksIHNwcml0ZSBvZiBzcHJpdGVzRGF0YVxyXG5cdFx0XHRcdFx0XHRAc3ByaXRlc1trZXldID0gU3ByaXRlLmxvYWQgbG9hZGVyLCBzcHJpdGVcclxuXHJcblx0XHRcdFx0aWYgQG1vZGVsc1xyXG5cdFx0XHRcdFx0bW9kZWxzRGF0YSA9IEBtb2RlbHNcclxuXHRcdFx0XHRcdEBtb2RlbHMgPSBbXVxyXG5cdFx0XHRcdFx0Zm9yIGtleSwgbW9kZWwgb2YgbW9kZWxzRGF0YVxyXG5cdFx0XHRcdFx0XHRAbW9kZWxzW2tleV0gPSBNb2RlbERhdGEubG9hZCBsb2FkZXIsIG1vZGVsXHJcblxyXG5cdFx0XHRcdG5vZGVzTG9hZCA9IChub2Rlcywgbm9kZVBhdGggPSAnJykgLT5cclxuXHRcdFx0XHRcdGZvciBuYW1lLCBub2RlIG9mIG5vZGVzXHJcblx0XHRcdFx0XHRcdG5vZGUubm9kZVBhdGggPSBub2RlUGF0aCArIG5hbWVcclxuXHRcdFx0XHRcdFx0aWYgbm9kZS5iZWZvcmVcclxuXHRcdFx0XHRcdFx0XHRub2Rlc0xvYWQgbm9kZS5iZWZvcmUsIG5vZGUubm9kZVBhdGggKyAnPCdcclxuXHRcdFx0XHRcdFx0aWYgbm9kZS5hZnRlclxyXG5cdFx0XHRcdFx0XHRcdG5vZGVzTG9hZCBub2RlLmFmdGVyLCBub2RlLm5vZGVQYXRoICsgJz4nXHJcblxyXG5cdFx0XHRcdGlmIEBkaXJzXHJcblx0XHRcdFx0XHRmb3Igbm9kZXMgaW4gQGRpcnNcclxuXHRcdFx0XHRcdFx0bm9kZXNMb2FkIG5vZGVzXHJcblxyXG5cclxuZHJhd1R5cGVPYmogPVxyXG5cdGxpbmU6IChnKSAtPlxyXG5cdFx0Zy5tb3ZlVG8gQHgxIHx8IDAsIEB5MSB8fCAwXHJcblx0XHRnLmxpbmVUbyBAeDIgfHwgMCwgQHkyIHx8IDBcclxuXHJcblx0cmVjdDogKGcpIC0+XHJcblx0XHRnLnJlY3QgQHggfHwgMCwgQHkgfHwgMCwgQHdpZHRoIHx8IDEsIEBoZWlnaHQgfHwgMVxyXG5cclxuXHRyZWN0Um91bmQ6IChnKSAtPlxyXG5cdFx0QG5vQ2xvc2UgPSBmYWxzZVxyXG5cdFx0eCA9IEB4IHx8IDBcclxuXHRcdHkgPSBAeSB8fCAwXHJcblx0XHR3ID0gQHdpZHRoXHJcblx0XHRoID0gQGhlaWdodFxyXG5cdFx0ciA9IEByYWRpdXNcclxuXHRcdGlmIHcgPCAyICogciB0aGVuIHIgPSB3IC8gMlxyXG5cdFx0aWYgaCA8IDIgKiByIHRoZW4gciA9IGggLyAyXHJcblxyXG5cdFx0Zy5tb3ZlVG8geCArIHIsIHlcclxuXHRcdGcuYXJjVG8gIHggKyB3LCB5LCAgICAgeCArIHcsIHkgKyBoLCByXHJcblx0XHRnLmFyY1RvICB4ICsgdywgeSArIGgsIHgsICAgICB5ICsgaCwgclxyXG5cdFx0Zy5hcmNUbyAgeCwgICAgIHkgKyBoLCB4LCAgICAgeSwgICAgIHJcclxuXHRcdGcuYXJjVG8gIHgsICAgICB5LCAgICAgeCArIHcsIHksICAgICByXHJcblxyXG5cdGFyYzogKGcpIC0+XHJcblx0XHRnLmFyYyhcclxuXHRcdFx0QHggfHwgMCxcclxuXHRcdFx0QHkgfHwgMCxcclxuXHRcdFx0QHJhZGl1cyxcclxuXHRcdFx0KEBzdGFydEFuZ2xlIHx8IDApICogTWF0aC5QSSAvIDE4MCxcclxuXHRcdFx0KEBlbmRBbmdsZSB8fCAzNjApICogTWF0aC5QSSAvIDE4MCxcclxuXHRcdFx0aWYgQGNsb2Nrd2lzZSB0aGVuIGZhbHNlIGVsc2UgdHJ1ZSlcclxuXHJcblx0ZWxpcHNlOiAoZykgLT5cclxuXHRcdGcuZWxsaXBzZShcclxuXHRcdFx0QHggfHwgMCxcclxuXHRcdFx0QHkgfHwgMCxcclxuXHRcdFx0QHJ4LFxyXG5cdFx0XHRAcnksXHJcblx0XHRcdChAcm90YXRpb24gfHwgMCkgKiBNYXRoLlBJIC8gMTgwLFxyXG5cdFx0XHQoQHN0YXJ0QW5nbGUgfHwgMCkgKiBNYXRoLlBJIC8gMTgwLFxyXG5cdFx0XHQoQGVuZEFuZ2xlIHx8IDM2MCkgKiBNYXRoLlBJIC8gMTgwLFxyXG5cdFx0XHRpZiBAY2xvY2t3aXNlIHRoZW4gZmFsc2UgZWxzZSB0cnVlKVxyXG5cclxuXHRwYXRoOiAoZykgLT5cclxuXHRcdHggPSBAeCB8fCAwXHJcblx0XHR5ID0gQHkgfHwgMFxyXG5cdFx0aWYgdHlwZW9mIEBwYXRoID09ICdzdHJpbmcnXHJcblx0XHRcdEBwYXRoID0gbmV3IFBhdGgyRCBAcGF0aFxyXG5cdFx0I1xyXG5cdFx0QG5vQ2xvc2UgPSB0cnVlXHJcblx0XHRkcmF3ID0gQGRyYXcgfHwgJ2YmcydcclxuXHRcdGlmIGRyYXcgPT0gJ2YnIHx8IGRyYXcgPT0gJ2YmcydcclxuXHRcdFx0Zy5maWxsIEBwYXRoXHJcblx0XHRpZiBkcmF3ID09ICdzJyB8fCBkcmF3ID09ICdmJnMnXHJcblx0XHRcdGcuc3Ryb2tlIEBwYXRoXHJcblxyXG5cdG5vZGU6IChnLCBtb2RlbCwgb3BhY2l0eSkgLT5cclxuXHRcdEBub0Nsb3NlID0gQGRyYXcgPSB0cnVlXHJcblx0XHRub2RlID0gQG5vZGVcclxuXHRcdGlmIHR5cGVvZiBub2RlID09ICdzdHJpbmcnXHJcblx0XHRcdG5vZGUgPSBtb2RlbC5tb2RlbFtub2RlXVxyXG5cdFx0ZWxzZVxyXG5cdFx0XHRyb290ID0gbW9kZWwubW9kZWxcclxuXHRcdFx0Zm9yIHBhdGggaW4gbm9kZVxyXG5cdFx0XHRcdHJvb3QgPSByb290W3BhdGhdXHJcblx0XHRcdG5vZGUgPSByb290XHJcblx0XHRnLnRyYW5zbGF0ZSBAeCB8fCAwLCBAeSB8fCAwXHJcblx0XHRkcmF3Tm9kZS5jYWxsIG5vZGUsIGcsIG1vZGVsLCBvcGFjaXR5XHJcblxyXG5cdGltYWdlOiAoZywgbW9kZWwpIC0+XHJcblx0XHRAbm9DbG9zZSA9IEBkcmF3ID0gdHJ1ZVxyXG5cdFx0aW1hZ2UgPSBtb2RlbC5kYXRhLmltYWdlc1tAaW1hZ2VdXHJcblx0XHRpZiBAd2lkdGggfHwgQGhlaWdodFxyXG5cdFx0XHRnLmRyYXdJbWFnZSBpbWFnZSwgQHggfHwgMCwgQHkgfHwgMCwgQHdpZHRoLCBAaGVpZ2h0XHJcblx0XHRlbHNlXHJcblx0XHRcdGcuZHJhd0ltYWdlIGltYWdlLCBAeCB8fCAwLCBAeSB8fCAwXHJcblxyXG5cdHNwcml0ZTogKGcsIG1vZGVsKSAtPlxyXG5cdFx0QG5vQ2xvc2UgPSBAZHJhdyA9IHRydWVcclxuXHRcdHNwcml0ZSA9IEBzcHJpdGVcclxuXHRcdGlmIHNwcml0ZS5jb25zdHJ1Y3RvciA9PSBTdHJpbmdcclxuXHRcdFx0QHNwcml0ZSA9IHNwcml0ZSA9IG1vZGVsLmRhdGEuc3ByaXRlc1tzcHJpdGVdXHJcblx0XHRzcHJpdGUuZHJhdyBnLCBAZnJhbWUsIEB4IHx8IDAsIEB5IHx8IDAsIEBpbmRleFxyXG5cclxuXHR0ZXh0OiAoZykgLT5cclxuXHRcdGlmIEBkcmF3ICE9IHRydWVcclxuXHRcdFx0QGRyYXdUZXh0ID0gQGRyYXdcclxuXHRcdGRyYXcgPSBAZHJhd1RleHRcclxuXHRcdEBub0Nsb3NlID0gQGRyYXcgPSB0cnVlXHJcblx0XHQjXHJcblx0XHRpZiBAZm9udCB0aGVuIGcuZm9udCA9IEBmb250XHJcblx0XHRpZiBAdGV4dEFsaWduIHRoZW4gZy50ZXh0QWxpZ24gPSBAdGV4dEFsaWduXHJcblx0XHRpZiBAdGV4dEJhc2VsaW5lICE9IG51bGwgdGhlbiBnLnRleHRCYXNlbGluZSA9IEB0ZXh0QmFzZWxpbmVcclxuXHRcdGlmIEBkaXJlY3Rpb24gdGhlbiBnLmRpcmVjdGlvbiA9IEBkaXJlY3Rpb25cclxuXHRcdCNcclxuXHRcdGlmIGRyYXcgPT0gJ2YnIHx8IGRyYXcgPT0gJ2YmcydcclxuXHRcdFx0Zy5maWxsVGV4dCBAdGV4dCwgQHggfHwgMCwgQHkgfHwgMCwgQG1heFdpZHRoXHJcblx0XHRpZiBkcmF3ID09ICdzJyB8fCBkcmF3ID09ICdmJnMnXHJcblx0XHRcdGcuc3Ryb2tlVGV4dCBAdGV4dCwgQHggfHwgMCwgQHkgfHwgMCwgQG1heFdpZHRoXHJcblxyXG5zdHlsZVR5cGVGdW5jID1cclxuXHRsaW5lYXI6IChnKSAtPlxyXG5cdFx0Z3JhZGllbnQgPSBnLmNyZWF0ZUxpbmVhckdyYWRpZW50IEB4MCB8fCAwLCBAeTAgfHwgMCwgQHgxIHx8IDAsIEB5MSB8fCAwXHJcblx0XHRmb3IgY29sb3JTdG9wIGluIEBjb2xvclN0b3BzXHJcblx0XHRcdGdyYWRpZW50LmFkZENvbG9yU3RvcCBjb2xvclN0b3AucG9zIHx8IDAsIGNvbG9yU3RvcC5jb2xvclxyXG5cdFx0Z3JhZGllbnRcclxuXHJcblx0cmFkaWFsOiAoZykgLT5cclxuXHRcdGdyYWRpZW50ID0gZy5jcmVhdGVSYWRpYWxHcmFkaWVudCBAeDAgfHwgMCwgQHkwIHx8IDAsIEByMCB8fCAwLCBAeDEgfHwgMCwgQHkxIHx8IDAsIEByMSB8fCAwXHJcblx0XHRmb3IgY29sb3JTdG9wIGluIEBjb2xvclN0b3BzXHJcblx0XHRcdGdyYWRpZW50LmFkZENvbG9yU3RvcCBjb2xvclN0b3AucG9zIHx8IDAsIGNvbG9yU3RvcC5jb2xvclxyXG5cdFx0Z3JhZGllbnRcclxuXHJcblx0cGF0dGVybjogKGcsIG1vZGVsKSAtPlxyXG5cdFx0aW1hZ2UgPSBtb2RlbC5kYXRhLmltYWdlc1tAaW1hZ2VdXHJcblx0XHRnLmNyZWF0ZVBhdHRlcm4gaW1hZ2UsIEByZXBldGl0aW9uIHx8IFwicmVwZWF0XCJcclxuXHJcbmluaXRTdHlsZSA9IChnLCBtb2RlbCwgc3R5bGUpIC0+XHJcblx0c3R5bGVUeXBlRnVuY1tzdHlsZS50eXBlXT8uY2FsbCBzdHlsZSwgZywgbW9kZWxcclxuXHJcbnNldERyYXdTdHlsZSA9IChnLCBtb2RlbCkgLT5cclxuXHRzdHJva2UgPSBAc3Ryb2tlXHJcblx0aWYgc3Ryb2tlXHJcblx0XHRpZiBzdHJva2UuY29uc3RydWN0b3IgPT0gT2JqZWN0XHJcblx0XHRcdEBzdHJva2UgPSBpbml0U3R5bGUgZywgbW9kZWwsIHN0cm9rZVxyXG5cdFx0Zy5zdHJva2VTdHlsZSA9IEBzdHJva2VcclxuXHRmaWxsID0gQGZpbGxcclxuXHRpZiBmaWxsXHJcblx0XHRpZiBmaWxsLmNvbnN0cnVjdG9yID09IE9iamVjdFxyXG5cdFx0XHRAZmlsbCA9IGluaXRTdHlsZSBnLCBtb2RlbCwgZmlsbFxyXG5cdFx0Zy5maWxsU3R5bGUgPSBAZmlsbFxyXG5cdGlmIEBsaW5lV2lkdGggIT0gbnVsbCB0aGVuIGcubGluZVdpZHRoID0gQGxpbmVXaWR0aFxyXG5cdGlmIEBsaW5lQ2FwICE9IG51bGwgdGhlbiBnLmxpbmVDYXAgPSBAbGluZUNhcFxyXG5cdGlmIEBsaW5lSm9pbiB0aGVuIGcubGluZUpvaW4gPSBAbGluZUpvaW5cclxuXHRpZiBAbGluZURhc2hPZmZzZXQgIT0gbnVsbCB0aGVuIGcubGluZURhc2hPZmZzZXQgPSBAbGluZURhc2hPZmZzZXRcclxuXHJcbmRyYXdOb2RlID0gKGcsIG1vZGVsLCBvcGFjaXR5KSAtPlxyXG5cdGcuc2F2ZSgpXHJcblx0bW9kZWwuYW5pbWF0aW9uLmFuaW1hdGUgdGhpc1xyXG5cdGcudHJhbnNmb3JtIEBzY2FsZVggfHwgMSwgQHNrZXdZIHx8IDAsIEBza2V3WCB8fCAwLCBAc2NhbGVZIHx8IDEsIEBvcmlnWCB8fCAwLCBAb3JpZ1kgfHwgMFxyXG5cdG1Bc2NhbGUgPSBAbW9kZWxBbmdsZVNjYWxlXHJcblx0aWYgbUFzY2FsZSB0aGVuIGcucm90YXRlIChtb2RlbC5hbmdsZSAqIG1Bc2NhbGUpICogTWF0aC5QSSAvIDE4MFxyXG5cdGlmIEBhbmdsZSB0aGVuIGcucm90YXRlIEBhbmdsZSAqIE1hdGguUEkgLyAxODBcclxuXHRzZXREcmF3U3R5bGUuY2FsbCB0aGlzLCBnLCBtb2RlbFxyXG5cdCMgU2hhZG93c1xyXG5cdGlmIEBub1NoYWRvd1xyXG5cdFx0Zy5zaGFkb3dCbHVyID0gMFxyXG5cdFx0Zy5zaGFkb3dPZmZzZXRYID0gMFxyXG5cdFx0Zy5zaGFkb3dPZmZzZXRZID0gMFxyXG5cdGlmIEBzaGFkb3dCbHVyICE9IG51bGwgdGhlbiBnLnNoYWRvd0JsdXIgPSBAc2hhZG93Qmx1clxyXG5cdGlmIEBzaGFkb3dDb2xvciAhPSBudWxsIHRoZW4gZy5zaGFkb3dDb2xvciA9IEBzaGFkb3dDb2xvclxyXG5cdGlmIEBzaGFkb3dPZmZzZXRYICE9IG51bGwgdGhlbiBnLnNoYWRvd09mZnNldFggPSBAc2hhZG93T2Zmc2V0WFxyXG5cdGlmIEBzaGFkb3dPZmZzZXRZICE9IG51bGwgdGhlbiBnLnNoYWRvd09mZnNldFkgPSBAc2hhZG93T2Zmc2V0WVxyXG5cdGcuZ2xvYmFsQWxwaGEgPSBvcGFjaXR5ICogKEBvcGFjaXR5IHx8IDEpXHJcblxyXG5cdGlmIEBiZWZvcmVcclxuXHRcdG1vZGVsLmFuaW1hdGlvbi5yZWNpdmVQcm9wcyB0aGlzXHJcblx0XHQjXHJcblx0XHRmb3Iga2V5LCBub2RlIG9mIEBiZWZvcmVcclxuXHRcdFx0aWYgIW5vZGUuaGlkZVxyXG5cdFx0XHRcdGRyYXdOb2RlLmNhbGwgbm9kZSwgZywgbW9kZWwsIG9wYWNpdHlcclxuXHRcdCNcclxuXHRcdG1vZGVsLmFuaW1hdGlvbi5hbmltYXRlIHRoaXNcclxuXHJcblx0Zy5iZWdpblBhdGgoKVxyXG5cdGRyYXdUeXBlT2JqW0B0eXBlXT8uY2FsbCB0aGlzLCBnLCBtb2RlbCwgb3BhY2l0eVxyXG5cdGlmICFAbm9DbG9zZSB0aGVuIGcuY2xvc2VQYXRoKClcclxuXHJcblx0ZHJhdyA9IEBkcmF3IHx8ICdmJnMnXHJcblx0aWYgZHJhdyA9PSAnZicgfHwgZHJhdyA9PSAnZiZzJ1xyXG5cdFx0Zy5maWxsKClcclxuXHRpZiBkcmF3ID09ICdzJyB8fCBkcmF3ID09ICdmJnMnXHJcblx0XHRnLnN0cm9rZSgpXHJcblxyXG5cdG1vZGVsLmFuaW1hdGlvbi5yZWNpdmVQcm9wcyB0aGlzXHJcblxyXG5cdGlmIEBhZnRlclxyXG5cdFx0Zm9yIGtleSwgbm9kZSBvZiBAYWZ0ZXJcclxuXHRcdFx0aWYgIW5vZGUuaGlkZVxyXG5cdFx0XHRcdGRyYXdOb2RlLmNhbGwgbm9kZSwgZywgbW9kZWwsIG9wYWNpdHlcclxuXHJcblx0aWYgTW9kZWwuZHJhd09yaWdpblxyXG5cdFx0Zy5maWxsU3R5bGUgPSAnI2YwMCdcclxuXHRcdGcuc2hhZG93Qmx1ciA9IDBcclxuXHRcdGcuc2hhZG93T2Zmc2V0WCA9IDBcclxuXHRcdGcuc2hhZG93T2Zmc2V0WSA9IDBcclxuXHRcdGcuZmlsbFJlY3QgLTIsIC0yLCA0LCA0XHJcblxyXG5cdGcucmVzdG9yZSgpXHJcblxyXG5cclxuZHJhd1BhcnRUeXBlID1cclxuXHRwb2x5OiAoZywgdmVydHMsIGNhbWVyYSwgbW9kZWwpIC0+XHJcblx0XHR2ID0gdmVydHNbQHZlcnRzWzBdXVxyXG5cdFx0eGMgPSBjYW1lcmEueFxyXG5cdFx0eWMgPSBjYW1lcmEueVxyXG5cdFx0enQgPSBaX09SSUdJTiArIGNhbWVyYS56XHJcblx0XHR6ID0gKCh2LnogfHwgMCkgKyB6dCkgKiBaX1RSQU5TRk9STVxyXG5cdFx0eCA9ICgodi54IHx8IDApICsgeGMpICogelxyXG5cdFx0eSA9ICgodi55IHx8IDApICsgeWMpICogelxyXG5cdFx0Zy5tb3ZlVG8geCwgeVxyXG5cdFx0bCA9IEB2ZXJ0cy5sZW5ndGggLSAxXHJcblx0XHRmb3IgaSBpbiBbMS4ubF1cclxuXHRcdFx0diA9IHZlcnRzW0B2ZXJ0c1tpXV07XHJcblx0XHRcdHogPSAoKHYueiB8fCAwKSArIHp0KSAqIFpfVFJBTlNGT1JNXHJcblx0XHRcdHggPSAoKHYueCB8fCAwKSArIHhjKSAqIHpcclxuXHRcdFx0eSA9ICgodi55IHx8IDApICsgeWMpICogelxyXG5cdFx0XHRnLmxpbmVUbyB4LCB5XHJcblx0XHRudWxsXHJcblxyXG5cdHBhcnQ6IChnLCB2ZXJ0cywgY2FtZXJhLCBtb2RlbCwgb3BhY2l0eSkgLT5cclxuXHRcdEBub0Nsb3NlID0gQGRyYXcgPSB0cnVlXHJcblx0XHR2ID0gdmVydHNbQHZlcnRdXHJcblx0XHRjID1cclxuXHRcdFx0eDogY2FtZXJhLnggKyAodi54IHx8IDApXHJcblx0XHRcdHk6IGNhbWVyYS55ICsgKHYueSB8fCAwKVxyXG5cdFx0XHR6OiBjYW1lcmEueiArICh2LnogfHwgMClcclxuXHJcblx0XHRmYWNlcyA9IG1vZGVsLnBhcnRzW0BwYXJ0XS5mYWNlc1xyXG5cdFx0Zm9yIGZhY2UgaW4gZmFjZXNcclxuXHRcdFx0ZHJhd1BhcnQuY2FsbCBmYWNlLCBnLCBtb2RlbCwgYywgb3BhY2l0eVxyXG5cclxuXHRub2RlOiAoZywgdmVydHMsIGNhbWVyYSwgbW9kZWwsIG9wYWNpdHkpIC0+XHJcblx0XHRAbm9DbG9zZSA9IEBkcmF3ID0gdHJ1ZVxyXG5cdFx0dHJhbnNmb3JtVmVydCB2ZXJ0c1tAdmVydF0sIGNhbWVyYVxyXG5cdFx0XHQuYXBwbHkgZ1xyXG5cdFx0bSA9IG1vZGVsLm1vZGVsXHJcblx0XHRpZiBAZGlyIHRoZW4gbSA9IG1vZGVsLmRhdGEuZGlyc1tAZGlyXVxyXG5cdFx0I1xyXG5cdFx0bm9kZSA9IEBub2RlXHJcblx0XHRpZiBub2RlLmNvbnN0cnVjdG9yID09IFN0cmluZ1xyXG5cdFx0XHRub2RlID0gbVtub2RlXVxyXG5cdFx0ZWxzZVxyXG5cdFx0XHRyb290ID0gbVxyXG5cdFx0XHRmb3IgcGF0aCBpbiBub2RlXHJcblx0XHRcdFx0cm9vdCA9IHJvb3RbcGF0aF1cclxuXHRcdFx0bm9kZSA9IHJvb3RcclxuXHRcdGRyYXdOb2RlLmNhbGwgbm9kZSwgZywgbW9kZWwsIG9wYWNpdHlcclxuXHJcblx0ZWxpcHNlOiAoZywgdmVydHMsIGNhbWVyYSkgLT5cclxuXHRcdHYgPSB0cmFuc2Zvcm1WZXJ0IHZlcnRzW0B2ZXJ0MV0sIGNhbWVyYVxyXG5cdFx0eDEgPSB2LnhcclxuXHRcdHkxID0gdi55XHJcblx0XHR2ID0gdHJhbnNmb3JtVmVydCB2ZXJ0c1tAdmVydDJdLCBjYW1lcmFcclxuXHRcdHgyID0gdi54XHJcblx0XHR5MiA9IHYueVxyXG5cdFx0cnggPSAoeDIgLSB4MSkgLyAyXHJcblx0XHRyeSA9ICh5MiAtIHkxKSAvIDJcclxuXHRcdGcuZWxsaXBzZShcclxuXHRcdFx0eDEgKyByeCxcclxuXHRcdFx0eTEgKyByeSxcclxuXHRcdFx0cngsXHJcblx0XHRcdHJ5LFxyXG5cdFx0XHQoQHJvdGF0aW9uIHx8IDApICogTWF0aC5QSSAvIDE4MCxcclxuXHRcdFx0KEBzdGFydEFuZ2xlIHx8IDApICogTWF0aC5QSSAvIDE4MCxcclxuXHRcdFx0KEBlbmRBbmdsZSB8fCAzNjApICogTWF0aC5QSSAvIDE4MCxcclxuXHRcdFx0aWYgQGNsb2Nrd2lzZSB0aGVuIGZhbHNlIGVsc2UgdHJ1ZSlcclxuXHJcblxyXG5kcmF3UGFydCA9IChnLCBtb2RlbCwgY2FtZXJhLCBvcGFjaXR5KSAtPlxyXG5cdGcuc2F2ZSgpXHJcblx0c3Ryb2tlID0gQHN0cm9rZVxyXG5cdHNldERyYXdTdHlsZS5jYWxsIHRoaXMsIGcsIG1vZGVsXHJcblx0Zy5nbG9iYWxBbHBoYSA9IG9wYWNpdHkgKiAoQG9wYWNpdHkgfHwgMSlcclxuXHJcblx0Zy5iZWdpblBhdGgoKVxyXG5cdGRyYXdQYXJ0VHlwZVtAdHlwZSB8fCAncG9seSddPy5jYWxsIHRoaXMsIGcsIG1vZGVsLmRhdGEudmVydHMsIGNhbWVyYSwgbW9kZWwsIG9wYWNpdHlcclxuXHRpZiAhQG5vQ2xvc2UgdGhlbiBnLmNsb3NlUGF0aCgpXHJcblxyXG5cdGRyYXcgPSBAZHJhdyB8fCAnZiZzJ1xyXG5cdGlmIGRyYXcgPT0gJ2YnIHx8IGRyYXcgPT0gJ2YmcydcclxuXHRcdGcuZmlsbCgpXHJcblx0aWYgZHJhdyA9PSAncycgfHwgZHJhdyA9PSAnZiZzJ1xyXG5cdFx0Zy5zdHJva2UoKVxyXG5cclxuXHRnLnJlc3RvcmUoKVxyXG5cclxuWl9UUkFOU0ZPUk0gPSAwLjAwMDVcclxuWl9PUklHSU4gPSAxIC8gWl9UUkFOU0ZPUk1cclxuXHJcbnRyc2ZPYmogPVxyXG5cdHg6IDBcclxuXHR5OiAwXHJcblx0c2NhbGU6IDFcclxuXHRhcHBseTogKGcpIC0+XHJcblx0XHRnLnRyYW5zZm9ybSBAc2NhbGUsIDAsIDAsIEBzY2FsZSwgQHgsIEB5XHJcblxyXG5cclxuXHJcbmNsYXNzIE1vZGVsXHJcblx0QHRyYW5zZm9ybTogKHgsIHksIHosIGNhbWVyYSkgLT5cclxuXHRcdHogPSAoWl9PUklHSU4gKyB6ICsgY2FtZXJhLnopICogWl9UUkFOU0ZPUk1cclxuXHRcdHRyc2ZPYmoueCA9ICh4ICsgY2FtZXJhLngpICogelxyXG5cdFx0dHJzZk9iai55ID0gKHkgKyBjYW1lcmEueSkgKiB6XHJcblx0XHR0cnNmT2JqLnNjYWxlID0gelxyXG5cdFx0dHJzZk9ialxyXG5cclxuXHRhbmltYXRpb246IG5ldyBBbmltYXRpb25cclxuXHRhbmdsZTogMFxyXG5cclxuXHRjb25zdHJ1Y3RvcjogKEBkYXRhKSAtPlxyXG5cclxuXHRzZXREYXRhOiAoQGRhdGEpIC0+XHJcblx0XHRAc2V0QW5nbGUgQGFuZ2xlXHJcblxyXG5cdHNldEFuZ2xlOiAoYW5nbGUpIC0+XHJcblx0XHRAYW5nbGUgPSBhbmdsZSA9IGFuZ2xlICUgMzYwXHJcblx0XHRAYW5pbWF0aW9uLnNldEFuZ2xlIGFuZ2xlXHJcblx0XHRkaXJzID0gQGRhdGEuZGlyc1xyXG5cdFx0aWYgZGlyc1xyXG5cdFx0XHRuID0gZGlycy5sZW5naHRcclxuXHRcdFx0aWYgbiA+IDFcclxuXHRcdFx0XHRkQW5nbGUgPSAzNjAgLyBuXHJcblx0XHRcdFx0YW5nbGUgKz0gZEFuZ2xlID4+IDFcclxuXHRcdFx0XHRpZiBhbmdsZSA8IDAgdGhlbiBhbmdsZSArPSAzNjBcclxuXHRcdFx0XHRAbW9kZWwgPSBkaXJzW01hdGguZmxvb3IoYW5nbGUgLyBkQW5nbGUpXVxyXG5cdFx0XHRlbHNlXHJcblx0XHRcdFx0QG1vZGVsID0gZGlyc1swXVxyXG5cdFx0ZWxzZVxyXG5cdFx0XHRAbW9kZWwgPSBudWxsXHJcblxyXG5cdFx0cGFydHMgPSBAZGF0YS5kaXJzUGFydHNcclxuXHRcdGlmIHBhcnRzXHJcblx0XHRcdG4gPSBwYXJ0cy5sZW5naHRcclxuXHRcdFx0aWYgbiA+IDFcclxuXHRcdFx0XHRkQW5nbGUgPSAzNjAgLyBuXHJcblx0XHRcdFx0YW5nbGUgKz0gZEFuZ2xlID4+IDFcclxuXHRcdFx0XHRpZiBhbmdsZSA8IDAgdGhlbiBhbmdsZSArPSAzNjBcclxuXHRcdFx0XHRAcGFydHMgPSBwYXJ0c1tNYXRoLmZsb29yKGFuZ2xlIC8gZEFuZ2xlKV1cclxuXHRcdFx0ZWxzZVxyXG5cdFx0XHRcdEBwYXJ0cyA9IHBhcnRzWzBdXHJcblx0XHRlbHNlXHJcblx0XHRcdEBwYXJ0cyA9IG51bGxcclxuXHJcblx0ZHJhdzJEOiAoZywgb3BhY2l0eSA9IDEpIC0+XHJcblx0XHRpZiBAbW9kZWxcclxuXHRcdFx0Zm9yIGtleSwgbm9kZSBvZiBAbW9kZWxcclxuXHRcdFx0XHRpZiAhbm9kZS5oaWRlXHJcblx0XHRcdFx0XHRkcmF3Tm9kZS5jYWxsIG5vZGUsIGcsIHRoaXMsIG9wYWNpdHlcclxuXHJcblx0ZHJhd1BhcnRzOiAoZywgY2FtZXJhLCBvcGFjaXR5ID0gMSkgLT5cclxuXHRcdGlmIEBwYXJ0c1xyXG5cdFx0XHRmb3IgXywgcGFydCBvZiBAcGFydHNcclxuXHRcdFx0XHRpZiAhcGFydC5oaWRlXHJcblx0XHRcdFx0XHRmb3IgZmFjZSBpbiBwYXJ0LmZhY2VzXHJcblx0XHRcdFx0XHRcdGRyYXdQYXJ0LmNhbGwgZmFjZSwgZywgdGhpcywgY2FtZXJhLCBvcGFjaXR5XHJcblxyXG50cmFuc2Zvcm0gPSBNb2RlbC50cmFuc2Zvcm1cclxuXHJcbnRyYW5zZm9ybVZlcnQgPSAodiwgY2FtZXJhKSAtPlxyXG5cdHRyYW5zZm9ybSB2LnggfHwgMCwgdi55IHx8IDAsIHYueiB8fCAwLCBjYW1lcmFcclxuXHJcbmV4cG9ydCB7IE1vZGVsRGF0YSwgTW9kZWwgfSIsImNsYXNzIEV2ZW50RW1taXRlclxyXG5cdGhhbmRsZXJzOiBbXVxyXG5cclxuXHRvbjogKGV2ZW50LCBjYWxsYmFjaykgLT5cclxuXHRcdGlmIGNhbGxiYWNrXHJcblx0XHRcdGhhbmRsZXIgPSBAaGFuZGxlcnNbZXZlbnRdXHJcblx0XHRcdGlmICFoYW5kbGVyXHJcblx0XHRcdFx0QGhhbmRsZXJzW2V2ZW50XSA9IGhhbmRsZXIgPSBbXVxyXG5cdFx0XHRpZiBoYW5kbGVyLmluZGV4T2YoY2FsbGJhY2spIDwgMFxyXG5cdFx0XHRcdGhhbmRsZXIucHVzaCBjYWxsYmFja1xyXG5cdFx0dGhpc1xyXG5cclxuXHRvZmY6IChldmVudCwgY2FsbGJhY2spIC0+XHJcblx0XHRpZiBjYWxsYmFja1xyXG5cdFx0XHRoYW5kbGVyID0gQGhhbmRsZXJzW2V2ZW50XVxyXG5cdFx0XHRpZiBoYW5kbGVyXHJcblx0XHRcdFx0aW5kZXggPSBoYW5kbGVyLmluZGV4T2YgY2FsbGJhY2tcclxuXHRcdFx0XHRpZiBpbmRleCA+PSAwXHJcblx0XHRcdFx0XHRoYW5kbGVyLnNwbGljZSBpbmRleCwgMVxyXG5cdFx0dGhpc1xyXG5cclxuXHR0cmlnZ2VyOiAoZXZlbnQsIGFyZ3MpIC0+XHJcblx0XHRoYW5kbGVyID0gQGhhbmRsZXJzW2V2ZW50XVxyXG5cdFx0aWYgaGFuZGxlclxyXG5cdFx0XHRmb3IgY2FsbGJhY2sgaW4gaGFuZGxlclxyXG5cdFx0XHRcdGNhbGxiYWNrLmFwcGx5IHRoaXMsIGFyZ3NcclxuXHRcdHRoaXNcclxuXHJcblx0cmVtb3ZlRXZlbnQ6IChldmVudCkgLT5cclxuXHRcdGRlbGV0ZSBAaGFuZGxlcnNbZXZlbnRdXHJcblx0XHR0aGlzXHJcblxyXG5leHBvcnQgeyBFdmVudEVtbWl0ZXIgfSIsImltcG9ydCB7IEV2ZW50RW1taXRlciB9IGZyb20gJy4vZXZlbnRzJ1xyXG5cclxuIyBFdmVudHM6XHJcbiMgJ2NoYW5nZXBlcmNlbnQnIHRyaWdnZXIgd2hlbiBzb21lIHJlc29yY2VzIGxvYWRlZFxyXG4jICdsb2FkJyB0cmlnZ2VyIHdoZW4gYWxsIHJlc29yY2VzIGxvYWRlZFxyXG5cclxuY2xhc3MgTG9hZGVyIGV4dGVuZHMgRXZlbnRFbW1pdGVyXHJcblx0bG9hZFJlc051bWJlciA9IDBcclxuXHRhbGxSZXNMb2FkZXIgPSAwXHJcblxyXG5cdHJlc2V0OiAoKSAtPlxyXG5cdFx0bG9hZFJlc051bWJlciA9IGFsbFJlc0xvYWRlciA9IDBcclxuXHJcblx0Z2V0UGVyY2VudDogLT5cclxuXHRcdDEgLSBpZiBhbGxSZXNMb2FkZXIgIT0gMCB0aGVuIGxvYWRSZXNOdW1iZXIgLyBhbGxSZXNMb2FkZXIgZWxzZSAwXHJcblxyXG5cdHVwZGF0ZVBlcmNlbnQ6ICgpIC0+XHJcblx0XHRAdHJpZ2dlciAnY2hhbmdlcGVyY2VudCcsIFsgQGdldFBlcmNlbnQoKSBdXHJcblxyXG5cdGxvYWQ6IChjYWxsYmFjaykgLT5cclxuXHRcdF90aGlzID0gdGhpc1xyXG5cdFx0bG9hZFJlc051bWJlcisrXHJcblx0XHRhbGxSZXNMb2FkZXIrK1xyXG5cdFx0IyBAdXBkYXRlUGVyY2VudCgpXHJcblx0XHQtPlxyXG5cdFx0XHRjYWxsYmFjaz8uYXBwbHkgX3RoaXMsIGFyZ3VtZW50c1xyXG5cdFx0XHRsb2FkUmVzTnVtYmVyLS1cclxuXHRcdFx0aWYgbG9hZFJlc051bWJlciA8PSAwXHJcblx0XHRcdFx0X3RoaXMucmVzZXQoKVxyXG5cdFx0XHRcdF90aGlzLnRyaWdnZXIgJ2xvYWQnXHJcblx0XHRcdF90aGlzLnVwZGF0ZVBlcmNlbnQoKVxyXG5cclxuXHRsb2FkSnNvbjogKGZpbGUsIGNhbGxiYWNrKSAtPlxyXG5cdFx0Y2FsbGJhY2sgPSBAbG9hZCBjYWxsYmFja1xyXG5cdFx0JC5nZXRKU09OIGZpbGUgKyAnLmpzb24nXHJcblx0XHRcdC5kb25lIGNhbGxiYWNrXHJcblx0XHRcdC5mYWlsIC0+XHJcblx0XHRcdFx0Y2FsbGJhY2sgbnVsbFxyXG5cclxuXHRsb2FkSW1hZ2U6IChmaWxlLCBjYWxsYmFjaykgLT5cclxuXHRcdGNhbGxiYWNrID0gQGxvYWQgY2FsbGJhY2tcclxuXHRcdGltZyA9IG5ldyBJbWFnZVxyXG5cdFx0aW1nLm9ubG9hZCA9IC0+XHJcblx0XHRcdGNhbGxiYWNrIGltZ1xyXG5cdFx0aW1nLnNyYyA9IGZpbGVcclxuXHRcdGltZ1xyXG5cclxuZXhwb3J0IHsgTG9hZGVyIH0iLCJpbXBvcnQgeyBNb2RlbERhdGEsIE1vZGVsIH0gZnJvbSAnLi9tb2RlbCdcbmltcG9ydCB7IEFuaW1hdGlvbkRhdGEgfSBmcm9tICcuL2FuaW1hdGlvbidcbmltcG9ydCB7IExvYWRlciB9IGZyb20gJy4vbG9hZGVyJ1xuXG4kKGRvY3VtZW50KS5yZWFkeSAtPlxuXHQkY2FudmFzID0gJCAnI2NhbnZhcydcblx0Y2FudmFzID0gJGNhbnZhcy5nZXQgMFxuXHRjb250ZXh0ID0gY2FudmFzLmdldENvbnRleHQgJzJkJywgYWxwaGE6IGZhbHNlXG5cblx0JCh3aW5kb3cpLm9uICdyZXNpemUnLCByZXNpemVcblxuXHRtb2RlbEZpbGUgPSAnbW9kZWxzL3Rlc3QxJ1xuXHRsb2FkZXIgPSBuZXcgTG9hZGVyXG5cdG1vZGVsID0gbmV3IE1vZGVsXG5cdG1vZGVsRGF0YSA9IG5ldyBNb2RlbERhdGFcblx0Y2FtZXJhID1cblx0XHRjYW52YXM6IGNhbnZhc1xuXHRcdGc6IGNvbnRleHRcblx0XHR4OiAwXG5cdFx0eTogMFxuXHRcdHo6IDBcblxuXHRyZXNpemUgPSAtPlxuXHRcdGNhbnZhcy53aWR0aCA9ICQod2luZG93KS53aWR0aCgpXG5cdFx0Y2FudmFzLmhlaWdodCA9ICQod2luZG93KS5oZWlnaHQoKSAtICQoJyNjYW52YXMnKS5vZmZzZXQoKS50b3BcblxuXHRyZXNpemUoKVxuXG5cdG1vZGVsUmVmcmVzaCA9IC0+XG4jXHRcdGZvciBrZXksIF8gb2YgbW9kZWxEYXRhXG4jXHRcdFx0ZGVsZXRlIG1vZGVsRGF0YVtrZXldXG5cdFx0bW9kZWxEYXRhLmxvYWQgbG9hZGVyLCBtb2RlbEZpbGVcblx0XG5cdGxvYWRlci5vbiAnbG9hZCcsIC0+XG5cdFx0bW9kZWwuc2V0RGF0YSBtb2RlbERhdGFcblx0XHRpZiBtb2RlbC5hbmltYXRpb24uZGF0YVxuXHRcdFx0IyBtb2RlbC5hbmltYXRpb24uc2V0QW5pbSAndGVzdCcsIDBcblx0XHRcdCNcblx0XHRcdGNvbnRhaW5lciA9ICQgJy5qcy1mcmFtZS1jb250YWluZXInXG5cdFx0XHRjb250YWluZXIuZW1wdHkoKVxuXHRcdFx0Zm9yIGFuaW0sIF8gb2YgbW9kZWwuYW5pbWF0aW9uLmRhdGFcblx0XHRcdFx0Y29udGFpbmVyLmFwcGVuZCBcIjxhIGNsYXNzPSdkcm9wZG93bi1pdGVtIGpzLWZyYW1lLXNlbGVjdCcgaHJlZj0nIyc+I3thbmltfTwvYT5cIlxuXHRcdFx0JCgnLmpzLWZyYW1lLXNlbGVjdCcpLmNsaWNrIC0+XG5cdFx0XHRcdG1vZGVsLmFuaW1hdGlvbi5zZXRBbmltICQodGhpcykudGV4dCgpLCBtb2RlbC5hbmdsZVxuXG5cdGNvbnNvbGUubG9nIG1vZGVsXG5cblx0bVJlZnJlc2hJbnRlcnZhbCA9IHNldEludGVydmFsIG1vZGVsUmVmcmVzaCwgNTAwXG5cblx0cmVuZGVyID0gKGRlbHRhKSAtPlxuXHRcdGNvbnRleHQuc2F2ZSgpXG5cdFx0dyA9IGNhbnZhcy53aWR0aFxuXHRcdGggPSBjYW52YXMuaGVpZ2h0XG5cdFx0Y3ggPSB3IC8gMlxuXHRcdGN5ID0gMFxuXHRcdGNvbnRleHQuZmlsbFN0eWxlID0gJyNmZmYnXG5cdFx0Y29udGV4dC5maWxsUmVjdCAwLCAwLCB3LCBoXG5cdFx0Y29udGV4dC5iZWdpblBhdGgoKVxuXHRcdGNvbnRleHQubGluZVdpZHRoID0gMlxuXHRcdGNvbnRleHQuc3Ryb2tlU3R5bGUgPSAnI2YwMCdcblx0XHRjb250ZXh0Lm1vdmVUbyBjeCwgMFxuXHRcdGNvbnRleHQubGluZVRvIGN4LCBoXG5cdFx0Y29udGV4dC5tb3ZlVG8gMCwgY3lcblx0XHRjb250ZXh0LmxpbmVUbyB3LCBjeVxuXHRcdGNvbnRleHQuc3Ryb2tlKClcblxuXHRcdGNvbnRleHQudHJhbnNsYXRlIGN4LCBjeVxuXG5cdFx0bW9kZWwuYW5pbWF0aW9uLnBsYXkoKVxuXG5cdFx0bW9kZWwuZHJhd1BhcnRzIGNvbnRleHQsIGNhbWVyYVxuXG5cdFx0TW9kZWwudHJhbnNmb3JtKDAsIDAsIDAsIGNhbWVyYSlcblx0XHRcdC5hcHBseSBjb250ZXh0XG5cblx0XHRtb2RlbC5kcmF3MkQgY29udGV4dFxuXG5cdFx0Y29udGV4dC5yZXN0b3JlKClcblx0XHQjIFxuXHRcdHdpbmRvdy5yZXF1ZXN0QW5pbWF0aW9uRnJhbWUgcmVuZGVyXG5cblx0cmVuZGVyKDApXG5cblx0b2xkTW91c2VYID0gb2xkTW91c2VZID0wXG5cdG1vdmVDYW1lcmEgPSAoZSkgLT5cblx0XHRjYW1lcmEueCArPSBlLmNsaWVudFggLSBvbGRNb3VzZVhcblx0XHRjYW1lcmEueSArPSBlLmNsaWVudFkgLSBvbGRNb3VzZVlcblx0XHRvbGRNb3VzZVggPSBlLmNsaWVudFhcblx0XHRvbGRNb3VzZVkgPSBlLmNsaWVudFlcblxuXHQkY2FudmFzLm9uICdtb3VzZWRvd24nLCAoZSkgLT5cblx0XHRvbGRNb3VzZVggPSBlLmNsaWVudFhcblx0XHRvbGRNb3VzZVkgPSBlLmNsaWVudFlcblx0XHQkY2FudmFzLm9uICdtb3VzZW1vdmUnLCBtb3ZlQ2FtZXJhXG5cblx0JGNhbnZhcy5vbiAndG91Y2hzdGFydCcsIChlKSAtPlxuXHRcdG9sZE1vdXNlWCA9IGUudG91Y2hlc1swXS5jbGllbnRYXG5cdFx0b2xkTW91c2VZID0gZS50b3VjaGVzWzBdLmNsaWVudFlcblxuXHQkY2FudmFzLm9uICd0b3VjaG1vdmUnLCAoZSkgLT5cblx0XHRtb3ZlQ2FtZXJhIGUudG91Y2hlc1swXVxuXG5cdCRjYW52YXMub24gJ21vdXNldXAnLCAtPlxuXHRcdCRjYW52YXMub2ZmICdtb3VzZW1vdmUnLCBtb3ZlQ2FtZXJhXG5cblx0JCgnLmpzLXotbnVtYmVyJylcblx0XHQudmFsIGNhbWVyYS56XG5cdFx0Lm9uICdpbnB1dCBjaGFuZ2UnLCAtPlxuXHRcdFx0Y2FtZXJhLnogPSArICQodGhpcykudmFsKClcblxuXHQkKCcuanMtYW5nbGUtbnVtYmVyJylcblx0XHQudmFsIG1vZGVsLmFuZ2xlXG5cdFx0Lm9uICdpbnB1dCBjaGFuZ2UnLCAtPlxuXHRcdFx0bW9kZWwuc2V0QW5nbGUgKyAkKHRoaXMpLnZhbCgpXG5cblx0JCgnLmpzLW1vZGVsLXNlbGVjdCcpLmNsaWNrIC0+XG5cdFx0bW9kZWxEYXRhID0gbmV3IE1vZGVsRGF0YVxuXHRcdG1vZGVsRmlsZSA9ICQodGhpcykuZGF0YSAnZmlsZSdcblxuXHQkKCcuanMtYW5pbS1zZWxlY3QnKS5jbGljayAtPlxuXHRcdGZpbGUgPSAkKHRoaXMpLmRhdGEgJ2ZpbGUnXG5cdFx0bW9kZWwuYW5pbWF0aW9uLmRhdGEgPSBuZXcgQW5pbWF0aW9uRGF0YVxuXHRcdG1vZGVsLmFuaW1hdGlvbi5kYXRhLmxvYWQgbG9hZGVyLCBmaWxlXG5cdFx0JCgnLmpzLWFuaW0tcmVmcmVzaCcpLmRhdGEgJ2ZpbGUnLCBmaWxlXG5cdFx0I1xuXHRcdCQoJy5qcy1yZWZyZXNoLW1vZGVsJykucHJvcCAnY2hlY2tlZCcsIGZhbHNlXG5cdFx0Y2xlYXJJbnRlcnZhbCBtUmVmcmVzaEludGVydmFsXG5cblx0TW9kZWwuZHJhd09yaWdpbiA9IHRydWVcblx0JCgnLmpzLWRyYXctb3JpZ2luJykuY2hhbmdlIC0+XG5cdFx0TW9kZWwuZHJhd09yaWdpbiA9ICQodGhpcykucHJvcCAnY2hlY2tlZCdcblxuXHQkKCcuanMtcmVmcmVzaC1tb2RlbCcpLmNoYW5nZSAtPlxuXHRcdGlmICQodGhpcykucHJvcCAnY2hlY2tlZCdcblx0XHRcdG1SZWZyZXNoSW50ZXJ2YWwgPSBzZXRJbnRlcnZhbCBtb2RlbFJlZnJlc2gsIDUwMFxuXHRcdGVsc2Vcblx0XHRcdGNsZWFySW50ZXJ2YWwgbVJlZnJlc2hJbnRlcnZhbFxuXG5cdCQoJy5qcy1yZXNldC1wb3MnKS5jbGljayAtPlxuXHRcdGNhbWVyYS54ID0gY2FtZXJhLnkgPSBjYW1lcmEueiA9IDBcblx0XHQkKCcuanMtei1udW1iZXInKS52YWwgJzAnXG5cblx0ZnVsbHNjcmVlbiA9IGZhbHNlXG5cdCQoJy5qcy1mdWxsLXNjcmVlbicpLmNsaWNrIC0+XG5cdFx0aWYgZnVsbHNjcmVlblxuXHRcdFx0Y2FuY2VsRnVsbHNjcmVlbigpXG5cdFx0ZWxzZVxuXHRcdFx0bGF1bmNoRnVsbFNjcmVlbiBkb2N1bWVudC5kb2N1bWVudEVsZW1lbnRcblx0XHRmdWxsc2NyZWVuID0gIWZ1bGxzY3JlZW5cblxuXHRsYXVuY2hGdWxsU2NyZWVuID0gKGVsZW1lbnQpIC0+XG5cdFx0aWYgZWxlbWVudC5yZXF1ZXN0RnVsbFNjcmVlblxuXHRcdFx0ZWxlbWVudC5yZXF1ZXN0RnVsbFNjcmVlbigpXG5cdFx0ZWxzZSBpZiBlbGVtZW50Lm1velJlcXVlc3RGdWxsU2NyZWVuXG5cdFx0XHRlbGVtZW50Lm1velJlcXVlc3RGdWxsU2NyZWVuKClcblx0XHRlbHNlIGlmIGVsZW1lbnQud2Via2l0UmVxdWVzdEZ1bGxTY3JlZW5cblx0XHRcdGVsZW1lbnQud2Via2l0UmVxdWVzdEZ1bGxTY3JlZW4oKVxuXG5cdGNhbmNlbEZ1bGxzY3JlZW4gPSAtPlxuXHRcdGlmIGRvY3VtZW50LmNhbmNlbEZ1bGxTY3JlZW5cblx0XHRcdGRvY3VtZW50LmNhbmNlbEZ1bGxTY3JlZW4oKVxuXHRcdGVsc2UgaWYgZG9jdW1lbnQubW96Q2FuY2VsRnVsbFNjcmVlblxuXHRcdFx0ZG9jdW1lbnQubW96Q2FuY2VsRnVsbFNjcmVlbigpXG5cdFx0ZWxzZSBpZiBkb2N1bWVudC53ZWJraXRDYW5jZWxGdWxsU2NyZWVuXG5cdFx0XHRkb2N1bWVudC53ZWJraXRDYW5jZWxGdWxsU2NyZWVuKCkiXX0=
