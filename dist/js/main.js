"use strict";!function(){var t,i,s,e,r,n,h,a,o,l,c,f,d,u,p,g,w;t=function(){class t{static load(i,s){var e;return(e=t.spriteCache[s])||((e=new t).load(i,s),t.spriteCache[s]=e),e}load(t,i){return t.loadJson(i,t=>{this.data=t}),t.loadImage(i+".png",t=>{this.texture=t})}draw(t,i,s,e,r=0){var n;if(n=this.data)switch(i.constructor){case Object:t.drawImage(this.texture,i.x,i.y,i.w,i.h,s+i.cx,e+i.cy,i.w,i.h);break;case Array:this.draw(t,i[Math.floor(r)%i.lenght],s,e);break;case String:this.draw(t,n[i],s,e,r)}return this}}return t.spriteCache=[],t}.call(void 0),s=function(){class i{static load(t,s){var e;return(e=i.modelsCache[s])||((e=new i).load(t,s),i.modelsCache[s]=e),e}load(s,e){return s.loadJson(e,e=>{var r,n,h,a,o,l,c,f,d,u,p,g,w;if(e){for(a in e)w=e[a],this[a]=w;if(this.images)for(a in n=this.images,this.images=[],n)r=n[a],this.images[a]=s.loadImage(r);if(this.sprites)for(a in g=this.sprites,this.sprites=[],g)p=g[a],this.sprites[a]=t.load(s,p);if(this.models)for(a in c=this.models,this.models=[],c)l=c[a],this.models[a]=i.load(s,l);if(d=function(t,i=""){var s,e,r,n,h;for(h=[],n=s=0,e=t.length;s<e;n=++s)r=t[n],n.nodePath=i=i+"/"+r,n.before&&d(n.before,i),n.after?h.push(d(n.after,i)):h.push(void 0);return h},this.dirs){for(u=[],h=0,o=dirs.length;h<o;h++)f=dirs[h],u.push(d(f));return u}}})}}return i.modelsCache=[],i}.call(void 0),o={line:function(t){return t.moveTo(this.x1||0,this.y1||0),t.lineTo(this.x2||0,this.y2||0)},rect:function(t){return t.rect(this.x||0,this.y||0,this.width||1,this.height||1)},rectRound:function(t){var i,s,e,r,n;return this.noClose=!1,r=this.x||0,n=this.y||0,e=this.width,i=this.height,e<2*(s=this.radius)&&(s=e/2),i<2*s&&(s=i/2),t.moveTo(r+s,n),t.arcTo(r+e,n,r+e,n+i,s),t.arcTo(r+e,n+i,r,n+i,s),t.arcTo(r,n+i,r,n,s),t.arcTo(r,n,r+e,n,s)},arc:function(t){return t.arc(this.x||0,this.y||0,this.radius,(this.startAngle||0)*Math.PI/180,(this.endAngle||360)*Math.PI/180,!this.clockwise)},elipse:function(t){return t.ellipse(this.x||0,this.y||0,this.rx,this.ry,(this.rotation||0)*Math.PI/180,(this.startAngle||0)*Math.PI/180,(this.endAngle||360)*Math.PI/180,!this.clockwise)},path:function(t){var i;if(this.x||0,this.y||0,"string"==typeof this.path&&(this.path=new Path(this.path)),this.noClose=!0,"f"!==(i=this.draw||"f&s")&&"f&s"!==i||t.fill(this.path),"s"===i||"f&s"===i)return t.stroke(this.path)},node:function(t,i,s){var e,r,h,a;if(this.noClose=this.draw=!0,"string"==typeof(h=this.node))h=i.model[h];else{for(a=i.model,e=0,r=h.length;e<r;e++)a=a[h[e]];h=a}return t.translate(this.x||0,this.y||0),n.call(h,t,i,s)},image:function(t,i){var s;return this.noClose=this.draw=!0,s=i.data.images[this.image],this.width||this.height?t.drawImage(s,this.x||0,this.y||0,this.width,this.height):t.drawImage(s,this.x||0,this.y||0)},sprite:function(t,i){var s;return this.noClose=this.draw=!0,(s=this.sprite).constructor===String&&(this.sprite=s=i.data.sprites[s]),s.draw(t,this.frame,this.x||0,this.y||0,this.index)},text:function(t){var i;if(!0!==this.draw&&(this.drawText=this.draw),i=this.drawText,this.noClose=this.draw=!0,this.font&&(t.font=this.font),this.textAlign&&(t.textAlign=this.textAlign),this.textBaseline&&(t.textBaseline=this.textBaseline),this.direction&&(t.direction=this.direction),"f"!==i&&"f&s"!==i||t.fillText(this.text,this.x||0,this.y||0,this.maxWidth),"s"===i||"f&s"===i)return t.strokeText(this.text,this.x||0,this.y||0,this.maxWidth)}},f={linear:function(t){var i,s,e,r,n;for(s=t.createLinearGradient(this.x0||0,this.y0||0,this.x1||0,this.y1||0),e=0,r=(n=this.colorStops).length;e<r;e++)i=n[e],s.addColorStop(i.pos||0,i.color);return s},radial:function(t){var i,s,e,r,n;for(s=t.createRadialGradient(this.x0||0,this.y0||0,this.r0||0,this.x1||0,this.y1||0,this.r1||0),e=0,r=(n=this.colorStops).length;e<r;e++)i=n[e],s.addColorStop(i.pos||0,i.color);return s},pattern:function(t,i){var s;return s=i.data.images[this.image],t.createPattern(s,this.repetition||"repeat")}},l=function(t,i,s){var e;return null!=(e=f[s.type])?e.call(s,t,i):void 0},c=function(t,i){var s,e;if((e=this.stroke)&&(e.constructor===Object&&(this.stroke=l(t,i,e)),t.strokeStyle=this.stroke),(s=this.fill)&&(s.constructor===Object&&(this.fill=l(t,i,s)),t.fillStyle=this.fill),this.lineWidth&&(t.lineWidth=this.lineWidth),this.lineCap&&(t.lineCap=this.lineCap),this.lineJoin&&(t.lineJoin=this.lineJoin),this.lineDashOffset)return t.lineDashOffset=this.lineDashOffset},n=function(t,s,e){var r,h,a,l,f,d;if(t.save(),t.transform(this.scaleX||1,this.skewY||0,this.skewX||0,this.scaleY||1,this.origX||0,this.origY||0),this.angle&&t.rotate(this.angle*Math.PI/180),c.call(this,t,s),this.noShadow&&(t.shadowBlur=0,t.shadowOffsetX=0,t.shadowOffsetY=0),this.shadowBlur&&(t.shadowBlur=this.shadowBlur),this.shadowColor&&(t.shadowColor=this.shadowColor),this.shadowOffsetX&&(t.shadowOffsetX=this.shadowOffsetX),this.shadowOffsetY&&(t.shadowOffsetY=this.shadowOffsetY),t.globalAlpha=e*(this.opacity||1),this.before)for(h in l=this.before)(a=l[h]).hide||n.call(a,t,s,e);if(t.beginPath(),null!=(f=o[this.type])&&f.call(this,t,s,e),this.noClose||t.closePath(),"f"!==(r=this.draw||"f&s")&&"f&s"!==r||t.fill(),"s"!==r&&"f&s"!==r||t.stroke(),this.after)for(h in d=this.after)(a=d[h]).hide||n.call(a,t,s,e);return i.drawOrigin&&(t.fillStyle="#f00",t.shadowBlur=0,t.shadowOffsetX=0,t.shadowOffsetY=0,t.fillRect(-2,-2,4,4)),t.restore()},a={poly:function(t,i,s,n){var h,a,o,l,c,f,d,u,p,g;for(l=i[this.verts[0]],f=s.x,u=s.y,g=e+s.z,p=((l.z||0)+g)*r,c=((l.x||0)+f)*p,d=((l.y||0)+u)*p,t.moveTo(c,d),h=a=1,o=this.verts.length-1;1<=o?a<=o:a>=o;h=1<=o?++a:--a)p=(((l=i[this.verts[h]]).z||0)+g)*r,c=((l.x||0)+f)*p,d=((l.y||0)+u)*p,t.lineTo(c,d);return null},part:function(t,i,s,e,r){var n,a,o,l,c,f,d;for(this.noClose=this.draw=!0,d=i[this.vert],n={x:s.x+(d.x||0),y:s.y+(d.y||0),z:s.z+(d.z||0)},f=[],l=0,c=(o=e.parts[this.part].faces).length;l<c;l++)a=o[l],f.push(h.call(a,t,e,n,r));return f},node:function(t,i,s,e,r){var h,a,o,l,c;if(this.noClose=this.draw=!0,u(i[this.vert],s).apply(t),o=e.model,this.dir&&(o=e.data.dirs[this.dir]),(l=this.node).constructor===String)l=o[l];else{for(c=o,h=0,a=l.length;h<a;h++)c=c[l[h]];l=c}return n.call(l,t,e,r)},elipse:function(t,i,s){var e,r,n,h,a;return h=(n=u(i[this.vert1],s)).x,a=n.y,e=((n=u(i[this.vert2],s)).x-h)/2,r=(n.y-a)/2,t.ellipse(h+e,a+r,e,r,(this.rotation||0)*Math.PI/180,(this.startAngle||0)*Math.PI/180,(this.endAngle||360)*Math.PI/180,!this.clockwise)}},h=function(t,i,s,e){var r,n;return t.save(),this.stroke,c.call(this,t,i),t.globalAlpha=e*(this.opacity||1),t.beginPath(),null!=(n=a[this.type||"poly"])&&n.call(this,t,i.data.verts,s,i,e),this.noClose||t.closePath(),"f"!==(r=this.draw||"f&s")&&"f&s"!==r||t.fill(),"s"!==r&&"f&s"!==r||t.stroke(),t.restore()},e=1/(r=5e-4),p={x:0,y:0,scale:1,apply:function(t){return t.transform(this.scale,0,0,this.scale,this.x,this.y)}},i=function(){class t{static transform(t,i,s,n){return s=(e+s+n.z)*r,p.x=(t+n.x)*s,p.y=(i+n.y)*s,p.scale=s,p}constructor(t){this.data=t}setData(t){return this.data=t,this.setAngle(this.angle)}setAngle(t){var i,s,e,r;return this.angle=t%=360,(s=this.data.dirs)?(e=s.lenght)>1?((t+=(i=360/e)>>1)<0&&(t+=360),this.model=s[Math.floor(t/i)]):this.model=s[0]:this.model=null,(r=this.data.dirsParts)?(e=r.lenght)>1?((t+=(i=360/e)>>1)<0&&(t+=360),this.parts=r[Math.floor(t/i)]):this.parts=r[0]:this.parts=null}draw2D(t,i=1){var s,e,r,h;if(this.model){for(s in h=[],r=this.model)(e=r[s]).hide?h.push(void 0):h.push(n.call(e,t,this,i));return h}}drawParts(t,i,s=1){var e,r,n,a,o;if(this.parts){for(e in o=[],a=this.parts)(n=a[e]).hide?o.push(void 0):o.push(function(){var e,a,o,l;for(l=[],e=0,a=(o=n.faces).length;e<a;e++)r=o[e],l.push(h.call(r,t,this,i,s));return l}.call(this));return o}}}return t.prototype.angle=0,t}.call(void 0),d=i.transform,u=function(t,i){return d(t.x||0,t.y||0,t.z||0,i)},g=function(){class t{on(t,i){var s;if(i&&((s=this.handlers[t])||(this.handlers[t]=s=[]),s.indexOf(i)<0))return s.push(i)}off(t,i){var s,e;if(i&&(s=this.handlers[t])&&(e=s.indexOf(i))>=0)return s.splice(e,1)}trigger(t,i){var s,e,r,n,h;if(e=this.handlers[t]){for(h=[],r=0,n=e.length;r<n;r++)s=e[r],h.push(s.apply(this,i));return h}}removeEvent(t){return delete this.handlers[t]}}return t.prototype.handlers=[],t}.call(void 0),w=function(){var t,i;return i=0,t=0,class extends g{reset(){return i=t=0}getPercent(){return 1-(0!==t?i/t:0)}updatePercent(){return this.trigger("changepercent",[this.getPercent()])}load(s){var e;return e=this,i++,t++,function(){return null!=s&&s.apply(e,arguments),--i<=0&&(e.reset(),e.trigger("load")),e.updatePercent()}}loadJson(t,i){return i=this.load(i),$.getJSON(t+".json").done(i).fail((function(){return i(null)}))}loadImage(t,i){var s;return i=this.load(i),(s=new Image).onload=function(){return i(s)},s.src=t,s}}}.call(void 0),$(document).ready((function(){var t,e,r,n,h,a,o,l,c,f,d,u,p,g;return t=$("#canvas"),r=t.get(0),n=r.getContext("2d",{alpha:!1}),$(window).on("resize",g),l="anims/test1",h=new w,a=new i,o=new s,e={canvas:r,g:n,x:0,y:0,z:0},(g=function(){return r.width=$(window).width(),r.height=$(window).height()-$("#canvas").offset().top})(),c=function(){return o.load(h,l)},h.on("load",(function(){return a.setData(o)})),console.log(a),setInterval(c,500),(p=function(t){var s,h,o;return n.save(),o=r.width,h=r.height,s=o/2,0,n.fillStyle="#fff",n.fillRect(0,0,o,h),n.beginPath(),n.lineWidth=2,n.strokeStyle="#f00",n.moveTo(s,0),n.lineTo(s,h),n.moveTo(0,0),n.lineTo(o,0),n.stroke(),n.translate(s,0),a.drawParts(n,e),i.transform(0,0,0,e).apply(n),a.draw2D(n),n.restore(),window.requestAnimationFrame(p)})(0),d=u=0,f=function(t){return e.x+=t.clientX-d,e.y+=t.clientY-u,d=t.clientX,u=t.clientY},t.on("mousedown",(function(i){return d=i.clientX,u=i.clientY,t.on("mousemove",f)})),t.on("touchstart",(function(t){return d=t.touches[0].clientX,u=t.touches[0].clientY})),t.on("touchmove",(function(t){return f(t.touches[0])})),t.on("mouseup",(function(){return t.off("mousemove",f)})),$(".js-z-number").val(e.z).on("input change",(function(){return e.z=+$(this).val()})),$(".js-anim-select").click((function(){return o=new s,l=$(this).data("file")})),i.drawOrigin=!0,$(".js-draw-origin").change((function(){return i.drawOrigin=$(this).prop("checked")})),$(".js-reset-pos").click((function(){return e.x=e.y=e.z=0,$(".js-z-number").val("0")}))}))}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
