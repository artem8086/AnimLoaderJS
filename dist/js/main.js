"use strict";!function(){var t,e,i,s,n,r,a,l;e=function(){class t{static load(e,i){var s;return null===(s=t.modelsCache[i])&&((s=new t).load(e,i),t.modelsCache[i]=s),s}load(e,i){return e.loadJson(i,i=>{var s,n,r,a,l,o,h;if(i){for(n in i)h=i[n],this[n]=h;if(this.images)for(n in a=this.images)s=a[n],this.images[n]=e.loadImage(s);if(this.models){for(n in o=[],l=this.models)r=l[n],o.push(this.models[n]=t.load(e,r));return o}}})}}return t.modelsCache=[],t}.call(void 0),i=.002,r={x:0,y:0,scale:1,apply:function(t){return t.transform(this.scale,0,this.sacle,0,this.x,this.y)}},n={rect:function(t){return t.rect(this.x||0,this.y||0,this.width,this.height)}},s=function(t){var e,i,r;if(this.visible=this.visible||!0,this.visible){if(t.save(),t.transform(this.scaleX||1,this.skewX||0,this.scaleY||1,this.skewY||0,this.origX||0,this.origY||0),this.angle&&t.rotate(this.angle),this.stroke&&(t.strokeStyle=this.stroke),this.fill&&(t.fillStyle=this.fill),this.lineWidth&&(t.lineWidth=this.lineWidth),this.lineCap&&(t.lineCap=this.lineCap),this.lineJoin&&(t.lineJoin=this.lineJoin),this.lineDashOffset&&(t.lineDashOffset=this.lineDashOffset),this.type&&n[this.type].call(this,t),this.childs)for(i in r=this.childs)e=r[i],s.call(e,t);return t.restore()}},t=function(){class t{static transform(t,e,s,n){var a,l;return t-=a=n.x+n.canvas.width/2,e-=l=n.y+n.canvas.height/2,s=(500+s+n.z)*i,r.x=t*s+a,r.y=e*s+l,r.scale=s,r}constructor(t){this.data=t}setData(t){return this.data=t,this.setDirection(this.direction)}setDirection(t){return this.direction=t,this.data.dirs.lenght<this.direction&&(this.direction=0),this.model=this.data.dirs[this.direction]}draw2D(t){var e,i,n,r;if(this.model&&(r=this.model.root2D)){for(i in n=[],r)e=r[i],n.push(s.call(e,t));return n}}}return t.prototype.direction=0,t}.call(void 0),a=function(){class t{on(t,e){var i;if(e&&((i=this.handlers[t])||(this.handlers[t]=i=[]),i.indexOf(e)<0))return i.push(e)}off(t,e){var i,s;if(e&&(i=this.handlers[t])&&(s=i.indexOf(e))>=0)return i.splice(s,1)}trigger(t,e){var i,s,n,r,a;if(s=this.handlers[t]){for(a=[],n=0,r=s.length;n<r;n++)i=s[n],a.push(i.apply(this,e));return a}}removeEvent(t){return delete this.handlers[t]}}return t.prototype.handlers=[],t}.call(void 0),l=function(){var t,e;return e=0,t=0,class extends a{reset(){return e=t=0}getPercent(){return 1-(0!==t?e/t:0)}updatePercent(){return this.trigger("changepercent",[this.getPercent()])}load(i){var s;return s=this,e++,t++,function(){return null!=i&&i.apply(s,arguments),--e<=0&&(s.reset(),s.trigger("load")),s.updatePercent()}}loadJson(t,e){return e=this.load(e),$.getJSON(t+".json").done(e).fail((function(){return e(null)}))}loadImage(t,e){var i;return e=this.load(e),(i=new Image).onload((function(){return e(i)})),i.src=t,i}}}.call(void 0),$(document).ready((function(){var i,s,n,r,a,o,h,d,c;return s=document.getElementById("canvas"),n=s.getContext("2d",{alpha:!1}),(c=function(){return s.width=$(window).width(),s.height=$(window).height()-$("#canvas").offset().top})(),$(window).on("resize",c),"anims/test",r=new l,a=new t,o=null,i={canvas:s,g:n,x:0,y:0,z:0},h=function(){return(o=new e).load(r,"anims/test")},r.on("load",(function(){return a.setData(o)})),console.log(a),setInterval(h,500),(d=function(e){var r,l;return n.save(),l=s.width,r=s.height,n.fillStyle="#fff",n.fillRect(0,0,l,r),n.beginPath(),n.lineWidth=2,n.strokeStyle="#f00",n.moveTo(l/2,0),n.lineTo(l/2,r),n.moveTo(0,r/2),n.lineTo(l,r/2),n.stroke(),n.translate(l/2,r/2),t.transform(0,0,0,i).apply(n),a.draw2D(n),n.restore(),window.requestAnimationFrame(d)})(0)}))}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
