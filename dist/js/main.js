"use strict";!function(){var t,e,i,s,r,n,a,o,h,l,c,u,d,f,p,m,v,g,w,y,x,k,P,T;t=function(){class t{static load(e,i){var s;return(s=t.cache[i])||((s=new t).load(e,i),t.cache[i]=s),s}load(t,e){return t.loadJson(e,t=>{this.data=t}),t.loadImage(e+".png",t=>{this.texture=t})}draw(t,e,i,s,r=0){var n;if(n=this.data)switch(e.constructor){case Object:t.drawImage(this.texture,e.x,e.y,e.w,e.h,i+e.cx,s+e.cy,e.w,e.h);break;case Array:this.draw(t,e[Math.floor(r)%e.lenght],i,s);break;case String:this.draw(t,n[e],i,s,r)}return this}}return t.cache=[],t}.call(void 0),i=function(){class t{static load(e,i){var s;return(s=t.cache[i])||((s=new t).load(e,i),t.cache[i]=s),s}load(t,e){return t.loadJson(e,t=>{var e,i,s;if(t){for(e in i=[],t)s=t[e],i.push(this[e]=s);return i}})}}return t.cache=[],t}.call(void 0),s=function(){return(new Date).getTime()/1e3},n=function(t){return function(e){return 1-t(1-e)}},r=function(t){return function(e){return e<.5?t(2*e)/2:(2-t(2*(1-e)))/2}},a=function(t,e){return o[t]=e,o[t+"EaseOut"]=n(e),o[t+"EaseInOut"]=r(e)},o={linear:function(t){return t},easeOut:function(t){return 1-t},easeInOut:function(t){return t<.5?2*t:2-2*t}},a("quad",(function(t){return t*t})),a("circle",(function(t){return 1-Math.sin(Math.acos(t))})),a("bounce",(function(t){var e,i;for(e=0,i=1;;){if(t>=(7-4*e)/11)return-Math.pow((11-6*e-11*t)/4,2)+Math.pow(i,2);e+=i,i/=2}})),e=function(){class t{reset(){return this.startTime=s(),this.deltaTime=0,this}setAnim(t,e=0,i=this.data){return this.anim=null!=i?i[t]:void 0,this.reset(),this.anim&&(this.duration=this.anim?this.anim.duration:0,this.setAngle(e)),this}setAngle(t){var e,i,s;return this.frame=null,this.anim&&(t%=360,(i=this.anim.dirs)&&((s=i.lenght)>1?((t+=(e=360/s)>>1)<0&&(t+=360),this.frame=i[Math.floor(t/e)]):this.frame=i[0])),this}play(t){var e,i;if(t=t||s(),this.deltaTime=e=(t-this.startTime)*this.scale,!(i=this.duration))return!1;if(e>i){if(!this.loop)return!1;this.deltaTime%=i}return!0}animate(e,i=e.nodePath){var s,r,n,a,h,l,c,u,d,f,p,m,v,g,w;if((r=this.frame)&&(g=r[i]))for(s=this.deltaTime,u=t.props,d=t.propsUsed,n=0,a=g.length;n<a;n++)if(s>=(l=g[n]).end)for(h in f=l.to)w=f[h],d[h]||(u[h]=e[h],d[h]=!0),e[h]=w;else if(s>=l.start)for(h in m=l.func?o[l.func]:o.linear,p=l.to)w=p[h],c=e[h],d[h]||(u[h]=c,d[h]=!0),c||(c=0),w.constructor===Number?(v=m((s-l.start)/(l.end-l.start)),e[h]=(w-c)*v+c):e[h]=w;return this}reciveProps(e){var i,s,r;for(i in s=t.props,r=t.propsUsed)r[i]&&(e[i]=s[i],r[i]=!1);return this}createWorkFrame(){return this.loop=!1,this.frame={work:[{start:0,end:0,to:{}}]},this}resetWork(){var e,i;for(e in i=t.propsUsed)i[e]&&(i[e]=!1);return this}clearWork(){var t,e,i;return(t=this.frame.work[0]).start=t.end=0,i=function(){var t;for(e in t=[],i)i[e],t.push(delete i[e]);return t}(),this}animateProps(t,e,i){var s,r,n,a;for(r in this.duration=e,(s=this.frame.work[0]).end=e,s.func=i,a=s.to,t)n=t[r],a[r]=n;return this.reset(),this}}return t.getTime=s,t.prototype.loop=!0,t.prototype.startTime=0,t.prototype.duration=0,t.prototype.deltaTime=0,t.prototype.scale=1,t.props=[],t.propsUsed=[],t}.call(void 0),l=function(){class e{static load(t,i){var s;return(s=e.cache[i])||((s=new e).load(t,i),e.cache[i]=s),s}load(i,s){return i.loadJson(s,s=>{var r,n,a,o,h,l,c,u,d,f,p,m,v,g;if(s){for(o in s)g=s[o],this[o]=g;if(this.images)for(o in n=this.images,this.images=[],n)r=n[o],this.images[o]=i.loadImage(r);if(this.sprites)for(o in v=this.sprites,this.sprites=[],v)m=v[o],this.sprites[o]=t.load(i,m);if(this.models)for(o in c=this.models,this.models=[],c)l=c[o],this.models[o]=e.load(i,l);if(d=function(t,e=""){var i,s,r;for(i in r=[],t)(s=t[i]).nodePath=e+i,s.before&&d(s.before,s.nodePath+"<"),s.after?r.push(d(s.after,s.nodePath+">")):r.push(void 0);return r},this.dirs){for(p=[],a=0,h=(f=this.dirs).length;a<h;a++)u=f[a],p.push(d(u));return p}}})}}return e.cache=[],e}.call(void 0),m={line:function(t){return t.moveTo(this.x1||0,this.y1||0),t.lineTo(this.x2||0,this.y2||0),this},rect:function(t){return t.rect(this.x||0,this.y||0,this.width||1,this.height||1),this},rectRound:function(t){var e,i,s,r,n;return this.noClose=!1,r=this.x||0,n=this.y||0,s=this.width,e=this.height,s<2*(i=this.radius)&&(i=s/2),e<2*i&&(i=e/2),t.moveTo(r+i,n),t.arcTo(r+s,n,r+s,n+e,i),t.arcTo(r+s,n+e,r,n+e,i),t.arcTo(r,n+e,r,n,i),t.arcTo(r,n,r+s,n,i),this},arc:function(t){return t.arc(this.x||0,this.y||0,this.radius,(this.startAngle||0)*Math.PI/180,(this.endAngle||360)*Math.PI/180,!this.clockwise),this},elipse:function(t){return t.ellipse(this.x||0,this.y||0,this.rx,this.ry,(this.rotation||0)*Math.PI/180,(this.startAngle||0)*Math.PI/180,(this.endAngle||360)*Math.PI/180,!this.clockwise),this},path:function(t){var e;return this.x||0,this.y||0,"string"==typeof this.path&&(this.path=new Path2D(this.path)),this.noClose=!0,"f"!==(e=this.draw||"f&s")&&"f&s"!==e||t.fill(this.path),"s"!==e&&"f&s"!==e||t.stroke(this.path),this},node:function(t,e,i){var s,r,n,a,o,h,l,c,u;if(this.noClose=this.draw=!0,c=e.data,u=e.model,(n=null!=(h=c.models)?h[this.model]:void 0)?(e.data=n,e.model=o=n.dirs[this.direction||0]):o=this.direction?e.data.dirs[this.direction]:e.model,o){if("string"==typeof(a=this.node))a=o[a];else{for(l=o,s=0,r=a.length;s<r;s++)l=l[a[s]];a=l}a&&(t.translate(this.x||0,this.y||0),d.call(a,t,e,i))}return e.model=u,e.data=c,this},image:function(t,e){var i;return this.noClose=this.draw=!0,i=e.data.images[this.image],this.width||this.height?t.drawImage(i,this.x||0,this.y||0,this.width,this.height):t.drawImage(i,this.x||0,this.y||0),this},sprite:function(t,e){var i;return this.noClose=this.draw=!0,(i=this.sprite).constructor===String&&(this.sprite=i=e.data.sprites[i]),i.draw(t,this.frame,this.x||0,this.y||0,this.index),this},text:function(t){var e;return!0!==this.draw&&(this.drawText=this.draw),e=this.drawText,this.noClose=this.draw=!0,this.font&&(t.font=this.font),this.textAlign&&(t.textAlign=this.textAlign),null!==this.textBaseline&&(t.textBaseline=this.textBaseline),this.direction&&(t.direction=this.direction),"f"!==e&&"f&s"!==e||t.fillText(this.text,this.x||0,this.y||0,this.maxWidth),"s"!==e&&"f&s"!==e||t.strokeText(this.text,this.x||0,this.y||0,this.maxWidth),this}},w={linear:function(t){var e,i,s,r,n;for(i=t.createLinearGradient(this.x0||0,this.y0||0,this.x1||0,this.y1||0),s=0,r=(n=this.colorStops).length;s<r;s++)e=n[s],i.addColorStop(e.pos||0,e.color);return i},radial:function(t){var e,i,s,r,n;for(i=t.createRadialGradient(this.x0||0,this.y0||0,this.r0||0,this.x1||0,this.y1||0,this.r1||0),s=0,r=(n=this.colorStops).length;s<r;s++)e=n[s],i.addColorStop(e.pos||0,e.color);return i},pattern:function(t,e){var i;return i=e.data.images[this.image],t.createPattern(i,this.repetition||"repeat")}},v=function(t,e,i){var s;return null!=(s=w[i.type])?s.call(i,t,e):void 0},g=function(t,e){var i,s;return(s=this.stroke)&&(s.constructor===Object&&(this.stroke=v(t,e,s)),t.strokeStyle=this.stroke),(i=this.fill)&&(i.constructor===Object&&(this.fill=v(t,e,i)),t.fillStyle=this.fill),null!==this.lineWidth&&(t.lineWidth=this.lineWidth),null!==this.lineCap&&(t.lineCap=this.lineCap),this.lineJoin&&(t.lineJoin=this.lineJoin),null!==this.lineDashOffset&&(t.lineDashOffset=this.lineDashOffset),this},d=function(t,e,i){var s,r,n,a,o,l,c;if(t.save(),e.animation.animate(this),t.transform(this.scaleX||1,this.skewY||0,this.skewX||0,this.scaleY||1,this.origX||0,this.origY||0),(n=this.modelAngleScale)&&t.rotate(e.angle*n*Math.PI/180),this.angle&&t.rotate(this.angle*Math.PI/180),g.call(this,t,e),this.noShadow&&(t.shadowBlur=0,t.shadowOffsetX=0,t.shadowOffsetY=0),null!==this.shadowBlur&&(t.shadowBlur=this.shadowBlur),null!==this.shadowColor&&(t.shadowColor=this.shadowColor),null!==this.shadowOffsetX&&(t.shadowOffsetX=this.shadowOffsetX),null!==this.shadowOffsetY&&(t.shadowOffsetY=this.shadowOffsetY),t.globalAlpha=i*(null===this.opacity?1:this.opacity),this.before){for(r in e.animation.reciveProps(this),o=this.before)(a=o[r]).hide||d.call(a,t,e,i);e.animation.animate(this)}if(t.beginPath(),null!=(l=m[this.type])&&l.call(this,t,e,i),this.noClose||t.closePath(),"f"!==(s=this.draw||"f&s")&&"f&s"!==s||t.fill(),"s"!==s&&"f&s"!==s||t.stroke(),this.clip&&t.clip(),e.animation.reciveProps(this),this.after)for(r in c=this.after)(a=c[r]).hide||d.call(a,t,e,i);return h.drawOrigin&&(t.fillStyle="#f00",t.shadowBlur=0,t.shadowOffsetX=0,t.shadowOffsetY=0,t.fillRect(-2,-2,4,4)),t.restore(),this},p={poly:function(t,e,i,s){var r,n,a,o,h,l,d,f,p,m;for(o=e[this.verts[0]],l=i.x,f=i.y,m=c+i.z,p=((o.z||0)+m)*u,h=((o.x||0)+l)*p,d=((o.y||0)+f)*p,t.moveTo(h,d),r=n=1,a=this.verts.length-1;1<=a?n<=a:n>=a;r=1<=a?++n:--n)p=(((o=e[this.verts[r]]).z||0)+m)*u,h=((o.x||0)+l)*p,d=((o.y||0)+f)*p,t.lineTo(h,d);return this},part:function(t,e,i,s,r){var n,a,o,h,l,c,u,d,p,m,v,g;if(this.noClose=this.draw=!0,(l=null!=(d=(m=s.data).models)?d[this.model]:void 0)?(s.data=l,u=l.dirsParts[this.direction||0]):u=s.parts,u&&(g=e[this.vert],n={x:i.x+(g.x||0),y:i.y+(g.y||0),z:i.z+(g.z||0)},c=u[this.part])){for(v=s.parts,s.parts=u,o=0,h=(p=c.faces).length;o<h;o++)a=p[o],f.call(a,t,s,n,r);s.parts=v}return s.data=m,this},node:function(t,e,i,s,r){return x(e[this.vert],i).apply(t),m.node.call(this,t,s,r),this},elipse:function(t,e,i){var s,r,n,a,o;return a=(n=x(e[this.vert1],i)).x,o=n.y,s=((n=x(e[this.vert2],i)).x-a)/2,r=(n.y-o)/2,t.ellipse(a+s,o+r,s,r,(this.rotation||0)*Math.PI/180,(this.startAngle||0)*Math.PI/180,(this.endAngle||360)*Math.PI/180,!this.clockwise),this}},f=function(t,e,i,s){var r,n;return t.save(),this.stroke,g.call(this,t,e),t.globalAlpha=s*(null===this.opacity?1:this.opacity),t.beginPath(),null!=(n=p[this.type||"poly"])&&n.call(this,t,e.data.verts,i,e,s),this.noClose||t.closePath(),"f"!==(r=this.draw||"f&s")&&"f&s"!==r||t.fill(),"s"!==r&&"f&s"!==r||t.stroke(),t.restore(),this},c=1/(u=5e-4),k={x:0,y:0,scale:1,apply:function(t){return t.transform(this.scale,0,0,this.scale,this.x,this.y)}},h=function(){class t{static transform(t,e,i,s){return i=(c+i+s.z)*u,k.x=(t+s.x)*i,k.y=(e+s.y)*i,k.scale=i,k}constructor(t){this.data=t}setData(t){return this.data=t,this.setAngle(this.angle)}setAngle(t){var e,i,s,r;return this.angle=t%=360,this.animation.setAngle(t),(i=this.data.dirs)?(s=i.lenght)>1?((t+=(e=360/s)>>1)<0&&(t+=360),this.model=i[Math.floor(t/e)]):this.model=i[0]:this.model=null,(r=this.data.dirsParts)?(s=r.lenght)>1?((t+=(e=360/s)>>1)<0&&(t+=360),this.parts=r[Math.floor(t/e)]):this.parts=r[0]:this.parts=null}draw2D(t,e=1){var i,s,r,n;if(this.model){for(i in n=[],r=this.model)(s=r[i]).hide?n.push(void 0):n.push(d.call(s,t,this,e));return n}}draw2DPart(t,e,i=1){var s;if(this.model&&(s=this.model[e]))return d.call(s,t,this,i)}drawPart(t,e,i,s=1){var r,n,a,o,h;if(this.parts&&(e=this.parts[e])){for(h=[],n=0,a=(o=e.faces).length;n<a;n++)r=o[n],h.push(f.call(r,t,this,i,s));return h}}drawParts(t,e,i=1){var s,r,n,a,o;if(this.parts){for(s in o=[],a=this.parts)(n=a[s]).hide?o.push(void 0):o.push(function(){var s,a,o,h;for(h=[],s=0,a=(o=n.faces).length;s<a;s++)r=o[s],h.push(f.call(r,t,this,e,i));return h}.call(this));return o}}}return t.prototype.attachment=[],t.prototype.animation=new e,t.prototype.angle=0,t}.call(void 0),y=h.transform,x=function(t,e){return y(t.x||0,t.y||0,t.z||0,e)},P=function(){class t{on(t,e){var i;return e&&((i=this.handlers[t])||(this.handlers[t]=i=[]),i.indexOf(e)<0&&i.push(e)),this}off(t,e){var i,s;return e&&(i=this.handlers[t])&&(s=i.indexOf(e))>=0&&i.splice(s,1),this}trigger(t,e){var i,s,r;if(i=this.handlers[t])for(s=0,r=i.length;s<r;s++)i[s].apply(this,e);return this}removeEvent(t){return delete this.handlers[t],this}}return t.prototype.handlers=[],t}.call(void 0),T=function(){var t,e;return e=0,t=0,class extends P{reset(){return e=t=0}getPercent(){return 1-(0!==t?e/t:0)}updatePercent(){return this.trigger("changepercent",[this.getPercent()])}load(i){var s;return s=this,e++,t++,function(){return null!=i&&i.apply(s,arguments),--e<=0&&(s.reset(),s.trigger("load")),s.updatePercent()}}loadJson(t,e){return e=this.load(e),$.getJSON(t+".json").done(e).fail((function(){return e(null)}))}loadImage(t,e){var i;return e=this.load(e),(i=new Image).onload=function(){return e(i)},i.src=t,i}}}.call(void 0),$(document).ready((function(){var t,e,s,r,n,a,o,c,u,d,f,p,m,v,g,w,y,x,k;return t=$("#canvas"),n=t.get(0),a=n.getContext("2d",{alpha:!1}),m="models/test1",u=new T,f=new h,p=new l,e=null,s={canvas:n,g:a,x:0,y:0,z:0},(k=function(){return n.width=$(window).width(),n.height=$(window).height()-$("#canvas").offset().top})(),$(window).on("resize",k),v=function(){return p.load(u,m)},u.on("load",(function(){var t,i,s;if(f.setData(p),f.animation.data){for(t in(i=$(".js-frame-container")).empty(),s=f.animation.data)s[t],i.append(`<a class='dropdown-item js-frame-select' href='#'>${t}</a>`);return f.animation.setAnim(e,f.angle),$(".js-frame-select").click((function(){return e=$(this).text(),f.animation.setAnim(e,f.angle)}))}})),console.log(f),d=setInterval(v,500),(x=function(t){var e,i,r;return a.save(),r=n.width,i=n.height,e=r/2,0,a.fillStyle="#fff",a.fillRect(0,0,r,i),a.beginPath(),a.lineWidth=2,a.strokeStyle="#f00",a.moveTo(e,0),a.lineTo(e,i),a.moveTo(0,0),a.lineTo(r,0),a.stroke(),a.translate(e,0),f.animation.play(),f.drawParts(a,s),h.transform(0,0,0,s).apply(a),f.draw2D(a),a.restore(),window.requestAnimationFrame(x)})(0),w=y=0,g=function(t){return s.x+=t.clientX-w,s.y+=t.clientY-y,w=t.clientX,y=t.clientY},t.on("mousedown",(function(e){return w=e.clientX,y=e.clientY,t.on("mousemove",g)})),t.on("touchstart",(function(t){return w=t.touches[0].clientX,y=t.touches[0].clientY})),t.on("touchmove",(function(t){return g(t.touches[0])})),t.on("mouseup",(function(){return t.off("mousemove",g)})),$(".js-z-number").val(s.z).on("input change",(function(){return s.z=+$(this).val()})),$(".js-angle-number").val(f.angle).on("input change",(function(){return f.setAngle+$(this).val()})),$(".js-model-select").click((function(){return p=new l,m=$(this).data("file")})),$(".js-anim-select").click((function(){var t;return t=$(this).data("file"),f.animation.data=new i,f.animation.data.load(u,t),$(".js-anim-refresh").data("file",t),$(".js-refresh-model").prop("checked",!1),clearInterval(d)})),h.drawOrigin=!0,$(".js-draw-origin").change((function(){return h.drawOrigin=$(this).prop("checked")})),$(".js-refresh-model").change((function(){return $(this).prop("checked")?d=setInterval(v,500):clearInterval(d)})),$(".js-reset-pos").click((function(){return s.x=s.y=s.z=0,$(".js-z-number").val("0")})),o=!1,$(".js-full-screen").click((function(){return o?r():c(document.documentElement),o=!o})),c=function(t){return t.requestFullScreen?t.requestFullScreen():t.mozRequestFullScreen?t.mozRequestFullScreen():t.webkitRequestFullScreen?t.webkitRequestFullScreen():void 0},r=function(){return document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen?document.webkitCancelFullScreen():void 0}}))}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,
