"use strict";!function(){var t,e,i,s,r,n,a,o,h,l,c,u,d,f,p,m,v,g,w,y,x,k,P,T;t=function(){class t{static load(e,i){var s;return(s=t.cache[i])||((s=new t).load(e,i),t.cache[i]=s),s}load(t,e){return t.loadJson(e,t=>{this.data=t}),t.loadImage(e+".png",t=>{this.texture=t})}draw(t,e,i,s,r=0){var n;if(n=this.data)switch(e.constructor){case Object:t.drawImage(this.texture,e.x,e.y,e.w,e.h,i+e.cx,s+e.cy,e.w,e.h);break;case Array:this.draw(t,e[Math.floor(r)%e.lenght],i,s);break;case String:this.draw(t,n[e],i,s,r)}return this}}return t.cache=[],t}.call(void 0),i=function(){class t{static load(e,i){var s;return(s=t.cache[i])||((s=new t).load(e,i),t.cache[i]=s),s}load(t,e){return t.loadJson(e,t=>{var e,i,s;if(t){for(e in i=[],t)s=t[e],i.push(this[e]=s);return i}})}}return t.cache=[],t}.call(void 0),s=function(){return(new Date).getTime()/1e3},n=function(t){return function(e){return 1-t(1-e)}},r=function(t){return function(e){return e<.5?t(2*e)/2:(2-t(2*(1-e)))/2}},a=function(t,e){return o[t]=e,o[t+"EaseOut"]=n(e),o[t+"EaseInOut"]=r(e)},o={linear:function(t){return t},easeOut:function(t){return 1-t},easeInOut:function(t){return t<.5?2*t:2-2*t}},a("quad",(function(t){return t*t})),a("circle",(function(t){return 1-Math.sin(Math.acos(t))})),a("bounce",(function(t){var e,i;for(e=0,i=1;;){if(t>=(7-4*e)/11)return-Math.pow((11-6*e-11*t)/4,2)+Math.pow(i,2);e+=i,i/=2}})),e=function(){class t{reset(){return this.startTime=s(),this.deltaTime=0,this}setAnim(t,e=0,i=this.data){return this.anim=null!=i?i[t]:void 0,this.reset(),this.anim&&(this.duration=this.anim?this.anim.duration:0,this.setAngle(e)),this}setAngle(t){var e,i,s;return this.frame=null,this.anim&&(t%=360,(i=this.anim.dirs)&&((s=i.lenght)>1?((t+=(e=360/s)>>1)<0&&(t+=360),this.frame=i[Math.floor(t/e)]):this.frame=i[0])),this}play(t){var e,i;if(t=t||s(),this.deltaTime=e=(t-this.startTime)*this.scale,!(i=this.duration))return!1;if(e>i){if(!this.loop)return!1;this.deltaTime%=i}return!0}animate(e,i=e.nodePath){var s,r,n,a,h,l,c,u,d,f,p,m,v,g,w;if((r=this.frame)&&(g=r[i]))for(s=this.deltaTime,u=t.props,d=t.propsUsed,n=0,a=g.length;n<a;n++)if(s>=(l=g[n]).end)for(h in f=l.to)w=f[h],d[h]||(u[h]=e[h],d[h]=!0),e[h]=w;else if(s>=l.start)for(h in m=l.func?o[l.func]:o.linear,p=l.to)w=p[h],c=e[h],d[h]||(u[h]=c,d[h]=!0),c||(c=0),w.constructor===Number?(v=m((s-l.start)/(l.end-l.start)),e[h]=(w-c)*v+c):e[h]=w;return this}reciveProps(e){var i,s,r;for(i in s=t.props,r=t.propsUsed)r[i]&&(e[i]=s[i],r[i]=!1);return this}createWorkFrame(){return this.loop=!1,this.frame={work:[{start:0,end:0,to:{}}]},this}resetWork(){var e,i;for(e in i=t.propsUsed)i[e]&&(i[e]=!1);return this}clearWork(){var t,e,i;return(t=this.frame.work[0]).start=t.end=0,i=function(){var t;for(e in t=[],i)i[e],t.push(delete i[e]);return t}(),this}animateProps(t,e,i){var s,r,n,a;for(r in this.duration=e,(s=this.frame.work[0]).end=e,s.func=i,a=s.to,t)n=t[r],a[r]=n;return this.reset(),this}}return t.getTime=s,t.prototype.loop=!0,t.prototype.startTime=0,t.prototype.duration=0,t.prototype.deltaTime=0,t.prototype.scale=1,t.props=[],t.propsUsed=[],t}.call(void 0),l=function(){class e{static load(t,i){var s;return(s=e.cache[i])||((s=new e).load(t,i),e.cache[i]=s),s}load(i,s){return i.loadJson(s,s=>{var r,n,a,o,h,l,c,u,d,f,p,m,v,g;if(s){for(o in s)g=s[o],this[o]=g;if(this.images)for(o in n=this.images,this.images=[],n)r=n[o],this.images[o]=i.loadImage(r);if(this.sprites)for(o in v=this.sprites,this.sprites=[],v)m=v[o],this.sprites[o]=t.load(i,m);if(this.models)for(o in c=this.models,this.models=[],c)l=c[o],this.models[o]=e.load(i,l);if(d=function(t,e=""){var i,s,r;for(i in r=[],t)(s=t[i]).nodePath=e+i,s.before&&d(s.before,s.nodePath+"<"),s.after?r.push(d(s.after,s.nodePath+">")):r.push(void 0);return r},this.dirs){for(p=[],a=0,h=(f=this.dirs).length;a<h;a++)u=f[a],p.push(d(u));return p}}})}}return e.cache=[],e}.call(void 0),m={line:function(t){return t.moveTo(this.x1||0,this.y1||0),t.lineTo(this.x2||0,this.y2||0),this},rect:function(t){return t.rect(this.x||0,this.y||0,this.width||1,this.height||1),this},rectRound:function(t){var e,i,s,r,n;return this.noClose=!1,r=this.x||0,n=this.y||0,s=this.width,e=this.height,s<2*(i=this.radius)&&(i=s/2),e<2*i&&(i=e/2),t.moveTo(r+i,n),t.arcTo(r+s,n,r+s,n+e,i),t.arcTo(r+s,n+e,r,n+e,i),t.arcTo(r,n+e,r,n,i),t.arcTo(r,n,r+s,n,i),this},arc:function(t){return t.arc(this.x||0,this.y||0,this.radius,(this.startAngle||0)*Math.PI/180,(this.endAngle||360)*Math.PI/180,!this.clockwise),this},elipse:function(t){return t.ellipse(this.x||0,this.y||0,this.rx,this.ry,(this.rotation||0)*Math.PI/180,(this.startAngle||0)*Math.PI/180,(this.endAngle||360)*Math.PI/180,!this.clockwise),this},path:function(t){var e;return this.x||0,this.y||0,"string"==typeof this.path&&(this.path=new Path2D(this.path)),this.noClose=!0,"f"!==(e=this.draw||"f&s")&&"f&s"!==e||t.fill(this.path),"s"!==e&&"f&s"!==e||t.stroke(this.path),this},node:function(t,e,i,s){var r,n,a,o,h,l,c,u,f;if(this.noClose=this.draw=!0,u=e.data,f=e.model,(a=s||(null!=(l=u.models)?l[this.model]:void 0))?(e.data=a,e.model=h=a.dirs[this.direction||0]):h=this.direction?e.data.dirs[this.direction]:e.model,h){if("string"==typeof(o=this.node))o=h[o];else{for(c=h,r=0,n=o.length;r<n;r++)c=c[o[r]];o=c}o&&(t.translate(this.x||0,this.y||0),d.call(o,t,e,i))}return e.model=f,e.data=u,this},attach:function(t,e,i){var s;return(s=e.attachment[this.attach])&&m.node.call(this,t,e,i,s),this},image:function(t,e){var i;return this.noClose=this.draw=!0,i=e.data.images[this.image],this.width||this.height?t.drawImage(i,this.x||0,this.y||0,this.width,this.height):t.drawImage(i,this.x||0,this.y||0),this},sprite:function(t,e){var i;return this.noClose=this.draw=!0,(i=this.sprite).constructor===String&&(this.sprite=i=e.data.sprites[i]),i.draw(t,this.frame,this.x||0,this.y||0,this.index),this},text:function(t){var e;return!0!==this.draw&&(this.drawText=this.draw),e=this.drawText,this.noClose=this.draw=!0,this.font&&(t.font=this.font),this.textAlign&&(t.textAlign=this.textAlign),null!==this.textBaseline&&(t.textBaseline=this.textBaseline),this.direction&&(t.direction=this.direction),"f"!==e&&"f&s"!==e||t.fillText(this.text,this.x||0,this.y||0,this.maxWidth),"s"!==e&&"f&s"!==e||t.strokeText(this.text,this.x||0,this.y||0,this.maxWidth),this}},w={linear:function(t){var e,i,s,r,n;for(i=t.createLinearGradient(this.x0||0,this.y0||0,this.x1||0,this.y1||0),s=0,r=(n=this.colorStops).length;s<r;s++)e=n[s],i.addColorStop(e.pos||0,e.color);return i},radial:function(t){var e,i,s,r,n;for(i=t.createRadialGradient(this.x0||0,this.y0||0,this.r0||0,this.x1||0,this.y1||0,this.r1||0),s=0,r=(n=this.colorStops).length;s<r;s++)e=n[s],i.addColorStop(e.pos||0,e.color);return i},pattern:function(t,e){var i;return i=e.data.images[this.image],t.createPattern(i,this.repetition||"repeat")}},v=function(t,e,i){var s;return null!=(s=w[i.type])?s.call(i,t,e):void 0},g=function(t,e){var i,s;return(s=this.stroke)&&(s.constructor===Object&&(this.stroke=v(t,e,s)),t.strokeStyle=this.stroke),(i=this.fill)&&(i.constructor===Object&&(this.fill=v(t,e,i)),t.fillStyle=this.fill),null!==this.lineWidth&&(t.lineWidth=this.lineWidth),null!==this.lineCap&&(t.lineCap=this.lineCap),this.lineJoin&&(t.lineJoin=this.lineJoin),null!==this.lineDashOffset&&(t.lineDashOffset=this.lineDashOffset),this},d=function(t,e,i){var s,r,n,a,o,l,c;if(t.save(),e.animation.animate(this),t.transform(this.scaleX||1,this.skewY||0,this.skewX||0,this.scaleY||1,this.origX||0,this.origY||0),(n=this.modelAngleScale)&&t.rotate(e.angle*n*Math.PI/180),this.angle&&t.rotate(this.angle*Math.PI/180),g.call(this,t,e),this.noShadow&&(t.shadowBlur=0,t.shadowOffsetX=0,t.shadowOffsetY=0),null!==this.shadowBlur&&(t.shadowBlur=this.shadowBlur),null!==this.shadowColor&&(t.shadowColor=this.shadowColor),null!==this.shadowOffsetX&&(t.shadowOffsetX=this.shadowOffsetX),null!==this.shadowOffsetY&&(t.shadowOffsetY=this.shadowOffsetY),t.globalAlpha=i*(null===this.opacity?1:this.opacity),this.before){for(r in e.animation.reciveProps(this),o=this.before)(a=o[r]).hide||d.call(a,t,e,i);e.animation.animate(this)}if(t.beginPath(),null!=(l=m[this.type])&&l.call(this,t,e,i),this.noClose||t.closePath(),"f"!==(s=this.draw||"f&s")&&"f&s"!==s||t.fill(),"s"!==s&&"f&s"!==s||t.stroke(),this.clip&&t.clip(),e.animation.reciveProps(this),this.after)for(r in c=this.after)(a=c[r]).hide||d.call(a,t,e,i);return h.drawOrigin&&(t.fillStyle="#f00",t.shadowBlur=0,t.shadowOffsetX=0,t.shadowOffsetY=0,t.fillRect(-2,-2,4,4)),t.restore(),this},p={poly:function(t,e,i,s){var r,n,a,o,h,l,d,f,p,m;for(o=e[this.verts[0]],l=i.x,f=i.y,m=c+i.z,p=((o.z||0)+m)*u,h=((o.x||0)+l)*p,d=((o.y||0)+f)*p,t.moveTo(h,d),r=n=1,a=this.verts.length-1;1<=a?n<=a:n>=a;r=1<=a?++n:--n)p=(((o=e[this.verts[r]]).z||0)+m)*u,h=((o.x||0)+l)*p,d=((o.y||0)+f)*p,t.lineTo(h,d);return this},part:function(t,e,i,s,r){var n,a,o,h,l,c,u,d,p,m,v,g;if(this.noClose=this.draw=!0,(l=null!=(d=(m=s.data).models)?d[this.model]:void 0)?(s.data=l,u=l.dirsParts[this.direction||0]):u=s.parts,u&&(g=e[this.vert],n={x:i.x+(g.x||0),y:i.y+(g.y||0),z:i.z+(g.z||0)},c=u[this.part])){for(v=s.parts,s.parts=u,o=0,h=(p=c.faces).length;o<h;o++)a=p[o],f.call(a,t,s,n,r);s.parts=v}return s.data=m,this},node:function(t,e,i,s,r){return x(e[this.vert],i).apply(t),m.node.call(this,t,s,r),this},attach:function(t,e,i){var s;return x(verts[this.vert],camera).apply(t),(s=e.attachment[this.attach])&&m.node.call(this,t,e,i,s),this},elipse:function(t,e,i){var s,r,n,a,o;return a=(n=x(e[this.vert1],i)).x,o=n.y,s=((n=x(e[this.vert2],i)).x-a)/2,r=(n.y-o)/2,t.ellipse(a+s,o+r,s,r,(this.rotation||0)*Math.PI/180,(this.startAngle||0)*Math.PI/180,(this.endAngle||360)*Math.PI/180,!this.clockwise),this}},f=function(t,e,i,s){var r,n;return t.save(),this.stroke,g.call(this,t,e),t.globalAlpha=s*(null===this.opacity?1:this.opacity),t.beginPath(),null!=(n=p[this.type||"poly"])&&n.call(this,t,e.data.verts,i,e,s),this.noClose||t.closePath(),"f"!==(r=this.draw||"f&s")&&"f&s"!==r||t.fill(),"s"!==r&&"f&s"!==r||t.stroke(),t.restore(),this},c=1/(u=5e-4),k={x:0,y:0,scale:1,apply:function(t){return t.transform(this.scale,0,0,this.scale,this.x,this.y)}},h=function(){class t{static transform(t,e,i,s){return i=(c+i+s.z)*u,k.x=(t+s.x)*i,k.y=(e+s.y)*i,k.scale=i,k}constructor(t){this.data=t}setData(t){return this.data=t,this.setAngle(this.angle)}setAngle(t){var e,i,s,r;return this.angle=t%=360,this.animation.setAngle(t),(i=this.data.dirs)?(s=i.lenght)>1?((t+=(e=360/s)>>1)<0&&(t+=360),this.model=i[Math.floor(t/e)]):this.model=i[0]:this.model=null,(r=this.data.dirsParts)?(s=r.lenght)>1?((t+=(e=360/s)>>1)<0&&(t+=360),this.parts=r[Math.floor(t/e)]):this.parts=r[0]:this.parts=null}draw2D(t,e=1){var i,s,r,n;if(this.model){for(i in n=[],r=this.model)(s=r[i]).hide?n.push(void 0):n.push(d.call(s,t,this,e));return n}}drawNode(t,e,i=1){if(this.model&&(e=this.model[e]))return d.call(e,t,this,i)}drawPart(t,e,i,s=1){var r,n,a,o,h;for(h=[],n=0,a=(o=e.faces).length;n<a;n++)r=o[n],h.push(f.call(r,t,this,i,s));return h}drawParts(t,e,i=1){var s,r,n,a,o;if(this.parts){for(s in o=[],a=this.parts)(n=a[s]).hide?o.push(void 0):o.push(function(){var s,a,o,h;for(h=[],s=0,a=(o=n.faces).length;s<a;s++)r=o[s],h.push(f.call(r,t,this,e,i));return h}.call(this));return o}}}return t.prototype.attachment=[],t.prototype.animation=new e,t.prototype.angle=0,t}.call(void 0),y=h.transform,x=function(t,e){return y(t.x||0,t.y||0,t.z||0,e)},P=function(){class t{on(t,e){var i;return e&&((i=this.handlers[t])||(this.handlers[t]=i=[]),i.indexOf(e)<0&&i.push(e)),this}off(t,e){var i,s;return e&&(i=this.handlers[t])&&(s=i.indexOf(e))>=0&&i.splice(s,1),this}trigger(t,e){var i,s,r;if(i=this.handlers[t])for(s=0,r=i.length;s<r;s++)i[s].apply(this,e);return this}removeEvent(t){return delete this.handlers[t],this}}return t.prototype.handlers=[],t}.call(void 0),T=function(){var t,e;return e=0,t=0,class extends P{reset(){return e=t=0}getPercent(){return 1-(0!==t?e/t:0)}updatePercent(){return this.trigger("changepercent",[this.getPercent()])}load(i){var s;return s=this,e++,t++,function(){return null!=i&&i.apply(s,arguments),--e<=0&&(s.reset(),s.trigger("load")),s.updatePercent()}}loadJson(t,e){return e=this.load(e),$.getJSON(t+".json").done(e).fail((function(){return e(null)}))}loadImage(t,e){var i;return e=this.load(e),(i=new Image).onload=function(){return e(i)},i.src=t,i}}}.call(void 0),$(document).ready((function(){var t,e,s,r,n,a,o,c,u,d,f,p,m,v,g,w,y,x,k;return t=$("#canvas"),n=t.get(0),a=n.getContext("2d",{alpha:!1}),m="models/test1",u=new T,f=new h,p=new l,e=null,s={canvas:n,g:a,x:0,y:0,z:0},(k=function(){return n.width=$(window).width(),n.height=$(window).height()-$("#canvas").offset().top})(),$(window).on("resize",k),v=function(){return p.load(u,m)},u.on("load",(function(){var t,i,s;if(f.setData(p),f.animation.data){for(t in(i=$(".js-frame-container")).empty(),s=f.animation.data)s[t],i.append(`<a class='dropdown-item js-frame-select' href='#'>${t}</a>`);return f.animation.setAnim(e,f.angle),$(".js-frame-select").click((function(){return e=$(this).text(),f.animation.setAnim(e,f.angle)}))}})),console.log(f),d=setInterval(v,500),(x=function(t){var e,i,r;return a.save(),r=n.width,i=n.height,e=r/2,0,a.fillStyle="#fff",a.fillRect(0,0,r,i),a.beginPath(),a.lineWidth=2,a.strokeStyle="#f00",a.moveTo(e,0),a.lineTo(e,i),a.moveTo(0,0),a.lineTo(r,0),a.stroke(),a.translate(e,0),f.animation.play(),f.drawParts(a,s),h.transform(0,0,0,s).apply(a),f.draw2D(a),a.restore(),window.requestAnimationFrame(x)})(0),w=y=0,g=function(t){return s.x+=t.clientX-w,s.y+=t.clientY-y,w=t.clientX,y=t.clientY},t.on("mousedown",(function(e){return w=e.clientX,y=e.clientY,t.on("mousemove",g)})),t.on("touchstart",(function(t){return w=t.touches[0].clientX,y=t.touches[0].clientY})),t.on("touchmove",(function(t){return g(t.touches[0])})),t.on("mouseup",(function(){return t.off("mousemove",g)})),$(".js-z-number").val(s.z).on("input change",(function(){return s.z=+$(this).val()})),$(".js-angle-number").val(f.angle).on("input change",(function(){return f.setAngle+$(this).val()})),$(".js-model-select").click((function(){return p=new l,m=$(this).data("file")})),$(".js-anim-select").click((function(){var t;return t=$(this).data("file"),f.animation.data=new i,f.animation.data.load(u,t),$(".js-anim-refresh").data("file",t),$(".js-refresh-model").prop("checked",!1),clearInterval(d)})),h.drawOrigin=!0,$(".js-draw-origin").change((function(){return h.drawOrigin=$(this).prop("checked")})),$(".js-refresh-model").change((function(){return $(this).prop("checked")?d=setInterval(v,500):clearInterval(d)})),$(".js-reset-pos").click((function(){return s.x=s.y=s.z=0,$(".js-z-number").val("0")})),o=!1,$(".js-full-screen").click((function(){return o?r():c(document.documentElement),o=!o})),c=function(t){return t.requestFullScreen?t.requestFullScreen():t.mozRequestFullScreen?t.mozRequestFullScreen():t.webkitRequestFullScreen?t.webkitRequestFullScreen():void 0},r=function(){return document.cancelFullScreen?document.cancelFullScreen():document.mozCancelFullScreen?document.mozCancelFullScreen():document.webkitCancelFullScreen?document.webkitCancelFullScreen():void 0}}))}();
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNwcml0ZS5jb2ZmZWUiLCJhbmltYXRpb24uY29mZmVlIiwibW9kZWwuY29mZmVlIiwiZXZlbnRzLmNvZmZlZSIsImxvYWRlci5jb2ZmZWUiLCJtYWluLmNvZmZlZSJdLCJuYW1lcyI6WyJTcHJpdGUiLCJBbmltYXRpb24iLCJBbmltYXRpb25EYXRhIiwiZ2V0VGltZSIsIm1ha2VFYXNlSW5PdXQiLCJtYWtlRWFzZU91dCIsInNldFRpbWluZ0Z1bmN0aW9uIiwidGltaW5nRnVuY3Rpb25zIiwiTW9kZWwiLCJNb2RlbERhdGEiLCJaX09SSUdJTiIsIlpfVFJBTlNGT1JNIiwiZHJhd05vZGUiLCJkcmF3UGFydCIsImRyYXdQYXJ0VHlwZSIsImRyYXdUeXBlT2JqIiwiaW5pdFN0eWxlIiwic2V0RHJhd1N0eWxlIiwic3R5bGVUeXBlRnVuYyIsInRyYW5zZm9ybSIsInRyYW5zZm9ybVZlcnQiLCJ0cnNmT2JqIiwiRXZlbnRFbW1pdGVyIiwiTG9hZGVyIiwiW29iamVjdCBPYmplY3RdIiwibG9hZGVyIiwiZmlsZSIsInNwcml0ZSIsImNhY2hlIiwibG9hZCIsImxvYWRKc29uIiwiZGF0YTEiLCJ0aGlzIiwiZGF0YSIsImxvYWRJbWFnZSIsInRleHR1cmUiLCJnIiwiZnJhbWUiLCJ4IiwieSIsImluZGV4IiwiY29uc3RydWN0b3IiLCJPYmplY3QiLCJkcmF3SW1hZ2UiLCJ3IiwiaCIsImN4IiwiY3kiLCJBcnJheSIsImRyYXciLCJNYXRoIiwiZmxvb3IiLCJsZW5naHQiLCJTdHJpbmciLCJhbmltRGF0YSIsImtleSIsInJlc3VsdHMiLCJ2YWx1ZSIsIkRhdGUiLCJ0aW1pbmciLCJ0aW1lIiwibmFtZSIsImxpbmVhciIsImVhc2VPdXQiLCJlYXNlSW5PdXQiLCJzaW4iLCJhY29zIiwiYSIsImIiLCJwb3ciLCJzdGFydFRpbWUiLCJkZWx0YVRpbWUiLCJhbmdsZSIsImFuaW0iLCJyZXNldCIsImR1cmF0aW9uIiwic2V0QW5nbGUiLCJkQW5nbGUiLCJkaXJzIiwibiIsImRlbHRhIiwic2NhbGUiLCJsb29wIiwibm9kZSIsIm5vZGVQYXRoIiwiaSIsImxlbiIsInBvaW50IiwicHJvcCIsInByb3BzIiwicHJvcHNVc2VkIiwicmVmIiwicmVmMSIsInRGdW5jIiwidGltZXN0b3BzIiwidG9WYWwiLCJsZW5ndGgiLCJlbmQiLCJzdGFydCIsImZ1bmMiLCJOdW1iZXIiLCJ3b3JrIiwidG8iLCJhT2JqIiwibW9kZWwiLCJpbWFnZSIsImltYWdlc0RhdGEiLCJqIiwibW9kZWxzRGF0YSIsIm5vZGVzIiwibm9kZXNMb2FkIiwic3ByaXRlc0RhdGEiLCJpbWFnZXMiLCJzcHJpdGVzIiwibW9kZWxzIiwiYmVmb3JlIiwiYWZ0ZXIiLCJsaW5lIiwibW92ZVRvIiwieDEiLCJ5MSIsImxpbmVUbyIsIngyIiwieTIiLCJyZWN0Iiwid2lkdGgiLCJoZWlnaHQiLCJyZWN0Um91bmQiLCJyIiwibm9DbG9zZSIsInJhZGl1cyIsImFyY1RvIiwiYXJjIiwic3RhcnRBbmdsZSIsIlBJIiwiZW5kQW5nbGUiLCJjbG9ja3dpc2UiLCJlbGlwc2UiLCJlbGxpcHNlIiwicngiLCJyeSIsInJvdGF0aW9uIiwicGF0aCIsIlBhdGgyRCIsImZpbGwiLCJzdHJva2UiLCJvcGFjaXR5IiwibSIsInJvb3QiLCJ0RGF0YSIsInRNb2RlbCIsImRpcmVjdGlvbiIsInRyYW5zbGF0ZSIsImNhbGwiLCJhdHRhY2giLCJhdHRhY2htZW50IiwidGV4dCIsImRyYXdUZXh0IiwiZm9udCIsInRleHRBbGlnbiIsInRleHRCYXNlbGluZSIsImZpbGxUZXh0IiwibWF4V2lkdGgiLCJzdHJva2VUZXh0IiwiY29sb3JTdG9wIiwiZ3JhZGllbnQiLCJjcmVhdGVMaW5lYXJHcmFkaWVudCIsIngwIiwieTAiLCJhZGRDb2xvclN0b3AiLCJwb3MiLCJjb2xvciIsInJhZGlhbCIsImNyZWF0ZVJhZGlhbEdyYWRpZW50IiwicjAiLCJyMSIsInBhdHRlcm4iLCJjcmVhdGVQYXR0ZXJuIiwicmVwZXRpdGlvbiIsInN0eWxlIiwic3Ryb2tlU3R5bGUiLCJmaWxsU3R5bGUiLCJsaW5lV2lkdGgiLCJsaW5lQ2FwIiwibGluZUpvaW4iLCJsaW5lRGFzaE9mZnNldCIsIm1Bc2NhbGUiLCJyZWYyIiwic2F2ZSIsImFuaW1hdGlvbiIsImFuaW1hdGUiLCJzY2FsZVgiLCJza2V3WSIsInNrZXdYIiwic2NhbGVZIiwib3JpZ1giLCJvcmlnWSIsIm1vZGVsQW5nbGVTY2FsZSIsInJvdGF0ZSIsIm5vU2hhZG93Iiwic2hhZG93Qmx1ciIsInNoYWRvd09mZnNldFgiLCJzaGFkb3dPZmZzZXRZIiwic2hhZG93Q29sb3IiLCJnbG9iYWxBbHBoYSIsInJlY2l2ZVByb3BzIiwiaGlkZSIsImJlZ2luUGF0aCIsImNsb3NlUGF0aCIsImNsaXAiLCJkcmF3T3JpZ2luIiwiZmlsbFJlY3QiLCJyZXN0b3JlIiwicG9seSIsInZlcnRzIiwiY2FtZXJhIiwidiIsInhjIiwieWMiLCJ6IiwienQiLCJwYXJ0IiwiYyIsImZhY2UiLCJwYXJ0cyIsInRQYXJ0cyIsImRpcnNQYXJ0cyIsInZlcnQiLCJhcHBseSIsInZlcnQxIiwidmVydDIiLCJfIiwiZXZlbnQiLCJjYWxsYmFjayIsImhhbmRsZXIiLCJoYW5kbGVycyIsImluZGV4T2YiLCJwdXNoIiwic3BsaWNlIiwiYXJncyIsImxvYWRSZXNOdW1iZXIiLCJhbGxSZXNMb2FkZXIiLCJ0cmlnZ2VyIiwiZ2V0UGVyY2VudCIsIl90aGlzIiwiYXJndW1lbnRzIiwidXBkYXRlUGVyY2VudCIsIiQiLCJnZXRKU09OIiwiZG9uZSIsImZhaWwiLCJpbWciLCJJbWFnZSIsIm9ubG9hZCIsInNyYyIsImRvY3VtZW50IiwicmVhZHkiLCIkY2FudmFzIiwiYW5pbWF0aW9uRnJhbWUiLCJjYW5jZWxGdWxsc2NyZWVuIiwiY2FudmFzIiwiY29udGV4dCIsImZ1bGxzY3JlZW4iLCJsYXVuY2hGdWxsU2NyZWVuIiwibVJlZnJlc2hJbnRlcnZhbCIsIm1vZGVsRGF0YSIsIm1vZGVsRmlsZSIsIm1vZGVsUmVmcmVzaCIsIm1vdmVDYW1lcmEiLCJvbGRNb3VzZVgiLCJvbGRNb3VzZVkiLCJyZW5kZXIiLCJyZXNpemUiLCJnZXQiLCJnZXRDb250ZXh0IiwiYWxwaGEiLCJ3aW5kb3ciLCJvZmZzZXQiLCJ0b3AiLCJvbiIsImNvbnRhaW5lciIsInNldERhdGEiLCJlbXB0eSIsImFwcGVuZCIsInNldEFuaW0iLCJjbGljayIsImNvbnNvbGUiLCJsb2ciLCJzZXRJbnRlcnZhbCIsInBsYXkiLCJkcmF3UGFydHMiLCJkcmF3MkQiLCJyZXF1ZXN0QW5pbWF0aW9uRnJhbWUiLCJlIiwiY2xpZW50WCIsImNsaWVudFkiLCJ0b3VjaGVzIiwib2ZmIiwidmFsIiwiY2xlYXJJbnRlcnZhbCIsImNoYW5nZSIsImRvY3VtZW50RWxlbWVudCIsImVsZW1lbnQiLCJyZXF1ZXN0RnVsbFNjcmVlbiIsIm1velJlcXVlc3RGdWxsU2NyZWVuIiwid2Via2l0UmVxdWVzdEZ1bGxTY3JlZW4iLCJjYW5jZWxGdWxsU2NyZWVuIiwibW96Q2FuY2VsRnVsbFNjcmVlbiIsIndlYmtpdENhbmNlbEZ1bGxTY3JlZW4iXSwibWFwcGluZ3MiOiJ5QkFBQSxJQUFBQSxFQ0FBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQ0FBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQUFBQyxFQ0FBQyxFQ0FBQyxFSkFNdkIsRUFBQSxXQUFOLE1BQUFBLEVBR1F3QixZQUFDQyxFQUFRQyxPQUNmQyxTQUFBQSxFQUFTM0IsRUFBTzRCLE1BQU1GLE9BRXJCQyxFQUFTLElBQUkzQixHQUNONkIsS0FBS0osRUFBUUMsR0FDcEIxQixFQUFPNEIsTUFBTUYsR0FBUUMsR0FDdEJBLEVBRURILEtBQU9DLEVBQVFDLFVBQ2RELEVBQU9LLFNBQVNKLEVBQU1LLElBQUNDLEtBQUNDLEtBQUFGLElBQ3hCTixFQUFPUyxVQUFVUixFQUFPLE9BQVFTLElBQUNILEtBQUNHLFFBQUFBLElBRW5DWCxLQUFPWSxF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aWxlIjoibWFpbi5qcyIsInNvdXJjZXNDb250ZW50IjpbImNsYXNzIFNwcml0ZVxyXG5cdEBjYWNoZTogW11cclxuXHJcblx0QGxvYWQ6IChsb2FkZXIsIGZpbGUpIC0+XHJcblx0XHRzcHJpdGUgPSBTcHJpdGUuY2FjaGVbZmlsZV1cclxuXHRcdHVubGVzcyBzcHJpdGVcclxuXHRcdFx0c3ByaXRlID0gbmV3IFNwcml0ZVxyXG5cdFx0XHRzcHJpdGUubG9hZCBsb2FkZXIsIGZpbGVcclxuXHRcdFx0U3ByaXRlLmNhY2hlW2ZpbGVdID0gc3ByaXRlXHJcblx0XHRzcHJpdGVcclxuXHJcblx0bG9hZDogKGxvYWRlciwgZmlsZSkgLT5cclxuXHRcdGxvYWRlci5sb2FkSnNvbiBmaWxlLCAoQGRhdGEpID0+XHJcblx0XHRsb2FkZXIubG9hZEltYWdlIGZpbGUgKyAnLnBuZycsIChAdGV4dHVyZSkgPT5cclxuXHJcblx0ZHJhdzogKGcsIGZyYW1lLCB4LCB5LCBpbmRleCA9IDApIC0+XHJcblx0XHRkYXRhID0gQGRhdGFcclxuXHRcdGlmIGRhdGFcclxuXHRcdFx0c3dpdGNoIGZyYW1lLmNvbnN0cnVjdG9yXHJcblx0XHRcdFx0d2hlbiBPYmplY3RcclxuXHRcdFx0XHRcdGcuZHJhd0ltYWdlIEB0ZXh0dXJlLFxyXG5cdFx0XHRcdFx0XHRmcmFtZS54LCBmcmFtZS55LCBmcmFtZS53LCBmcmFtZS5oLFxyXG5cdFx0XHRcdFx0XHR4ICsgZnJhbWUuY3gsIHkgKyBmcmFtZS5jeSwgZnJhbWUudywgZnJhbWUuaFxyXG5cdFx0XHRcdHdoZW4gQXJyYXlcclxuXHRcdFx0XHRcdEBkcmF3IGcsIGZyYW1lW01hdGguZmxvb3IoaW5kZXgpICUgZnJhbWUubGVuZ2h0XSwgeCwgeVxyXG5cdFx0XHRcdHdoZW4gU3RyaW5nXHJcblx0XHRcdFx0XHRAZHJhdyBnLCBkYXRhW2ZyYW1lXSwgeCwgeSwgaW5kZXhcclxuXHRcdHRoaXNcclxuXHJcbmV4cG9ydCB7IFNwcml0ZSB9IiwiY2xhc3MgQW5pbWF0aW9uRGF0YVxyXG5cdEBjYWNoZTogW11cclxuXHJcblx0QGxvYWQ6IChsb2FkZXIsIGZpbGUpIC0+XHJcblx0XHRhbmltRGF0YSA9IEFuaW1hdGlvbkRhdGEuY2FjaGVbZmlsZV1cclxuXHRcdHVubGVzcyBhbmltRGF0YVxyXG5cdFx0XHRhbmltRGF0YSA9IG5ldyBBbmltYXRpb25EYXRhXHJcblx0XHRcdGFuaW1EYXRhLmxvYWQgbG9hZGVyLCBmaWxlXHJcblx0XHRcdEFuaW1hdGlvbkRhdGEuY2FjaGVbZmlsZV0gPSBhbmltRGF0YVxyXG5cdFx0YW5pbURhdGFcclxuXHJcblx0bG9hZDogKGxvYWRlciwgZmlsZSkgLT5cclxuXHRcdGxvYWRlci5sb2FkSnNvbiBmaWxlLCAoZGF0YSkgPT5cclxuXHRcdFx0aWYgZGF0YVxyXG5cdFx0XHRcdGZvciBrZXksIHZhbHVlIG9mIGRhdGFcclxuXHRcdFx0XHRcdHRoaXNba2V5XSA9IHZhbHVlXHJcblxyXG5nZXRUaW1lID0gLT5cclxuXHRuZXcgRGF0ZSgpLmdldFRpbWUoKSAvIDEwMDBcclxuXHJcbm1ha2VFYXNlT3V0ID0gKHRpbWluZykgLT5cclxuXHQodGltZSkgLT5cclxuXHRcdDEgLSB0aW1pbmcoMSAtIHRpbWUpXHJcblxyXG5tYWtlRWFzZUluT3V0ID0gKHRpbWluZykgLT5cclxuXHQodGltZSkgLT5cclxuXHRcdGlmIHRpbWUgPCAwLjVcclxuXHRcdFx0dGltaW5nKDIgKiB0aW1lKSAvIDJcclxuXHRcdGVsc2VcclxuXHRcdFx0KDIgLSB0aW1pbmcoMiAqICgxIC0gdGltZSkpKSAvIDJcclxuXHJcblxyXG5zZXRUaW1pbmdGdW5jdGlvbiA9IChuYW1lLCB0aW1pbmcpIC0+XHJcblx0dGltaW5nRnVuY3Rpb25zW25hbWVdID0gdGltaW5nXHJcblx0dGltaW5nRnVuY3Rpb25zW25hbWUgKyAnRWFzZU91dCddID0gbWFrZUVhc2VPdXQgdGltaW5nXHJcblx0dGltaW5nRnVuY3Rpb25zW25hbWUgKyAnRWFzZUluT3V0J10gPSBtYWtlRWFzZUluT3V0IHRpbWluZ1xyXG5cclxudGltaW5nRnVuY3Rpb25zID1cclxuXHRsaW5lYXI6ICh0aW1lKSAtPlxyXG5cdFx0dGltZVxyXG5cclxuXHRlYXNlT3V0OiAodGltZSkgLT5cclxuXHRcdDEgLSB0aW1lXHJcblxyXG5cdGVhc2VJbk91dDogKHRpbWUpIC0+XHJcblx0XHRpZiB0aW1lIDwgMC41XHJcblx0XHRcdHRpbWUgKiAyXHJcblx0XHRlbHNlXHJcblx0XHRcdDIgLSB0aW1lICogMlxyXG5cclxuc2V0VGltaW5nRnVuY3Rpb24gJ3F1YWQnLCAodGltZSkgLT5cclxuXHR0aW1lICogdGltZVxyXG5cclxuc2V0VGltaW5nRnVuY3Rpb24gJ2NpcmNsZScsICh0aW1lKSAtPlxyXG5cdDEgLSBNYXRoLnNpbiBNYXRoLmFjb3MgdGltZVxyXG5cclxuc2V0VGltaW5nRnVuY3Rpb24gJ2JvdW5jZScsICh0aW1lKSAtPlxyXG5cdGEgPSAwXHJcblx0YiA9IDFcclxuXHR3aGlsZSB0cnVlXHJcblx0XHRpZiB0aW1lID49ICg3IC0gNCAqIGEpIC8gMTFcclxuXHRcdFx0cmV0dXJuIC1NYXRoLnBvdygoMTEgLSA2ICogYSAtIDExICogdGltZSkgLyA0LCAyKSArIE1hdGgucG93KGIsIDIpXHJcblx0XHRhICs9IGJcclxuXHRcdGIgLz0gMlxyXG5cclxuY2xhc3MgQW5pbWF0aW9uXHJcblx0QGdldFRpbWU6IGdldFRpbWVcclxuXHJcblx0bG9vcDogdHJ1ZVxyXG5cdHN0YXJ0VGltZTogMFxyXG5cdGR1cmF0aW9uOiAwXHJcblx0ZGVsdGFUaW1lOiAwXHJcblx0c2NhbGU6IDFcclxuXHJcblx0QHByb3BzOiBbXVxyXG5cdEBwcm9wc1VzZWQ6IFtdXHJcblxyXG5cdHJlc2V0OiAtPlxyXG5cdFx0QHN0YXJ0VGltZSA9IGdldFRpbWUoKVxyXG5cdFx0QGRlbHRhVGltZSA9IDBcclxuXHRcdHRoaXNcclxuXHJcblx0c2V0QW5pbTogKG5hbWUsIGFuZ2xlID0gMCwgZGF0YSA9IEBkYXRhKSAtPlxyXG5cdFx0QGFuaW0gPSBkYXRhP1tuYW1lXVxyXG5cdFx0QHJlc2V0KClcclxuXHRcdGlmIEBhbmltXHJcblx0XHRcdEBkdXJhdGlvbiA9IGlmIEBhbmltIHRoZW4gQGFuaW0uZHVyYXRpb24gZWxzZSAwXHJcblx0XHRcdEBzZXRBbmdsZSBhbmdsZVxyXG5cdFx0dGhpc1xyXG5cclxuXHRzZXRBbmdsZTogKGFuZ2xlKSAtPlxyXG5cdFx0QGZyYW1lID0gbnVsbFxyXG5cdFx0aWYgQGFuaW1cclxuXHRcdFx0YW5nbGUgPSBhbmdsZSAlIDM2MFxyXG5cdFx0XHRkaXJzID0gQGFuaW0uZGlyc1xyXG5cdFx0XHRpZiBkaXJzXHJcblx0XHRcdFx0biA9IGRpcnMubGVuZ2h0XHJcblx0XHRcdFx0aWYgbiA+IDFcclxuXHRcdFx0XHRcdGRBbmdsZSA9IDM2MCAvIG5cclxuXHRcdFx0XHRcdGFuZ2xlICs9IGRBbmdsZSA+PiAxXHJcblx0XHRcdFx0XHRpZiBhbmdsZSA8IDAgdGhlbiBhbmdsZSArPSAzNjBcclxuXHRcdFx0XHRcdEBmcmFtZSA9IGRpcnNbTWF0aC5mbG9vcihhbmdsZSAvIGRBbmdsZSldXHJcblx0XHRcdFx0ZWxzZVxyXG5cdFx0XHRcdFx0QGZyYW1lID0gZGlyc1swXVxyXG5cdFx0dGhpc1xyXG5cclxuXHRwbGF5OiAodGltZSkgLT5cclxuXHRcdHRpbWUgPSB0aW1lIHx8IGdldFRpbWUoKVxyXG5cdFx0QGRlbHRhVGltZSA9IGRlbHRhID0gKHRpbWUgLSBAc3RhcnRUaW1lKSAqIEBzY2FsZVxyXG5cdFx0ZHVyYXRpb24gPSBAZHVyYXRpb25cclxuXHRcdHVubGVzcyBkdXJhdGlvblxyXG5cdFx0XHRyZXR1cm4gZmFsc2VcclxuXHRcdGlmIGRlbHRhID4gZHVyYXRpb25cclxuXHRcdFx0aWYgQGxvb3BcclxuXHRcdFx0XHRAZGVsdGFUaW1lICU9IGR1cmF0aW9uXHJcblx0XHRcdGVsc2VcclxuXHRcdFx0XHRyZXR1cm4gZmFsc2VcclxuXHRcdHRydWVcclxuXHJcblx0YW5pbWF0ZTogKG5vZGUsIG5vZGVQYXRoID0gbm9kZS5ub2RlUGF0aCkgLT5cclxuXHRcdGZyYW1lID0gQGZyYW1lXHJcblx0XHRpZiBmcmFtZVxyXG5cdFx0XHR0aW1lc3RvcHMgPSBmcmFtZVtub2RlUGF0aF1cclxuXHRcdFx0aWYgdGltZXN0b3BzXHJcblx0XHRcdFx0ZGVsdGEgPSBAZGVsdGFUaW1lXHJcblx0XHRcdFx0cHJvcHMgPSBBbmltYXRpb24ucHJvcHNcclxuXHRcdFx0XHRwcm9wc1VzZWQgPSBBbmltYXRpb24ucHJvcHNVc2VkXHJcblx0XHRcdFx0Zm9yIHBvaW50IGluIHRpbWVzdG9wc1xyXG5cdFx0XHRcdFx0aWYgZGVsdGEgPj0gcG9pbnQuZW5kXHJcblx0XHRcdFx0XHRcdGZvciBuYW1lLCB0b1ZhbCBvZiBwb2ludC50b1xyXG5cdFx0XHRcdFx0XHRcdHVubGVzcyBwcm9wc1VzZWRbbmFtZV1cclxuXHRcdFx0XHRcdFx0XHRcdHByb3BzW25hbWVdID0gbm9kZVtuYW1lXVxyXG5cdFx0XHRcdFx0XHRcdFx0cHJvcHNVc2VkW25hbWVdID0gdHJ1ZVxyXG5cdFx0XHRcdFx0XHRcdG5vZGVbbmFtZV0gPSB0b1ZhbFxyXG5cdFx0XHRcdFx0ZWxzZSBpZiBkZWx0YSA+PSBwb2ludC5zdGFydFxyXG5cdFx0XHRcdFx0XHRpZiBwb2ludC5mdW5jXHJcblx0XHRcdFx0XHRcdFx0dEZ1bmMgPSB0aW1pbmdGdW5jdGlvbnNbcG9pbnQuZnVuY11cclxuXHRcdFx0XHRcdFx0ZWxzZVxyXG5cdFx0XHRcdFx0XHRcdHRGdW5jID0gdGltaW5nRnVuY3Rpb25zLmxpbmVhclxyXG5cdFx0XHRcdFx0XHQjXHJcblx0XHRcdFx0XHRcdGZvciBuYW1lLCB0b1ZhbCBvZiBwb2ludC50b1xyXG5cdFx0XHRcdFx0XHRcdHByb3AgPSBub2RlW25hbWVdXHJcblx0XHRcdFx0XHRcdFx0dW5sZXNzIHByb3BzVXNlZFtuYW1lXVxyXG5cdFx0XHRcdFx0XHRcdFx0cHJvcHNbbmFtZV0gPSBwcm9wXHJcblx0XHRcdFx0XHRcdFx0XHRwcm9wc1VzZWRbbmFtZV0gPSB0cnVlXHJcblx0XHRcdFx0XHRcdFx0cHJvcCB8fD0gMFxyXG5cdFx0XHRcdFx0XHRcdGlmIHRvVmFsLmNvbnN0cnVjdG9yID09IE51bWJlclxyXG5cdFx0XHRcdFx0XHRcdFx0dGltZSA9IHRGdW5jKChkZWx0YSAtIHBvaW50LnN0YXJ0KSAvIChwb2ludC5lbmQgLSBwb2ludC5zdGFydCkpXHJcblx0XHRcdFx0XHRcdFx0XHRub2RlW25hbWVdID0gKHRvVmFsIC0gcHJvcCkgKiB0aW1lICsgcHJvcFxyXG5cdFx0XHRcdFx0XHRcdGVsc2VcclxuXHRcdFx0XHRcdFx0XHRcdG5vZGVbbmFtZV0gPSB0b1ZhbFxyXG5cdFx0dGhpc1xyXG5cclxuXHRyZWNpdmVQcm9wczogKG5vZGUpIC0+XHJcblx0XHRwcm9wcyA9IEFuaW1hdGlvbi5wcm9wc1xyXG5cdFx0cHJvcHNVc2VkID0gQW5pbWF0aW9uLnByb3BzVXNlZFxyXG5cdFx0Zm9yIG5hbWUsIHVzZSBvZiBwcm9wc1VzZWRcclxuXHRcdFx0aWYgdXNlXHJcblx0XHRcdFx0bm9kZVtuYW1lXSA9IHByb3BzW25hbWVdXHJcblx0XHRcdFx0cHJvcHNVc2VkW25hbWVdID0gZmFsc2VcclxuXHRcdHRoaXNcclxuXHJcblx0Y3JlYXRlV29ya0ZyYW1lOiAtPlxyXG5cdFx0QGxvb3AgPSBmYWxzZVxyXG5cdFx0QGZyYW1lID1cclxuXHRcdFx0d29yazogW1xyXG5cdFx0XHRcdHtcclxuXHRcdFx0XHRcdHN0YXJ0OiAwXHJcblx0XHRcdFx0XHRlbmQ6IDBcclxuXHRcdFx0XHRcdHRvOiB7fVxyXG5cdFx0XHRcdH1cclxuXHRcdFx0XVxyXG5cdFx0dGhpc1xyXG5cclxuXHRyZXNldFdvcms6IC0+XHJcblx0XHRwcm9wc1VzZWQgPSBBbmltYXRpb24ucHJvcHNVc2VkXHJcblx0XHRmb3IgbmFtZSwgdXNlIG9mIHByb3BzVXNlZFxyXG5cdFx0XHRpZiB1c2UgdGhlbiBwcm9wc1VzZWRbbmFtZV0gPSBmYWxzZVxyXG5cdFx0dGhpc1xyXG5cclxuXHRjbGVhcldvcms6IC0+XHJcblx0XHRwcm9wc1VzZWQgPSBBbmltYXRpb24ucHJvcHNVc2VkXHJcblx0XHRhT2JqID0gQGZyYW1lLndvcmtbMF1cclxuXHRcdGFPYmouc3RhcnQgPSBhT2JqLmVuZCA9IDBcclxuXHRcdHRvID0gXHJcblx0XHRmb3IgbmFtZSwgXyBvZiB0b1xyXG5cdFx0XHRkZWxldGUgdG9bbmFtZV1cclxuXHRcdHRoaXNcclxuXHJcblx0YW5pbWF0ZVByb3BzOiAocHJvcHMsIGR1cmF0aW9uLCBmdW5jKSAtPlxyXG5cdFx0QGR1cmF0aW9uID0gZHVyYXRpb25cclxuXHRcdGFPYmogPSBAZnJhbWUud29ya1swXVxyXG5cdFx0YU9iai5lbmQgPSBkdXJhdGlvblxyXG5cdFx0YU9iai5mdW5jID0gZnVuY1xyXG5cdFx0dG8gPSBhT2JqLnRvXHJcblx0XHRmb3IgbmFtZSwgcHJvcCBvZiBwcm9wc1xyXG5cdFx0XHR0b1tuYW1lXSA9IHByb3BcclxuXHRcdEByZXNldCgpXHJcblx0XHR0aGlzXHJcblxyXG5leHBvcnQgeyBBbmltYXRpb25EYXRhLCBBbmltYXRpb24gfSIsImltcG9ydCB7IFNwcml0ZSB9IGZyb20gJy4vc3ByaXRlJ1xyXG5pbXBvcnQgeyBBbmltYXRpb24gfSBmcm9tICcuL2FuaW1hdGlvbidcclxuXHJcbmNsYXNzIE1vZGVsRGF0YVxyXG5cdEBjYWNoZTogW11cclxuXHJcblx0QGxvYWQ6IChsb2FkZXIsIGZpbGUpIC0+XHJcblx0XHRtb2RlbCA9IE1vZGVsRGF0YS5jYWNoZVtmaWxlXVxyXG5cdFx0dW5sZXNzIG1vZGVsXHJcblx0XHRcdG1vZGVsID0gbmV3IE1vZGVsRGF0YVxyXG5cdFx0XHRtb2RlbC5sb2FkIGxvYWRlciwgZmlsZVxyXG5cdFx0XHRNb2RlbERhdGEuY2FjaGVbZmlsZV0gPSBtb2RlbFxyXG5cdFx0bW9kZWxcclxuXHJcblx0bG9hZDogKGxvYWRlciwgZmlsZSkgLT5cclxuXHRcdGxvYWRlci5sb2FkSnNvbiBmaWxlLCAoZGF0YSkgPT5cclxuXHRcdFx0aWYgZGF0YVxyXG5cdFx0XHRcdGZvciBrZXksIHZhbHVlIG9mIGRhdGFcclxuXHRcdFx0XHRcdHRoaXNba2V5XSA9IHZhbHVlXHJcblxyXG5cdFx0XHRcdGlmIEBpbWFnZXNcclxuXHRcdFx0XHRcdGltYWdlc0RhdGEgPSBAaW1hZ2VzXHJcblx0XHRcdFx0XHRAaW1hZ2VzID0gW11cclxuXHRcdFx0XHRcdGZvciBrZXksIGltYWdlIG9mIGltYWdlc0RhdGFcclxuXHRcdFx0XHRcdFx0QGltYWdlc1trZXldID0gbG9hZGVyLmxvYWRJbWFnZSBpbWFnZVxyXG5cclxuXHRcdFx0XHRpZiBAc3ByaXRlc1xyXG5cdFx0XHRcdFx0c3ByaXRlc0RhdGEgPSBAc3ByaXRlc1xyXG5cdFx0XHRcdFx0QHNwcml0ZXMgPSBbXVxyXG5cdFx0XHRcdFx0Zm9yIGtleSwgc3ByaXRlIG9mIHNwcml0ZXNEYXRhXHJcblx0XHRcdFx0XHRcdEBzcHJpdGVzW2tleV0gPSBTcHJpdGUubG9hZCBsb2FkZXIsIHNwcml0ZVxyXG5cclxuXHRcdFx0XHRpZiBAbW9kZWxzXHJcblx0XHRcdFx0XHRtb2RlbHNEYXRhID0gQG1vZGVsc1xyXG5cdFx0XHRcdFx0QG1vZGVscyA9IFtdXHJcblx0XHRcdFx0XHRmb3Iga2V5LCBtb2RlbCBvZiBtb2RlbHNEYXRhXHJcblx0XHRcdFx0XHRcdEBtb2RlbHNba2V5XSA9IE1vZGVsRGF0YS5sb2FkIGxvYWRlciwgbW9kZWxcclxuXHJcblx0XHRcdFx0bm9kZXNMb2FkID0gKG5vZGVzLCBub2RlUGF0aCA9ICcnKSAtPlxyXG5cdFx0XHRcdFx0Zm9yIG5hbWUsIG5vZGUgb2Ygbm9kZXNcclxuXHRcdFx0XHRcdFx0bm9kZS5ub2RlUGF0aCA9IG5vZGVQYXRoICsgbmFtZVxyXG5cdFx0XHRcdFx0XHRpZiBub2RlLmJlZm9yZVxyXG5cdFx0XHRcdFx0XHRcdG5vZGVzTG9hZCBub2RlLmJlZm9yZSwgbm9kZS5ub2RlUGF0aCArICc8J1xyXG5cdFx0XHRcdFx0XHRpZiBub2RlLmFmdGVyXHJcblx0XHRcdFx0XHRcdFx0bm9kZXNMb2FkIG5vZGUuYWZ0ZXIsIG5vZGUubm9kZVBhdGggKyAnPidcclxuXHJcblx0XHRcdFx0aWYgQGRpcnNcclxuXHRcdFx0XHRcdGZvciBub2RlcyBpbiBAZGlyc1xyXG5cdFx0XHRcdFx0XHRub2Rlc0xvYWQgbm9kZXNcclxuXHJcblxyXG5kcmF3VHlwZU9iaiA9XHJcblx0bGluZTogKGcpIC0+XHJcblx0XHRnLm1vdmVUbyBAeDEgfHwgMCwgQHkxIHx8IDBcclxuXHRcdGcubGluZVRvIEB4MiB8fCAwLCBAeTIgfHwgMFxyXG5cdFx0dGhpc1xyXG5cclxuXHRyZWN0OiAoZykgLT5cclxuXHRcdGcucmVjdCBAeCB8fCAwLCBAeSB8fCAwLCBAd2lkdGggfHwgMSwgQGhlaWdodCB8fCAxXHJcblx0XHR0aGlzXHJcblxyXG5cdHJlY3RSb3VuZDogKGcpIC0+XHJcblx0XHRAbm9DbG9zZSA9IGZhbHNlXHJcblx0XHR4ID0gQHggfHwgMFxyXG5cdFx0eSA9IEB5IHx8IDBcclxuXHRcdHcgPSBAd2lkdGhcclxuXHRcdGggPSBAaGVpZ2h0XHJcblx0XHRyID0gQHJhZGl1c1xyXG5cdFx0aWYgdyA8IDIgKiByIHRoZW4gciA9IHcgLyAyXHJcblx0XHRpZiBoIDwgMiAqIHIgdGhlbiByID0gaCAvIDJcclxuXHJcblx0XHRnLm1vdmVUbyB4ICsgciwgeVxyXG5cdFx0Zy5hcmNUbyAgeCArIHcsIHksICAgICB4ICsgdywgeSArIGgsIHJcclxuXHRcdGcuYXJjVG8gIHggKyB3LCB5ICsgaCwgeCwgICAgIHkgKyBoLCByXHJcblx0XHRnLmFyY1RvICB4LCAgICAgeSArIGgsIHgsICAgICB5LCAgICAgclxyXG5cdFx0Zy5hcmNUbyAgeCwgICAgIHksICAgICB4ICsgdywgeSwgICAgIHJcclxuXHRcdHRoaXNcclxuXHJcblx0YXJjOiAoZykgLT5cclxuXHRcdGcuYXJjKFxyXG5cdFx0XHRAeCB8fCAwLFxyXG5cdFx0XHRAeSB8fCAwLFxyXG5cdFx0XHRAcmFkaXVzLFxyXG5cdFx0XHQoQHN0YXJ0QW5nbGUgfHwgMCkgKiBNYXRoLlBJIC8gMTgwLFxyXG5cdFx0XHQoQGVuZEFuZ2xlIHx8IDM2MCkgKiBNYXRoLlBJIC8gMTgwLFxyXG5cdFx0XHRpZiBAY2xvY2t3aXNlIHRoZW4gZmFsc2UgZWxzZSB0cnVlKVxyXG5cdFx0dGhpc1xyXG5cclxuXHRlbGlwc2U6IChnKSAtPlxyXG5cdFx0Zy5lbGxpcHNlKFxyXG5cdFx0XHRAeCB8fCAwLFxyXG5cdFx0XHRAeSB8fCAwLFxyXG5cdFx0XHRAcngsXHJcblx0XHRcdEByeSxcclxuXHRcdFx0KEByb3RhdGlvbiB8fCAwKSAqIE1hdGguUEkgLyAxODAsXHJcblx0XHRcdChAc3RhcnRBbmdsZSB8fCAwKSAqIE1hdGguUEkgLyAxODAsXHJcblx0XHRcdChAZW5kQW5nbGUgfHwgMzYwKSAqIE1hdGguUEkgLyAxODAsXHJcblx0XHRcdGlmIEBjbG9ja3dpc2UgdGhlbiBmYWxzZSBlbHNlIHRydWUpXHJcblx0XHR0aGlzXHJcblxyXG5cdHBhdGg6IChnKSAtPlxyXG5cdFx0eCA9IEB4IHx8IDBcclxuXHRcdHkgPSBAeSB8fCAwXHJcblx0XHRpZiB0eXBlb2YgQHBhdGggPT0gJ3N0cmluZydcclxuXHRcdFx0QHBhdGggPSBuZXcgUGF0aDJEIEBwYXRoXHJcblx0XHQjXHJcblx0XHRAbm9DbG9zZSA9IHRydWVcclxuXHRcdGRyYXcgPSBAZHJhdyB8fCAnZiZzJ1xyXG5cdFx0aWYgZHJhdyA9PSAnZicgfHwgZHJhdyA9PSAnZiZzJ1xyXG5cdFx0XHRnLmZpbGwgQHBhdGhcclxuXHRcdGlmIGRyYXcgPT0gJ3MnIHx8IGRyYXcgPT0gJ2YmcydcclxuXHRcdFx0Zy5zdHJva2UgQHBhdGhcclxuXHRcdHRoaXNcclxuXHJcblx0bm9kZTogKGcsIG1vZGVsLCBvcGFjaXR5LCBkYXRhKSAtPlxyXG5cdFx0QG5vQ2xvc2UgPSBAZHJhdyA9IHRydWVcclxuXHRcdCMgU2F2ZSBjdXJyZW50IG1vZGVsIGRhdGFcclxuXHRcdHREYXRhID0gbW9kZWwuZGF0YVxyXG5cdFx0dE1vZGVsID0gbW9kZWwubW9kZWxcclxuXHRcdCMgU2VsZWN0IG1vZGVsXHJcblx0XHRtID0gZGF0YSB8fCB0RGF0YS5tb2RlbHM/W0Btb2RlbF1cclxuXHRcdGlmIG1cclxuXHRcdFx0bW9kZWwuZGF0YSA9IG1cclxuXHRcdFx0bW9kZWwubW9kZWwgPSBub2RlcyA9IG0uZGlyc1tAZGlyZWN0aW9uIHx8IDBdXHJcblx0XHRlbHNlXHJcblx0XHRcdGlmIEBkaXJlY3Rpb25cclxuXHRcdFx0XHRub2RlcyA9IG1vZGVsLmRhdGEuZGlyc1tAZGlyZWN0aW9uXVxyXG5cdFx0XHRlbHNlXHJcblx0XHRcdFx0bm9kZXMgPSBtb2RlbC5tb2RlbFxyXG5cdFx0aWYgbm9kZXNcclxuXHRcdFx0IyBTZWxlY3Qgbm9kZSBpbiBtb2RlbFxyXG5cdFx0XHRub2RlID0gQG5vZGVcclxuXHRcdFx0aWYgdHlwZW9mIG5vZGUgPT0gJ3N0cmluZydcclxuXHRcdFx0XHRub2RlID0gbm9kZXNbbm9kZV1cclxuXHRcdFx0ZWxzZVxyXG5cdFx0XHRcdHJvb3QgPSBub2Rlc1xyXG5cdFx0XHRcdGZvciBwYXRoIGluIG5vZGVcclxuXHRcdFx0XHRcdHJvb3QgPSByb290W3BhdGhdXHJcblx0XHRcdFx0bm9kZSA9IHJvb3RcclxuXHRcdFx0aWYgbm9kZVxyXG5cdFx0XHRcdGcudHJhbnNsYXRlIEB4IHx8IDAsIEB5IHx8IDBcclxuXHRcdFx0XHRkcmF3Tm9kZS5jYWxsIG5vZGUsIGcsIG1vZGVsLCBvcGFjaXR5XHJcblx0XHRcdFx0IyBSZWNpdmUgbW9kZWwgZGF0YVxyXG5cdFx0bW9kZWwubW9kZWwgPSB0TW9kZWxcclxuXHRcdG1vZGVsLmRhdGEgPSB0RGF0YVxyXG5cdFx0dGhpc1xyXG5cclxuXHRhdHRhY2g6IChnLCBtb2RlbCwgb3BhY2l0eSkgLT5cclxuXHRcdGRhdGEgPSBtb2RlbC5hdHRhY2htZW50W0BhdHRhY2hdXHJcblx0XHRpZiBkYXRhXHJcblx0XHRcdGRyYXdUeXBlT2JqLm5vZGUuY2FsbCB0aGlzLCBnLCBtb2RlbCwgb3BhY2l0eSwgZGF0YVxyXG5cdFx0dGhpc1xyXG5cclxuXHRpbWFnZTogKGcsIG1vZGVsKSAtPlxyXG5cdFx0QG5vQ2xvc2UgPSBAZHJhdyA9IHRydWVcclxuXHRcdGltYWdlID0gbW9kZWwuZGF0YS5pbWFnZXNbQGltYWdlXVxyXG5cdFx0aWYgQHdpZHRoIHx8IEBoZWlnaHRcclxuXHRcdFx0Zy5kcmF3SW1hZ2UgaW1hZ2UsIEB4IHx8IDAsIEB5IHx8IDAsIEB3aWR0aCwgQGhlaWdodFxyXG5cdFx0ZWxzZVxyXG5cdFx0XHRnLmRyYXdJbWFnZSBpbWFnZSwgQHggfHwgMCwgQHkgfHwgMFxyXG5cdFx0dGhpc1xyXG5cclxuXHRzcHJpdGU6IChnLCBtb2RlbCkgLT5cclxuXHRcdEBub0Nsb3NlID0gQGRyYXcgPSB0cnVlXHJcblx0XHRzcHJpdGUgPSBAc3ByaXRlXHJcblx0XHRpZiBzcHJpdGUuY29uc3RydWN0b3IgPT0gU3RyaW5nXHJcblx0XHRcdEBzcHJpdGUgPSBzcHJpdGUgPSBtb2RlbC5kYXRhLnNwcml0ZXNbc3ByaXRlXVxyXG5cdFx0c3ByaXRlLmRyYXcgZywgQGZyYW1lLCBAeCB8fCAwLCBAeSB8fCAwLCBAaW5kZXhcclxuXHRcdHRoaXNcclxuXHJcblx0dGV4dDogKGcpIC0+XHJcblx0XHRpZiBAZHJhdyAhPSB0cnVlXHJcblx0XHRcdEBkcmF3VGV4dCA9IEBkcmF3XHJcblx0XHRkcmF3ID0gQGRyYXdUZXh0XHJcblx0XHRAbm9DbG9zZSA9IEBkcmF3ID0gdHJ1ZVxyXG5cdFx0I1xyXG5cdFx0aWYgQGZvbnQgdGhlbiBnLmZvbnQgPSBAZm9udFxyXG5cdFx0aWYgQHRleHRBbGlnbiB0aGVuIGcudGV4dEFsaWduID0gQHRleHRBbGlnblxyXG5cdFx0aWYgQHRleHRCYXNlbGluZSAhPSBudWxsIHRoZW4gZy50ZXh0QmFzZWxpbmUgPSBAdGV4dEJhc2VsaW5lXHJcblx0XHRpZiBAZGlyZWN0aW9uIHRoZW4gZy5kaXJlY3Rpb24gPSBAZGlyZWN0aW9uXHJcblx0XHQjXHJcblx0XHRpZiBkcmF3ID09ICdmJyB8fCBkcmF3ID09ICdmJnMnXHJcblx0XHRcdGcuZmlsbFRleHQgQHRleHQsIEB4IHx8IDAsIEB5IHx8IDAsIEBtYXhXaWR0aFxyXG5cdFx0aWYgZHJhdyA9PSAncycgfHwgZHJhdyA9PSAnZiZzJ1xyXG5cdFx0XHRnLnN0cm9rZVRleHQgQHRleHQsIEB4IHx8IDAsIEB5IHx8IDAsIEBtYXhXaWR0aFxyXG5cdFx0dGhpc1xyXG5cclxuc3R5bGVUeXBlRnVuYyA9XHJcblx0bGluZWFyOiAoZykgLT5cclxuXHRcdGdyYWRpZW50ID0gZy5jcmVhdGVMaW5lYXJHcmFkaWVudCBAeDAgfHwgMCwgQHkwIHx8IDAsIEB4MSB8fCAwLCBAeTEgfHwgMFxyXG5cdFx0Zm9yIGNvbG9yU3RvcCBpbiBAY29sb3JTdG9wc1xyXG5cdFx0XHRncmFkaWVudC5hZGRDb2xvclN0b3AgY29sb3JTdG9wLnBvcyB8fCAwLCBjb2xvclN0b3AuY29sb3JcclxuXHRcdGdyYWRpZW50XHJcblxyXG5cdHJhZGlhbDogKGcpIC0+XHJcblx0XHRncmFkaWVudCA9IGcuY3JlYXRlUmFkaWFsR3JhZGllbnQgQHgwIHx8IDAsIEB5MCB8fCAwLCBAcjAgfHwgMCwgQHgxIHx8IDAsIEB5MSB8fCAwLCBAcjEgfHwgMFxyXG5cdFx0Zm9yIGNvbG9yU3RvcCBpbiBAY29sb3JTdG9wc1xyXG5cdFx0XHRncmFkaWVudC5hZGRDb2xvclN0b3AgY29sb3JTdG9wLnBvcyB8fCAwLCBjb2xvclN0b3AuY29sb3JcclxuXHRcdGdyYWRpZW50XHJcblxyXG5cdHBhdHRlcm46IChnLCBtb2RlbCkgLT5cclxuXHRcdGltYWdlID0gbW9kZWwuZGF0YS5pbWFnZXNbQGltYWdlXVxyXG5cdFx0Zy5jcmVhdGVQYXR0ZXJuIGltYWdlLCBAcmVwZXRpdGlvbiB8fCBcInJlcGVhdFwiXHJcblxyXG5pbml0U3R5bGUgPSAoZywgbW9kZWwsIHN0eWxlKSAtPlxyXG5cdHN0eWxlVHlwZUZ1bmNbc3R5bGUudHlwZV0/LmNhbGwgc3R5bGUsIGcsIG1vZGVsXHJcblxyXG5zZXREcmF3U3R5bGUgPSAoZywgbW9kZWwpIC0+XHJcblx0c3Ryb2tlID0gQHN0cm9rZVxyXG5cdGlmIHN0cm9rZVxyXG5cdFx0aWYgc3Ryb2tlLmNvbnN0cnVjdG9yID09IE9iamVjdFxyXG5cdFx0XHRAc3Ryb2tlID0gaW5pdFN0eWxlIGcsIG1vZGVsLCBzdHJva2VcclxuXHRcdGcuc3Ryb2tlU3R5bGUgPSBAc3Ryb2tlXHJcblx0ZmlsbCA9IEBmaWxsXHJcblx0aWYgZmlsbFxyXG5cdFx0aWYgZmlsbC5jb25zdHJ1Y3RvciA9PSBPYmplY3RcclxuXHRcdFx0QGZpbGwgPSBpbml0U3R5bGUgZywgbW9kZWwsIGZpbGxcclxuXHRcdGcuZmlsbFN0eWxlID0gQGZpbGxcclxuXHRpZiBAbGluZVdpZHRoICE9IG51bGwgdGhlbiBnLmxpbmVXaWR0aCA9IEBsaW5lV2lkdGhcclxuXHRpZiBAbGluZUNhcCAhPSBudWxsIHRoZW4gZy5saW5lQ2FwID0gQGxpbmVDYXBcclxuXHRpZiBAbGluZUpvaW4gdGhlbiBnLmxpbmVKb2luID0gQGxpbmVKb2luXHJcblx0aWYgQGxpbmVEYXNoT2Zmc2V0ICE9IG51bGwgdGhlbiBnLmxpbmVEYXNoT2Zmc2V0ID0gQGxpbmVEYXNoT2Zmc2V0XHJcblx0dGhpc1xyXG5cclxuZHJhd05vZGUgPSAoZywgbW9kZWwsIG9wYWNpdHkpIC0+XHJcblx0Zy5zYXZlKClcclxuXHRtb2RlbC5hbmltYXRpb24uYW5pbWF0ZSB0aGlzXHJcblx0Zy50cmFuc2Zvcm0gQHNjYWxlWCB8fCAxLCBAc2tld1kgfHwgMCwgQHNrZXdYIHx8IDAsIEBzY2FsZVkgfHwgMSwgQG9yaWdYIHx8IDAsIEBvcmlnWSB8fCAwXHJcblx0bUFzY2FsZSA9IEBtb2RlbEFuZ2xlU2NhbGVcclxuXHRpZiBtQXNjYWxlIHRoZW4gZy5yb3RhdGUgKG1vZGVsLmFuZ2xlICogbUFzY2FsZSkgKiBNYXRoLlBJIC8gMTgwXHJcblx0aWYgQGFuZ2xlIHRoZW4gZy5yb3RhdGUgQGFuZ2xlICogTWF0aC5QSSAvIDE4MFxyXG5cdHNldERyYXdTdHlsZS5jYWxsIHRoaXMsIGcsIG1vZGVsXHJcblx0IyBTaGFkb3dzXHJcblx0aWYgQG5vU2hhZG93XHJcblx0XHRnLnNoYWRvd0JsdXIgPSAwXHJcblx0XHRnLnNoYWRvd09mZnNldFggPSAwXHJcblx0XHRnLnNoYWRvd09mZnNldFkgPSAwXHJcblx0aWYgQHNoYWRvd0JsdXIgIT0gbnVsbCB0aGVuIGcuc2hhZG93Qmx1ciA9IEBzaGFkb3dCbHVyXHJcblx0aWYgQHNoYWRvd0NvbG9yICE9IG51bGwgdGhlbiBnLnNoYWRvd0NvbG9yID0gQHNoYWRvd0NvbG9yXHJcblx0aWYgQHNoYWRvd09mZnNldFggIT0gbnVsbCB0aGVuIGcuc2hhZG93T2Zmc2V0WCA9IEBzaGFkb3dPZmZzZXRYXHJcblx0aWYgQHNoYWRvd09mZnNldFkgIT0gbnVsbCB0aGVuIGcuc2hhZG93T2Zmc2V0WSA9IEBzaGFkb3dPZmZzZXRZXHJcblx0Zy5nbG9iYWxBbHBoYSA9IG9wYWNpdHkgKiAoaWYgQG9wYWNpdHkgPT0gbnVsbCB0aGVuIDEgZWxzZSBAb3BhY2l0eSlcclxuXHJcblx0aWYgQGJlZm9yZVxyXG5cdFx0bW9kZWwuYW5pbWF0aW9uLnJlY2l2ZVByb3BzIHRoaXNcclxuXHRcdCNcclxuXHRcdGZvciBrZXksIG5vZGUgb2YgQGJlZm9yZVxyXG5cdFx0XHRpZiAhbm9kZS5oaWRlXHJcblx0XHRcdFx0ZHJhd05vZGUuY2FsbCBub2RlLCBnLCBtb2RlbCwgb3BhY2l0eVxyXG5cdFx0I1xyXG5cdFx0bW9kZWwuYW5pbWF0aW9uLmFuaW1hdGUgdGhpc1xyXG5cclxuXHRnLmJlZ2luUGF0aCgpXHJcblx0ZHJhd1R5cGVPYmpbQHR5cGVdPy5jYWxsIHRoaXMsIGcsIG1vZGVsLCBvcGFjaXR5XHJcblx0aWYgIUBub0Nsb3NlIHRoZW4gZy5jbG9zZVBhdGgoKVxyXG5cclxuXHRkcmF3ID0gQGRyYXcgfHwgJ2YmcydcclxuXHRpZiBkcmF3ID09ICdmJyB8fCBkcmF3ID09ICdmJnMnXHJcblx0XHRnLmZpbGwoKVxyXG5cdGlmIGRyYXcgPT0gJ3MnIHx8IGRyYXcgPT0gJ2YmcydcclxuXHRcdGcuc3Ryb2tlKClcclxuXHJcblx0aWYgQGNsaXBcclxuXHRcdGcuY2xpcCgpXHJcblxyXG5cdG1vZGVsLmFuaW1hdGlvbi5yZWNpdmVQcm9wcyB0aGlzXHJcblxyXG5cdGlmIEBhZnRlclxyXG5cdFx0Zm9yIGtleSwgbm9kZSBvZiBAYWZ0ZXJcclxuXHRcdFx0aWYgIW5vZGUuaGlkZVxyXG5cdFx0XHRcdGRyYXdOb2RlLmNhbGwgbm9kZSwgZywgbW9kZWwsIG9wYWNpdHlcclxuXHJcblx0aWYgTW9kZWwuZHJhd09yaWdpblxyXG5cdFx0Zy5maWxsU3R5bGUgPSAnI2YwMCdcclxuXHRcdGcuc2hhZG93Qmx1ciA9IDBcclxuXHRcdGcuc2hhZG93T2Zmc2V0WCA9IDBcclxuXHRcdGcuc2hhZG93T2Zmc2V0WSA9IDBcclxuXHRcdGcuZmlsbFJlY3QgLTIsIC0yLCA0LCA0XHJcblxyXG5cdGcucmVzdG9yZSgpXHJcblx0dGhpc1xyXG5cclxuXHJcbmRyYXdQYXJ0VHlwZSA9XHJcblx0cG9seTogKGcsIHZlcnRzLCBjYW1lcmEsIG1vZGVsKSAtPlxyXG5cdFx0diA9IHZlcnRzW0B2ZXJ0c1swXV1cclxuXHRcdHhjID0gY2FtZXJhLnhcclxuXHRcdHljID0gY2FtZXJhLnlcclxuXHRcdHp0ID0gWl9PUklHSU4gKyBjYW1lcmEuelxyXG5cdFx0eiA9ICgodi56IHx8IDApICsgenQpICogWl9UUkFOU0ZPUk1cclxuXHRcdHggPSAoKHYueCB8fCAwKSArIHhjKSAqIHpcclxuXHRcdHkgPSAoKHYueSB8fCAwKSArIHljKSAqIHpcclxuXHRcdGcubW92ZVRvIHgsIHlcclxuXHRcdGwgPSBAdmVydHMubGVuZ3RoIC0gMVxyXG5cdFx0Zm9yIGkgaW4gWzEuLmxdXHJcblx0XHRcdHYgPSB2ZXJ0c1tAdmVydHNbaV1dO1xyXG5cdFx0XHR6ID0gKCh2LnogfHwgMCkgKyB6dCkgKiBaX1RSQU5TRk9STVxyXG5cdFx0XHR4ID0gKCh2LnggfHwgMCkgKyB4YykgKiB6XHJcblx0XHRcdHkgPSAoKHYueSB8fCAwKSArIHljKSAqIHpcclxuXHRcdFx0Zy5saW5lVG8geCwgeVxyXG5cdFx0dGhpc1xyXG5cclxuXHRwYXJ0OiAoZywgdmVydHMsIGNhbWVyYSwgbW9kZWwsIG9wYWNpdHkpIC0+XHJcblx0XHRAbm9DbG9zZSA9IEBkcmF3ID0gdHJ1ZVxyXG5cdFx0IyBTYXZlIG1vZGVsIGRhdGFcclxuXHRcdHREYXRhID0gbW9kZWwuZGF0YVxyXG5cdFx0IyBTZWxlY3QgbW9kZWxcclxuXHRcdG0gPSB0RGF0YS5tb2RlbHM/W0Btb2RlbF1cclxuXHRcdGlmIG1cclxuXHRcdFx0bW9kZWwuZGF0YSA9IG1cclxuXHRcdFx0cGFydHMgPSBtLmRpcnNQYXJ0c1tAZGlyZWN0aW9uIHx8IDBdXHJcblx0XHRlbHNlXHJcblx0XHRcdHBhcnRzID0gbW9kZWwucGFydHNcclxuXHRcdGlmIHBhcnRzXHJcblx0XHRcdHYgPSB2ZXJ0c1tAdmVydF1cclxuXHRcdFx0YyA9XHJcblx0XHRcdFx0eDogY2FtZXJhLnggKyAodi54IHx8IDApXHJcblx0XHRcdFx0eTogY2FtZXJhLnkgKyAodi55IHx8IDApXHJcblx0XHRcdFx0ejogY2FtZXJhLnogKyAodi56IHx8IDApXHJcblxyXG5cdFx0XHRwYXJ0ID0gcGFydHNbQHBhcnRdXHJcblx0XHRcdGlmIHBhcnRcclxuXHRcdFx0XHR0UGFydHMgPSBtb2RlbC5wYXJ0c1xyXG5cdFx0XHRcdG1vZGVsLnBhcnRzID0gcGFydHNcclxuXHRcdFx0XHRmb3IgZmFjZSBpbiBwYXJ0LmZhY2VzXHJcblx0XHRcdFx0XHRkcmF3UGFydC5jYWxsIGZhY2UsIGcsIG1vZGVsLCBjLCBvcGFjaXR5XHJcblx0XHRcdFx0bW9kZWwucGFydHMgPSB0UGFydHNcclxuXHRcdG1vZGVsLmRhdGEgPSB0RGF0YVxyXG5cdFx0dGhpc1xyXG5cclxuXHRub2RlOiAoZywgdmVydHMsIGNhbWVyYSwgbW9kZWwsIG9wYWNpdHkpIC0+XHJcblx0XHR0cmFuc2Zvcm1WZXJ0IHZlcnRzW0B2ZXJ0XSwgY2FtZXJhXHJcblx0XHRcdC5hcHBseSBnXHJcblx0XHRkcmF3VHlwZU9iai5ub2RlLmNhbGwgdGhpcywgZywgbW9kZWwsIG9wYWNpdHlcclxuXHRcdHRoaXNcclxuXHJcblx0YXR0YWNoOiAoZywgbW9kZWwsIG9wYWNpdHkpIC0+XHJcblx0XHR0cmFuc2Zvcm1WZXJ0IHZlcnRzW0B2ZXJ0XSwgY2FtZXJhXHJcblx0XHRcdC5hcHBseSBnXHJcblx0XHRkYXRhID0gbW9kZWwuYXR0YWNobWVudFtAYXR0YWNoXVxyXG5cdFx0aWYgZGF0YVxyXG5cdFx0XHRkcmF3VHlwZU9iai5ub2RlLmNhbGwgdGhpcywgZywgbW9kZWwsIG9wYWNpdHksIGRhdGFcclxuXHRcdHRoaXNcclxuXHJcblx0ZWxpcHNlOiAoZywgdmVydHMsIGNhbWVyYSkgLT5cclxuXHRcdHYgPSB0cmFuc2Zvcm1WZXJ0IHZlcnRzW0B2ZXJ0MV0sIGNhbWVyYVxyXG5cdFx0eDEgPSB2LnhcclxuXHRcdHkxID0gdi55XHJcblx0XHR2ID0gdHJhbnNmb3JtVmVydCB2ZXJ0c1tAdmVydDJdLCBjYW1lcmFcclxuXHRcdHgyID0gdi54XHJcblx0XHR5MiA9IHYueVxyXG5cdFx0cnggPSAoeDIgLSB4MSkgLyAyXHJcblx0XHRyeSA9ICh5MiAtIHkxKSAvIDJcclxuXHRcdGcuZWxsaXBzZShcclxuXHRcdFx0eDEgKyByeCxcclxuXHRcdFx0eTEgKyByeSxcclxuXHRcdFx0cngsXHJcblx0XHRcdHJ5LFxyXG5cdFx0XHQoQHJvdGF0aW9uIHx8IDApICogTWF0aC5QSSAvIDE4MCxcclxuXHRcdFx0KEBzdGFydEFuZ2xlIHx8IDApICogTWF0aC5QSSAvIDE4MCxcclxuXHRcdFx0KEBlbmRBbmdsZSB8fCAzNjApICogTWF0aC5QSSAvIDE4MCxcclxuXHRcdFx0aWYgQGNsb2Nrd2lzZSB0aGVuIGZhbHNlIGVsc2UgdHJ1ZSlcclxuXHRcdHRoaXNcclxuXHJcblxyXG5kcmF3UGFydCA9IChnLCBtb2RlbCwgY2FtZXJhLCBvcGFjaXR5KSAtPlxyXG5cdGcuc2F2ZSgpXHJcblx0c3Ryb2tlID0gQHN0cm9rZVxyXG5cdHNldERyYXdTdHlsZS5jYWxsIHRoaXMsIGcsIG1vZGVsXHJcblx0Zy5nbG9iYWxBbHBoYSA9IG9wYWNpdHkgKiAoaWYgQG9wYWNpdHkgPT0gbnVsbCB0aGVuIDEgZWxzZSBAb3BhY2l0eSlcclxuXHJcblx0Zy5iZWdpblBhdGgoKVxyXG5cdGRyYXdQYXJ0VHlwZVtAdHlwZSB8fCAncG9seSddPy5jYWxsIHRoaXMsIGcsIG1vZGVsLmRhdGEudmVydHMsIGNhbWVyYSwgbW9kZWwsIG9wYWNpdHlcclxuXHRpZiAhQG5vQ2xvc2UgdGhlbiBnLmNsb3NlUGF0aCgpXHJcblxyXG5cdGRyYXcgPSBAZHJhdyB8fCAnZiZzJ1xyXG5cdGlmIGRyYXcgPT0gJ2YnIHx8IGRyYXcgPT0gJ2YmcydcclxuXHRcdGcuZmlsbCgpXHJcblx0aWYgZHJhdyA9PSAncycgfHwgZHJhdyA9PSAnZiZzJ1xyXG5cdFx0Zy5zdHJva2UoKVxyXG5cclxuXHRnLnJlc3RvcmUoKVxyXG5cdHRoaXNcclxuXHJcblpfVFJBTlNGT1JNID0gMC4wMDA1XHJcblpfT1JJR0lOID0gMSAvIFpfVFJBTlNGT1JNXHJcblxyXG50cnNmT2JqID1cclxuXHR4OiAwXHJcblx0eTogMFxyXG5cdHNjYWxlOiAxXHJcblx0YXBwbHk6IChnKSAtPlxyXG5cdFx0Zy50cmFuc2Zvcm0gQHNjYWxlLCAwLCAwLCBAc2NhbGUsIEB4LCBAeVxyXG5cclxuXHJcblxyXG5jbGFzcyBNb2RlbFxyXG5cdEB0cmFuc2Zvcm06ICh4LCB5LCB6LCBjYW1lcmEpIC0+XHJcblx0XHR6ID0gKFpfT1JJR0lOICsgeiArIGNhbWVyYS56KSAqIFpfVFJBTlNGT1JNXHJcblx0XHR0cnNmT2JqLnggPSAoeCArIGNhbWVyYS54KSAqIHpcclxuXHRcdHRyc2ZPYmoueSA9ICh5ICsgY2FtZXJhLnkpICogelxyXG5cdFx0dHJzZk9iai5zY2FsZSA9IHpcclxuXHRcdHRyc2ZPYmpcclxuXHJcblx0YXR0YWNobWVudDogW11cclxuXHRhbmltYXRpb246IG5ldyBBbmltYXRpb25cclxuXHRhbmdsZTogMFxyXG5cclxuXHRjb25zdHJ1Y3RvcjogKEBkYXRhKSAtPlxyXG5cclxuXHRzZXREYXRhOiAoQGRhdGEpIC0+XHJcblx0XHRAc2V0QW5nbGUgQGFuZ2xlXHJcblxyXG5cdHNldEFuZ2xlOiAoYW5nbGUpIC0+XHJcblx0XHRAYW5nbGUgPSBhbmdsZSA9IGFuZ2xlICUgMzYwXHJcblx0XHRAYW5pbWF0aW9uLnNldEFuZ2xlIGFuZ2xlXHJcblx0XHRkaXJzID0gQGRhdGEuZGlyc1xyXG5cdFx0aWYgZGlyc1xyXG5cdFx0XHRuID0gZGlycy5sZW5naHRcclxuXHRcdFx0aWYgbiA+IDFcclxuXHRcdFx0XHRkQW5nbGUgPSAzNjAgLyBuXHJcblx0XHRcdFx0YW5nbGUgKz0gZEFuZ2xlID4+IDFcclxuXHRcdFx0XHRpZiBhbmdsZSA8IDAgdGhlbiBhbmdsZSArPSAzNjBcclxuXHRcdFx0XHRAbW9kZWwgPSBkaXJzW01hdGguZmxvb3IoYW5nbGUgLyBkQW5nbGUpXVxyXG5cdFx0XHRlbHNlXHJcblx0XHRcdFx0QG1vZGVsID0gZGlyc1swXVxyXG5cdFx0ZWxzZVxyXG5cdFx0XHRAbW9kZWwgPSBudWxsXHJcblxyXG5cdFx0cGFydHMgPSBAZGF0YS5kaXJzUGFydHNcclxuXHRcdGlmIHBhcnRzXHJcblx0XHRcdG4gPSBwYXJ0cy5sZW5naHRcclxuXHRcdFx0aWYgbiA+IDFcclxuXHRcdFx0XHRkQW5nbGUgPSAzNjAgLyBuXHJcblx0XHRcdFx0YW5nbGUgKz0gZEFuZ2xlID4+IDFcclxuXHRcdFx0XHRpZiBhbmdsZSA8IDAgdGhlbiBhbmdsZSArPSAzNjBcclxuXHRcdFx0XHRAcGFydHMgPSBwYXJ0c1tNYXRoLmZsb29yKGFuZ2xlIC8gZEFuZ2xlKV1cclxuXHRcdFx0ZWxzZVxyXG5cdFx0XHRcdEBwYXJ0cyA9IHBhcnRzWzBdXHJcblx0XHRlbHNlXHJcblx0XHRcdEBwYXJ0cyA9IG51bGxcclxuXHJcblx0ZHJhdzJEOiAoZywgb3BhY2l0eSA9IDEpIC0+XHJcblx0XHRpZiBAbW9kZWxcclxuXHRcdFx0Zm9yIGtleSwgbm9kZSBvZiBAbW9kZWxcclxuXHRcdFx0XHRpZiAhbm9kZS5oaWRlXHJcblx0XHRcdFx0XHRkcmF3Tm9kZS5jYWxsIG5vZGUsIGcsIHRoaXMsIG9wYWNpdHlcclxuXHJcblx0ZHJhd05vZGU6IChnLCBub2RlLCBvcGFjaXR5ID0gMSkgLT5cclxuXHRcdGlmIEBtb2RlbFxyXG5cdFx0XHRub2RlID0gQG1vZGVsW25vZGVdXHJcblx0XHRcdGlmIG5vZGVcclxuXHRcdFx0XHRkcmF3Tm9kZS5jYWxsIG5vZGUsIGcsIHRoaXMsIG9wYWNpdHlcclxuXHJcblx0ZHJhd1BhcnQ6IChnLCBwYXJ0LCBjYW1lcmEsIG9wYWNpdHkgPSAxKSAtPlxyXG5cdFx0Zm9yIGZhY2UgaW4gcGFydC5mYWNlc1xyXG5cdFx0XHRkcmF3UGFydC5jYWxsIGZhY2UsIGcsIHRoaXMsIGNhbWVyYSwgb3BhY2l0eVxyXG5cclxuXHRkcmF3UGFydHM6IChnLCBjYW1lcmEsIG9wYWNpdHkgPSAxKSAtPlxyXG5cdFx0aWYgQHBhcnRzXHJcblx0XHRcdGZvciBfLCBwYXJ0IG9mIEBwYXJ0c1xyXG5cdFx0XHRcdGlmICFwYXJ0LmhpZGVcclxuXHRcdFx0XHRcdGZvciBmYWNlIGluIHBhcnQuZmFjZXNcclxuXHRcdFx0XHRcdFx0ZHJhd1BhcnQuY2FsbCBmYWNlLCBnLCB0aGlzLCBjYW1lcmEsIG9wYWNpdHlcclxuXHJcbnRyYW5zZm9ybSA9IE1vZGVsLnRyYW5zZm9ybVxyXG5cclxudHJhbnNmb3JtVmVydCA9ICh2LCBjYW1lcmEpIC0+XHJcblx0dHJhbnNmb3JtIHYueCB8fCAwLCB2LnkgfHwgMCwgdi56IHx8IDAsIGNhbWVyYVxyXG5cclxuZXhwb3J0IHsgTW9kZWxEYXRhLCBNb2RlbCB9IiwiY2xhc3MgRXZlbnRFbW1pdGVyXHJcblx0aGFuZGxlcnM6IFtdXHJcblxyXG5cdG9uOiAoZXZlbnQsIGNhbGxiYWNrKSAtPlxyXG5cdFx0aWYgY2FsbGJhY2tcclxuXHRcdFx0aGFuZGxlciA9IEBoYW5kbGVyc1tldmVudF1cclxuXHRcdFx0aWYgIWhhbmRsZXJcclxuXHRcdFx0XHRAaGFuZGxlcnNbZXZlbnRdID0gaGFuZGxlciA9IFtdXHJcblx0XHRcdGlmIGhhbmRsZXIuaW5kZXhPZihjYWxsYmFjaykgPCAwXHJcblx0XHRcdFx0aGFuZGxlci5wdXNoIGNhbGxiYWNrXHJcblx0XHR0aGlzXHJcblxyXG5cdG9mZjogKGV2ZW50LCBjYWxsYmFjaykgLT5cclxuXHRcdGlmIGNhbGxiYWNrXHJcblx0XHRcdGhhbmRsZXIgPSBAaGFuZGxlcnNbZXZlbnRdXHJcblx0XHRcdGlmIGhhbmRsZXJcclxuXHRcdFx0XHRpbmRleCA9IGhhbmRsZXIuaW5kZXhPZiBjYWxsYmFja1xyXG5cdFx0XHRcdGlmIGluZGV4ID49IDBcclxuXHRcdFx0XHRcdGhhbmRsZXIuc3BsaWNlIGluZGV4LCAxXHJcblx0XHR0aGlzXHJcblxyXG5cdHRyaWdnZXI6IChldmVudCwgYXJncykgLT5cclxuXHRcdGhhbmRsZXIgPSBAaGFuZGxlcnNbZXZlbnRdXHJcblx0XHRpZiBoYW5kbGVyXHJcblx0XHRcdGZvciBjYWxsYmFjayBpbiBoYW5kbGVyXHJcblx0XHRcdFx0Y2FsbGJhY2suYXBwbHkgdGhpcywgYXJnc1xyXG5cdFx0dGhpc1xyXG5cclxuXHRyZW1vdmVFdmVudDogKGV2ZW50KSAtPlxyXG5cdFx0ZGVsZXRlIEBoYW5kbGVyc1tldmVudF1cclxuXHRcdHRoaXNcclxuXHJcbmV4cG9ydCB7IEV2ZW50RW1taXRlciB9IiwiaW1wb3J0IHsgRXZlbnRFbW1pdGVyIH0gZnJvbSAnLi9ldmVudHMnXHJcblxyXG4jIEV2ZW50czpcclxuIyAnY2hhbmdlcGVyY2VudCcgdHJpZ2dlciB3aGVuIHNvbWUgcmVzb3JjZXMgbG9hZGVkXHJcbiMgJ2xvYWQnIHRyaWdnZXIgd2hlbiBhbGwgcmVzb3JjZXMgbG9hZGVkXHJcblxyXG5jbGFzcyBMb2FkZXIgZXh0ZW5kcyBFdmVudEVtbWl0ZXJcclxuXHRsb2FkUmVzTnVtYmVyID0gMFxyXG5cdGFsbFJlc0xvYWRlciA9IDBcclxuXHJcblx0cmVzZXQ6ICgpIC0+XHJcblx0XHRsb2FkUmVzTnVtYmVyID0gYWxsUmVzTG9hZGVyID0gMFxyXG5cclxuXHRnZXRQZXJjZW50OiAtPlxyXG5cdFx0MSAtIGlmIGFsbFJlc0xvYWRlciAhPSAwIHRoZW4gbG9hZFJlc051bWJlciAvIGFsbFJlc0xvYWRlciBlbHNlIDBcclxuXHJcblx0dXBkYXRlUGVyY2VudDogKCkgLT5cclxuXHRcdEB0cmlnZ2VyICdjaGFuZ2VwZXJjZW50JywgWyBAZ2V0UGVyY2VudCgpIF1cclxuXHJcblx0bG9hZDogKGNhbGxiYWNrKSAtPlxyXG5cdFx0X3RoaXMgPSB0aGlzXHJcblx0XHRsb2FkUmVzTnVtYmVyKytcclxuXHRcdGFsbFJlc0xvYWRlcisrXHJcblx0XHQjIEB1cGRhdGVQZXJjZW50KClcclxuXHRcdC0+XHJcblx0XHRcdGNhbGxiYWNrPy5hcHBseSBfdGhpcywgYXJndW1lbnRzXHJcblx0XHRcdGxvYWRSZXNOdW1iZXItLVxyXG5cdFx0XHRpZiBsb2FkUmVzTnVtYmVyIDw9IDBcclxuXHRcdFx0XHRfdGhpcy5yZXNldCgpXHJcblx0XHRcdFx0X3RoaXMudHJpZ2dlciAnbG9hZCdcclxuXHRcdFx0X3RoaXMudXBkYXRlUGVyY2VudCgpXHJcblxyXG5cdGxvYWRKc29uOiAoZmlsZSwgY2FsbGJhY2spIC0+XHJcblx0XHRjYWxsYmFjayA9IEBsb2FkIGNhbGxiYWNrXHJcblx0XHQkLmdldEpTT04gZmlsZSArICcuanNvbidcclxuXHRcdFx0LmRvbmUgY2FsbGJhY2tcclxuXHRcdFx0LmZhaWwgLT5cclxuXHRcdFx0XHRjYWxsYmFjayBudWxsXHJcblxyXG5cdGxvYWRJbWFnZTogKGZpbGUsIGNhbGxiYWNrKSAtPlxyXG5cdFx0Y2FsbGJhY2sgPSBAbG9hZCBjYWxsYmFja1xyXG5cdFx0aW1nID0gbmV3IEltYWdlXHJcblx0XHRpbWcub25sb2FkID0gLT5cclxuXHRcdFx0Y2FsbGJhY2sgaW1nXHJcblx0XHRpbWcuc3JjID0gZmlsZVxyXG5cdFx0aW1nXHJcblxyXG5leHBvcnQgeyBMb2FkZXIgfSIsImltcG9ydCB7IE1vZGVsRGF0YSwgTW9kZWwgfSBmcm9tICcuL21vZGVsJ1xuaW1wb3J0IHsgQW5pbWF0aW9uRGF0YSB9IGZyb20gJy4vYW5pbWF0aW9uJ1xuaW1wb3J0IHsgTG9hZGVyIH0gZnJvbSAnLi9sb2FkZXInXG5cbiQoZG9jdW1lbnQpLnJlYWR5IC0+XG5cdCRjYW52YXMgPSAkICcjY2FudmFzJ1xuXHRjYW52YXMgPSAkY2FudmFzLmdldCAwXG5cdGNvbnRleHQgPSBjYW52YXMuZ2V0Q29udGV4dCAnMmQnLCBhbHBoYTogZmFsc2VcblxuXHRtb2RlbEZpbGUgPSAnbW9kZWxzL3Rlc3QxJ1xuXHRsb2FkZXIgPSBuZXcgTG9hZGVyXG5cdG1vZGVsID0gbmV3IE1vZGVsXG5cdG1vZGVsRGF0YSA9IG5ldyBNb2RlbERhdGFcblx0YW5pbWF0aW9uRnJhbWUgPSBudWxsXG5cdGNhbWVyYSA9XG5cdFx0Y2FudmFzOiBjYW52YXNcblx0XHRnOiBjb250ZXh0XG5cdFx0eDogMFxuXHRcdHk6IDBcblx0XHR6OiAwXG5cblx0cmVzaXplID0gLT5cblx0XHRjYW52YXMud2lkdGggPSAkKHdpbmRvdykud2lkdGgoKVxuXHRcdGNhbnZhcy5oZWlnaHQgPSAkKHdpbmRvdykuaGVpZ2h0KCkgLSAkKCcjY2FudmFzJykub2Zmc2V0KCkudG9wXG5cblx0cmVzaXplKClcblxuXHQkKHdpbmRvdykub24gJ3Jlc2l6ZScsIHJlc2l6ZVxuXG5cdG1vZGVsUmVmcmVzaCA9IC0+XG4jXHRcdGZvciBrZXksIF8gb2YgbW9kZWxEYXRhXG4jXHRcdFx0ZGVsZXRlIG1vZGVsRGF0YVtrZXldXG5cdFx0bW9kZWxEYXRhLmxvYWQgbG9hZGVyLCBtb2RlbEZpbGVcblx0XG5cdGxvYWRlci5vbiAnbG9hZCcsIC0+XG5cdFx0bW9kZWwuc2V0RGF0YSBtb2RlbERhdGFcblx0XHRpZiBtb2RlbC5hbmltYXRpb24uZGF0YVxuXHRcdFx0IyBtb2RlbC5hbmltYXRpb24uc2V0QW5pbSAndGVzdCcsIDBcblx0XHRcdCNcblx0XHRcdGNvbnRhaW5lciA9ICQgJy5qcy1mcmFtZS1jb250YWluZXInXG5cdFx0XHRjb250YWluZXIuZW1wdHkoKVxuXHRcdFx0Zm9yIGFuaW0sIF8gb2YgbW9kZWwuYW5pbWF0aW9uLmRhdGFcblx0XHRcdFx0Y29udGFpbmVyLmFwcGVuZCBcIjxhIGNsYXNzPSdkcm9wZG93bi1pdGVtIGpzLWZyYW1lLXNlbGVjdCcgaHJlZj0nIyc+I3thbmltfTwvYT5cIlxuXHRcdFx0bW9kZWwuYW5pbWF0aW9uLnNldEFuaW0gYW5pbWF0aW9uRnJhbWUsIG1vZGVsLmFuZ2xlXG5cdFx0XHQkKCcuanMtZnJhbWUtc2VsZWN0JykuY2xpY2sgLT5cblx0XHRcdFx0YW5pbWF0aW9uRnJhbWUgPSAkKHRoaXMpLnRleHQoKVxuXHRcdFx0XHRtb2RlbC5hbmltYXRpb24uc2V0QW5pbSBhbmltYXRpb25GcmFtZSwgbW9kZWwuYW5nbGVcblxuXHRjb25zb2xlLmxvZyBtb2RlbFxuXG5cdG1SZWZyZXNoSW50ZXJ2YWwgPSBzZXRJbnRlcnZhbCBtb2RlbFJlZnJlc2gsIDUwMFxuXG5cdHJlbmRlciA9IChkZWx0YSkgLT5cblx0XHRjb250ZXh0LnNhdmUoKVxuXHRcdHcgPSBjYW52YXMud2lkdGhcblx0XHRoID0gY2FudmFzLmhlaWdodFxuXHRcdGN4ID0gdyAvIDJcblx0XHRjeSA9IDBcblx0XHRjb250ZXh0LmZpbGxTdHlsZSA9ICcjZmZmJ1xuXHRcdGNvbnRleHQuZmlsbFJlY3QgMCwgMCwgdywgaFxuXHRcdGNvbnRleHQuYmVnaW5QYXRoKClcblx0XHRjb250ZXh0LmxpbmVXaWR0aCA9IDJcblx0XHRjb250ZXh0LnN0cm9rZVN0eWxlID0gJyNmMDAnXG5cdFx0Y29udGV4dC5tb3ZlVG8gY3gsIDBcblx0XHRjb250ZXh0LmxpbmVUbyBjeCwgaFxuXHRcdGNvbnRleHQubW92ZVRvIDAsIGN5XG5cdFx0Y29udGV4dC5saW5lVG8gdywgY3lcblx0XHRjb250ZXh0LnN0cm9rZSgpXG5cblx0XHRjb250ZXh0LnRyYW5zbGF0ZSBjeCwgY3lcblxuXHRcdG1vZGVsLmFuaW1hdGlvbi5wbGF5KClcblxuXHRcdG1vZGVsLmRyYXdQYXJ0cyBjb250ZXh0LCBjYW1lcmFcblxuXHRcdE1vZGVsLnRyYW5zZm9ybSgwLCAwLCAwLCBjYW1lcmEpXG5cdFx0XHQuYXBwbHkgY29udGV4dFxuXG5cdFx0bW9kZWwuZHJhdzJEIGNvbnRleHRcblxuXHRcdGNvbnRleHQucmVzdG9yZSgpXG5cdFx0IyBcblx0XHR3aW5kb3cucmVxdWVzdEFuaW1hdGlvbkZyYW1lIHJlbmRlclxuXG5cdHJlbmRlcigwKVxuXG5cdG9sZE1vdXNlWCA9IG9sZE1vdXNlWSA9MFxuXHRtb3ZlQ2FtZXJhID0gKGUpIC0+XG5cdFx0Y2FtZXJhLnggKz0gZS5jbGllbnRYIC0gb2xkTW91c2VYXG5cdFx0Y2FtZXJhLnkgKz0gZS5jbGllbnRZIC0gb2xkTW91c2VZXG5cdFx0b2xkTW91c2VYID0gZS5jbGllbnRYXG5cdFx0b2xkTW91c2VZID0gZS5jbGllbnRZXG5cblx0JGNhbnZhcy5vbiAnbW91c2Vkb3duJywgKGUpIC0+XG5cdFx0b2xkTW91c2VYID0gZS5jbGllbnRYXG5cdFx0b2xkTW91c2VZID0gZS5jbGllbnRZXG5cdFx0JGNhbnZhcy5vbiAnbW91c2Vtb3ZlJywgbW92ZUNhbWVyYVxuXG5cdCRjYW52YXMub24gJ3RvdWNoc3RhcnQnLCAoZSkgLT5cblx0XHRvbGRNb3VzZVggPSBlLnRvdWNoZXNbMF0uY2xpZW50WFxuXHRcdG9sZE1vdXNlWSA9IGUudG91Y2hlc1swXS5jbGllbnRZXG5cblx0JGNhbnZhcy5vbiAndG91Y2htb3ZlJywgKGUpIC0+XG5cdFx0bW92ZUNhbWVyYSBlLnRvdWNoZXNbMF1cblxuXHQkY2FudmFzLm9uICdtb3VzZXVwJywgLT5cblx0XHQkY2FudmFzLm9mZiAnbW91c2Vtb3ZlJywgbW92ZUNhbWVyYVxuXG5cdCQoJy5qcy16LW51bWJlcicpXG5cdFx0LnZhbCBjYW1lcmEuelxuXHRcdC5vbiAnaW5wdXQgY2hhbmdlJywgLT5cblx0XHRcdGNhbWVyYS56ID0gKyAkKHRoaXMpLnZhbCgpXG5cblx0JCgnLmpzLWFuZ2xlLW51bWJlcicpXG5cdFx0LnZhbCBtb2RlbC5hbmdsZVxuXHRcdC5vbiAnaW5wdXQgY2hhbmdlJywgLT5cblx0XHRcdG1vZGVsLnNldEFuZ2xlICsgJCh0aGlzKS52YWwoKVxuXG5cdCQoJy5qcy1tb2RlbC1zZWxlY3QnKS5jbGljayAtPlxuXHRcdG1vZGVsRGF0YSA9IG5ldyBNb2RlbERhdGFcblx0XHRtb2RlbEZpbGUgPSAkKHRoaXMpLmRhdGEgJ2ZpbGUnXG5cblx0JCgnLmpzLWFuaW0tc2VsZWN0JykuY2xpY2sgLT5cblx0XHRmaWxlID0gJCh0aGlzKS5kYXRhICdmaWxlJ1xuXHRcdG1vZGVsLmFuaW1hdGlvbi5kYXRhID0gbmV3IEFuaW1hdGlvbkRhdGFcblx0XHRtb2RlbC5hbmltYXRpb24uZGF0YS5sb2FkIGxvYWRlciwgZmlsZVxuXHRcdCQoJy5qcy1hbmltLXJlZnJlc2gnKS5kYXRhICdmaWxlJywgZmlsZVxuXHRcdCNcblx0XHQkKCcuanMtcmVmcmVzaC1tb2RlbCcpLnByb3AgJ2NoZWNrZWQnLCBmYWxzZVxuXHRcdGNsZWFySW50ZXJ2YWwgbVJlZnJlc2hJbnRlcnZhbFxuXG5cdE1vZGVsLmRyYXdPcmlnaW4gPSB0cnVlXG5cdCQoJy5qcy1kcmF3LW9yaWdpbicpLmNoYW5nZSAtPlxuXHRcdE1vZGVsLmRyYXdPcmlnaW4gPSAkKHRoaXMpLnByb3AgJ2NoZWNrZWQnXG5cblx0JCgnLmpzLXJlZnJlc2gtbW9kZWwnKS5jaGFuZ2UgLT5cblx0XHRpZiAkKHRoaXMpLnByb3AgJ2NoZWNrZWQnXG5cdFx0XHRtUmVmcmVzaEludGVydmFsID0gc2V0SW50ZXJ2YWwgbW9kZWxSZWZyZXNoLCA1MDBcblx0XHRlbHNlXG5cdFx0XHRjbGVhckludGVydmFsIG1SZWZyZXNoSW50ZXJ2YWxcblxuXHQkKCcuanMtcmVzZXQtcG9zJykuY2xpY2sgLT5cblx0XHRjYW1lcmEueCA9IGNhbWVyYS55ID0gY2FtZXJhLnogPSAwXG5cdFx0JCgnLmpzLXotbnVtYmVyJykudmFsICcwJ1xuXG5cdGZ1bGxzY3JlZW4gPSBmYWxzZVxuXHQkKCcuanMtZnVsbC1zY3JlZW4nKS5jbGljayAtPlxuXHRcdGlmIGZ1bGxzY3JlZW5cblx0XHRcdGNhbmNlbEZ1bGxzY3JlZW4oKVxuXHRcdGVsc2Vcblx0XHRcdGxhdW5jaEZ1bGxTY3JlZW4gZG9jdW1lbnQuZG9jdW1lbnRFbGVtZW50XG5cdFx0ZnVsbHNjcmVlbiA9ICFmdWxsc2NyZWVuXG5cblx0bGF1bmNoRnVsbFNjcmVlbiA9IChlbGVtZW50KSAtPlxuXHRcdGlmIGVsZW1lbnQucmVxdWVzdEZ1bGxTY3JlZW5cblx0XHRcdGVsZW1lbnQucmVxdWVzdEZ1bGxTY3JlZW4oKVxuXHRcdGVsc2UgaWYgZWxlbWVudC5tb3pSZXF1ZXN0RnVsbFNjcmVlblxuXHRcdFx0ZWxlbWVudC5tb3pSZXF1ZXN0RnVsbFNjcmVlbigpXG5cdFx0ZWxzZSBpZiBlbGVtZW50LndlYmtpdFJlcXVlc3RGdWxsU2NyZWVuXG5cdFx0XHRlbGVtZW50LndlYmtpdFJlcXVlc3RGdWxsU2NyZWVuKClcblxuXHRjYW5jZWxGdWxsc2NyZWVuID0gLT5cblx0XHRpZiBkb2N1bWVudC5jYW5jZWxGdWxsU2NyZWVuXG5cdFx0XHRkb2N1bWVudC5jYW5jZWxGdWxsU2NyZWVuKClcblx0XHRlbHNlIGlmIGRvY3VtZW50Lm1vekNhbmNlbEZ1bGxTY3JlZW5cblx0XHRcdGRvY3VtZW50Lm1vekNhbmNlbEZ1bGxTY3JlZW4oKVxuXHRcdGVsc2UgaWYgZG9jdW1lbnQud2Via2l0Q2FuY2VsRnVsbFNjcmVlblxuXHRcdFx0ZG9jdW1lbnQud2Via2l0Q2FuY2VsRnVsbFNjcmVlbigpIl19
